// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated


struct TArray_float_GeneratedAnnotation final : ManagedStructureAnnotation<
	TArray_float,
	std::is_constructible<TArray_float>::value,
	std::is_destructible<TArray_float>::value
> {
	TArray_float_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TArray_float", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};

struct TObjectPtr_UStruct_GeneratedAnnotation final : ManagedStructureAnnotation<
	TObjectPtr_UStruct,
	std::is_constructible<TObjectPtr_UStruct>::value,
	std::is_destructible<TObjectPtr_UStruct>::value
> {
	TObjectPtr_UStruct_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TObjectPtr_UStruct", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};

struct TObjectPtr_UEnum_GeneratedAnnotation final : ManagedStructureAnnotation<
	TObjectPtr_UEnum,
	std::is_constructible<TObjectPtr_UEnum>::value,
	std::is_destructible<TObjectPtr_UEnum>::value
> {
	TObjectPtr_UEnum_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TObjectPtr_UEnum", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};

struct TObjectPtr_UField_GeneratedAnnotation final : ManagedStructureAnnotation<
	TObjectPtr_UField,
	std::is_constructible<TObjectPtr_UField>::value,
	std::is_destructible<TObjectPtr_UField>::value
> {
	TObjectPtr_UField_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TObjectPtr_UField", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};

struct TObjectPtr_UClass_GeneratedAnnotation final : ManagedStructureAnnotation<
	TObjectPtr_UClass,
	std::is_constructible<TObjectPtr_UClass>::value,
	std::is_destructible<TObjectPtr_UClass>::value
> {
	TObjectPtr_UClass_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TObjectPtr_UClass", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};

struct TObjectPtr_UScriptStruct_GeneratedAnnotation final : ManagedStructureAnnotation<
	TObjectPtr_UScriptStruct,
	std::is_constructible<TObjectPtr_UScriptStruct>::value,
	std::is_destructible<TObjectPtr_UScriptStruct>::value
> {
	TObjectPtr_UScriptStruct_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TObjectPtr_UScriptStruct", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};

struct TArray_FString_GeneratedAnnotation final : ManagedStructureAnnotation<
	TArray_FString,
	std::is_constructible<TArray_FString>::value,
	std::is_destructible<TArray_FString>::value
> {
	TArray_FString_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TArray_FString", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};

struct TObjectPtr_UFunction_GeneratedAnnotation final : ManagedStructureAnnotation<
	TObjectPtr_UFunction,
	std::is_constructible<TObjectPtr_UFunction>::value,
	std::is_destructible<TObjectPtr_UFunction>::value
> {
	TObjectPtr_UFunction_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TObjectPtr_UFunction", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};

struct TArray_int_GeneratedAnnotation final : ManagedStructureAnnotation<
	TArray_int,
	std::is_constructible<TArray_int>::value,
	std::is_destructible<TArray_int>::value
> {
	TArray_int_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TArray_int", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};

struct TObjectPtr_UObject_GeneratedAnnotation final : ManagedStructureAnnotation<
	TObjectPtr_UObject,
	std::is_constructible<TObjectPtr_UObject>::value,
	std::is_destructible<TObjectPtr_UObject>::value
> {
	TObjectPtr_UObject_GeneratedAnnotation(ModuleLibrary& ml) : ManagedStructureAnnotation("TObjectPtr_UObject", ml) {
	}
	virtual bool canCopy() const override { return true; }
	virtual bool canClone() const override { return true; }
	virtual bool canMove() const override { return true; }
	void init() {
	}
};
// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Misc/EngineVersionBase.h:28:7
struct FEngineVersionBase_GeneratedAnnotation : ManagedStructureAnnotation<FEngineVersionBase> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FEngineVersionBase>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FEngineVersionBase>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FEngineVersionBase>::value; }
	FEngineVersionBase_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FEngineVersionBase", ml, "FEngineVersionBase") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Misc/OutputDevice.h:129:7
struct FOutputDevice_GeneratedAnnotation : ManagedStructureAnnotation<FOutputDevice> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FOutputDevice>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FOutputDevice>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FOutputDevice>::value; }
	FOutputDevice_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FOutputDevice", ml, "FOutputDevice") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Serialization/Archive.h:737:9
struct FArchiveState_FFastPathLoadBuffer_GeneratedAnnotation : ManagedStructureAnnotation<FArchiveState::FFastPathLoadBuffer> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FArchiveState::FFastPathLoadBuffer>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FArchiveState::FFastPathLoadBuffer>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FArchiveState::FFastPathLoadBuffer>::value; }
	FArchiveState_FFastPathLoadBuffer_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FFastPathLoadBuffer", ml, "FArchiveState::FFastPathLoadBuffer") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(StartFastPathLoadBuffer)>("StartFastPathLoadBuffer","StartFastPathLoadBuffer");
		addField<DAS_BIND_MANAGED_FIELD(EndFastPathLoadBuffer)>("EndFastPathLoadBuffer","EndFastPathLoadBuffer");
		addField<DAS_BIND_MANAGED_FIELD(OriginalFastPathLoadBuffer)>("OriginalFastPathLoadBuffer","OriginalFastPathLoadBuffer");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Serialization/Archive.h:65:8
struct FArchiveState_GeneratedAnnotation : ManagedStructureAnnotation<FArchiveState> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FArchiveState>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FArchiveState>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FArchiveState>::value; }
	FArchiveState_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FArchiveState", ml, "FArchiveState") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(ArSerializingDefaults)>("ArSerializingDefaults","ArSerializingDefaults");
		addField<DAS_BIND_MANAGED_FIELD(ArPortFlags)>("ArPortFlags","ArPortFlags");
		addField<DAS_BIND_MANAGED_FIELD(ArMaxSerializeSize)>("ArMaxSerializeSize","ArMaxSerializeSize");
		addField<DAS_BIND_MANAGED_FIELD(ArCustomPropertyList)>("ArCustomPropertyList","ArCustomPropertyList");
		addField<DAS_BIND_MANAGED_FIELD(ArDebugSerializationFlags)>("ArDebugSerializationFlags","ArDebugSerializationFlags");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Serialization/Archive.h:2113:8
struct FArchive_FScopeSetDebugSerializationFlags_GeneratedAnnotation : ManagedStructureAnnotation<FArchive::FScopeSetDebugSerializationFlags> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FArchive::FScopeSetDebugSerializationFlags>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FArchive::FScopeSetDebugSerializationFlags>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FArchive::FScopeSetDebugSerializationFlags>::value; }
	FArchive_FScopeSetDebugSerializationFlags_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScopeSetDebugSerializationFlags", ml, "FArchive::FScopeSetDebugSerializationFlags") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Serialization/Archive.h:2164:8
struct FArchive_FScopeAddDebugData_GeneratedAnnotation : ManagedStructureAnnotation<FArchive::FScopeAddDebugData> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FArchive::FScopeAddDebugData>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FArchive::FScopeAddDebugData>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FArchive::FScopeAddDebugData>::value; }
	FArchive_FScopeAddDebugData_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScopeAddDebugData", ml, "FArchive::FScopeAddDebugData") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Serialization/Archive.h:1134:7
struct FArchive_GeneratedAnnotation : ManagedStructureAnnotation<FArchive> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FArchive>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FArchive>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FArchive>::value; }
	FArchive_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FArchive", ml, "FArchive") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/UnrealString.h:55:7
struct FString_GeneratedAnnotation : ManagedStructureAnnotation<FString> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FString>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FString>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FString>::value; }
	FString_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FString", ml, "FString") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/UnrealString.h:2534:8
struct FTextRange_GeneratedAnnotation : ManagedStructureAnnotation<FTextRange> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FTextRange>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FTextRange>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FTextRange>::value; }
	FTextRange_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FTextRange", ml, "FTextRange") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(BeginIndex)>("BeginIndex","BeginIndex");
		addField<DAS_BIND_MANAGED_FIELD(EndIndex)>("EndIndex","EndIndex");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/SparseArray.h:30:8
struct FSparseArrayAllocationInfo_GeneratedAnnotation : ManagedStructureAnnotation<FSparseArrayAllocationInfo> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FSparseArrayAllocationInfo>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FSparseArrayAllocationInfo>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FSparseArrayAllocationInfo>::value; }
	FSparseArrayAllocationInfo_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FSparseArrayAllocationInfo", ml, "FSparseArrayAllocationInfo") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Index)>("Index","Index");
		addField<DAS_BIND_MANAGED_FIELD(Pointer)>("Pointer","Pointer");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/SparseArray.h:1261:8
struct FScriptSparseArrayLayout_GeneratedAnnotation : ManagedStructureAnnotation<FScriptSparseArrayLayout> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FScriptSparseArrayLayout>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FScriptSparseArrayLayout>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FScriptSparseArrayLayout>::value; }
	FScriptSparseArrayLayout_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScriptSparseArrayLayout", ml, "FScriptSparseArrayLayout") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Alignment)>("Alignment","Alignment");
		addField<DAS_BIND_MANAGED_FIELD(Size)>("Size","Size");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/SparseArray.h:1466:7
struct FScriptSparseArray_GeneratedAnnotation : ManagedStructureAnnotation<FScriptSparseArray> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FScriptSparseArray>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FScriptSparseArray>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FScriptSparseArray>::value; }
	FScriptSparseArray_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScriptSparseArray", ml, "FScriptSparseArray") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/Set.h:105:7
struct FSetElementId_GeneratedAnnotation : ManagedStructureAnnotation<FSetElementId> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FSetElementId>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FSetElementId>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FSetElementId>::value; }
	FSetElementId_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FSetElementId", ml, "FSetElementId") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/Set.h:1834:8
struct FScriptSetLayout_GeneratedAnnotation : ManagedStructureAnnotation<FScriptSetLayout> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FScriptSetLayout>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FScriptSetLayout>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FScriptSetLayout>::value; }
	FScriptSetLayout_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScriptSetLayout", ml, "FScriptSetLayout") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(HashNextIdOffset)>("HashNextIdOffset","HashNextIdOffset");
		addField<DAS_BIND_MANAGED_FIELD(HashIndexOffset)>("HashIndexOffset","HashIndexOffset");
		addField<DAS_BIND_MANAGED_FIELD(Size)>("Size","Size");
		addField<DAS_BIND_MANAGED_FIELD(SparseArrayLayout)>("SparseArrayLayout","SparseArrayLayout");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/Set.h:2184:7
struct FScriptSet_GeneratedAnnotation : ManagedStructureAnnotation<FScriptSet> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FScriptSet>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FScriptSet>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FScriptSet>::value; }
	FScriptSet_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScriptSet", ml, "FScriptSet") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/Set.h:2192:8
struct TSetPrivateFriend_GeneratedAnnotation : ManagedStructureAnnotation<TSetPrivateFriend> {
	virtual bool canCopy() const override { return std::is_copy_constructible<TSetPrivateFriend>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<TSetPrivateFriend>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<TSetPrivateFriend>::value; }
	TSetPrivateFriend_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("TSetPrivateFriend", ml, "TSetPrivateFriend") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/Map.h:1665:8
struct FScriptMapLayout_GeneratedAnnotation : ManagedStructureAnnotation<FScriptMapLayout> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FScriptMapLayout>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FScriptMapLayout>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FScriptMapLayout>::value; }
	FScriptMapLayout_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScriptMapLayout", ml, "FScriptMapLayout") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(ValueOffset)>("ValueOffset","ValueOffset");
		addField<DAS_BIND_MANAGED_FIELD(SetLayout)>("SetLayout","SetLayout");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/Map.h:1905:7
struct FScriptMap_GeneratedAnnotation : ManagedStructureAnnotation<FScriptMap> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FScriptMap>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FScriptMap>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FScriptMap>::value; }
	FScriptMap_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScriptMap", ml, "FScriptMap") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Core/Public/Containers/Map.h:1913:8
struct TMapPrivateFriend_GeneratedAnnotation : ManagedStructureAnnotation<TMapPrivateFriend> {
	virtual bool canCopy() const override { return std::is_copy_constructible<TMapPrivateFriend>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<TMapPrivateFriend>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<TMapPrivateFriend>::value; }
	TMapPrivateFriend_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("TMapPrivateFriend", ml, "TMapPrivateFriend") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/PrimaryAssetId.h:22:8
struct FPrimaryAssetType_GeneratedAnnotation : ManagedStructureAnnotation<FPrimaryAssetType> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FPrimaryAssetType>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FPrimaryAssetType>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FPrimaryAssetType>::value; }
	FPrimaryAssetType_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FPrimaryAssetType", ml, "FPrimaryAssetType") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/PrimaryAssetId.h:104:8
struct FPrimaryAssetId_GeneratedAnnotation : ManagedStructureAnnotation<FPrimaryAssetId> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FPrimaryAssetId>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FPrimaryAssetId>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FPrimaryAssetId>::value; }
	FPrimaryAssetId_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FPrimaryAssetId", ml, "FPrimaryAssetId") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(PrimaryAssetType)>("PrimaryAssetType","PrimaryAssetType");
		addField<DAS_BIND_MANAGED_FIELD(PrimaryAssetName)>("PrimaryAssetName","PrimaryAssetName");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Script.h:24:1
struct FStatGroup_STATGROUP_Script_GeneratedAnnotation : ManagedStructureAnnotation<FStatGroup_STATGROUP_Script> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FStatGroup_STATGROUP_Script>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FStatGroup_STATGROUP_Script>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FStatGroup_STATGROUP_Script>::value; }
	FStatGroup_STATGROUP_Script_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FStatGroup_STATGROUP_Script", ml, "FStatGroup_STATGROUP_Script") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Script.h:380:8
struct FBlueprintExceptionInfo_GeneratedAnnotation : ManagedStructureAnnotation<FBlueprintExceptionInfo> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FBlueprintExceptionInfo>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FBlueprintExceptionInfo>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FBlueprintExceptionInfo>::value; }
	FBlueprintExceptionInfo_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FBlueprintExceptionInfo", ml, "FBlueprintExceptionInfo") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Script.h:409:8
struct FScriptInstrumentationSignal_GeneratedAnnotation : ManagedStructureAnnotation<FScriptInstrumentationSignal> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FScriptInstrumentationSignal>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FScriptInstrumentationSignal>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FScriptInstrumentationSignal>::value; }
	FScriptInstrumentationSignal_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScriptInstrumentationSignal", ml, "FScriptInstrumentationSignal") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Script.h:474:7
struct FBlueprintCoreDelegates_GeneratedAnnotation : ManagedStructureAnnotation<FBlueprintCoreDelegates> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FBlueprintCoreDelegates>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FBlueprintCoreDelegates>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FBlueprintCoreDelegates>::value; }
	FBlueprintCoreDelegates_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FBlueprintCoreDelegates", ml, "FBlueprintCoreDelegates") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Script.h:504:24
struct FBlueprintContextTracker_GeneratedAnnotation : ManagedStructureAnnotation<FBlueprintContextTracker> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FBlueprintContextTracker>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FBlueprintContextTracker>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FBlueprintContextTracker>::value; }
	FBlueprintContextTracker_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FBlueprintContextTracker", ml, "FBlueprintContextTracker") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Script.h:594:8
struct FEditorScriptExecutionGuard_GeneratedAnnotation : ManagedStructureAnnotation<FEditorScriptExecutionGuard> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FEditorScriptExecutionGuard>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FEditorScriptExecutionGuard>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FEditorScriptExecutionGuard>::value; }
	FEditorScriptExecutionGuard_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FEditorScriptExecutionGuard", ml, "FEditorScriptExecutionGuard") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/ObjectMacros.h:167:7
struct FVTableHelper_GeneratedAnnotation : ManagedStructureAnnotation<FVTableHelper> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FVTableHelper>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FVTableHelper>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FVTableHelper>::value; }
	FVTableHelper_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FVTableHelper", ml, "FVTableHelper") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/ObjectMacros.h:2178:7
struct FRestoreForUObjectOverwrite_GeneratedAnnotation : ManagedStructureAnnotation<FRestoreForUObjectOverwrite> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FRestoreForUObjectOverwrite>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FRestoreForUObjectOverwrite>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FRestoreForUObjectOverwrite>::value; }
	FRestoreForUObjectOverwrite_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FRestoreForUObjectOverwrite", ml, "FRestoreForUObjectOverwrite") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:1034:7
struct FObjectInitializer_GeneratedAnnotation : ManagedStructureAnnotation<FObjectInitializer> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FObjectInitializer>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FObjectInitializer>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FObjectInitializer>::value; }
	FObjectInitializer_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FObjectInitializer", ml, "FObjectInitializer") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:1483:8
struct FStaticConstructObjectParameters_GeneratedAnnotation : ManagedStructureAnnotation<FStaticConstructObjectParameters> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FStaticConstructObjectParameters>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FStaticConstructObjectParameters>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FStaticConstructObjectParameters>::value; }
	FStaticConstructObjectParameters_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FStaticConstructObjectParameters", ml, "FStaticConstructObjectParameters") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Class)>("Class","Class");
		addField<DAS_BIND_MANAGED_FIELD(Outer)>("Outer","Outer");
		addField<DAS_BIND_MANAGED_FIELD(Name)>("Name","Name");
		addField<DAS_BIND_MANAGED_FIELD(SetFlags)>("SetFlags","SetFlags");
		addField<DAS_BIND_MANAGED_FIELD(InternalSetFlags)>("InternalSetFlags","InternalSetFlags");
		addField<DAS_BIND_MANAGED_FIELD(bCopyTransientsFromClassDefaults)>("bCopyTransientsFromClassDefaults","bCopyTransientsFromClassDefaults");
		addField<DAS_BIND_MANAGED_FIELD(bAssumeTemplateIsArchetype)>("bAssumeTemplateIsArchetype","bAssumeTemplateIsArchetype");
		addField<DAS_BIND_MANAGED_FIELD(Template)>("Template","Template");
		addField<DAS_BIND_MANAGED_FIELD(ExternalPackage)>("ExternalPackage","ExternalPackage");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:1534:7
struct FScriptIntegrationObjectHelper_GeneratedAnnotation : ManagedStructureAnnotation<FScriptIntegrationObjectHelper> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FScriptIntegrationObjectHelper>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FScriptIntegrationObjectHelper>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FScriptIntegrationObjectHelper>::value; }
	FScriptIntegrationObjectHelper_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FScriptIntegrationObjectHelper", ml, "FScriptIntegrationObjectHelper") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:2602:9
struct FReferenceCollector_AROPrivate_GeneratedAnnotation : ManagedStructureAnnotation<FReferenceCollector::AROPrivate> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FReferenceCollector::AROPrivate>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FReferenceCollector::AROPrivate>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FReferenceCollector::AROPrivate>::value; }
	FReferenceCollector_AROPrivate_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("AROPrivate", ml, "FReferenceCollector::AROPrivate") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:2163:7
struct FReferenceCollector_GeneratedAnnotation : ManagedStructureAnnotation<FReferenceCollector> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FReferenceCollector>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FReferenceCollector>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FReferenceCollector>::value; }
	FReferenceCollector_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FReferenceCollector", ml, "FReferenceCollector") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:2769:7
struct FReferenceFinder_GeneratedAnnotation : ManagedStructureAnnotation<FReferenceFinder> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FReferenceFinder>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FReferenceFinder>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FReferenceFinder>::value; }
	FReferenceFinder_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FReferenceFinder", ml, "FReferenceFinder") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:2850:8
struct FEndLoadPackageContext_GeneratedAnnotation : ManagedStructureAnnotation<FEndLoadPackageContext> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FEndLoadPackageContext>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FEndLoadPackageContext>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FEndLoadPackageContext>::value; }
	FEndLoadPackageContext_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FEndLoadPackageContext", ml, "FEndLoadPackageContext") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(RecursiveDepth)>("RecursiveDepth","RecursiveDepth");
		addField<DAS_BIND_MANAGED_FIELD(bSynchronous)>("bSynchronous","bSynchronous");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:2860:8
struct FCoreUObjectDelegates_GeneratedAnnotation : ManagedStructureAnnotation<FCoreUObjectDelegates> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FCoreUObjectDelegates>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FCoreUObjectDelegates>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FCoreUObjectDelegates>::value; }
	FCoreUObjectDelegates_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FCoreUObjectDelegates", ml, "FCoreUObjectDelegates") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:3116:7
struct UE_FAssetLog_GeneratedAnnotation : ManagedStructureAnnotation<UE::FAssetLog> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UE::FAssetLog>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UE::FAssetLog>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UE::FAssetLog>::value; }
	UE_FAssetLog_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FAssetLog", ml, "UE::FAssetLog") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectGlobals.h:3148:8
struct FAssetMsg_GeneratedAnnotation : ManagedStructureAnnotation<FAssetMsg> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FAssetMsg>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FAssetMsg>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FAssetMsg>::value; }
	FAssetMsg_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FAssetMsg", ml, "FAssetMsg") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectBase.h:33:7
struct UObjectBase_GeneratedAnnotation : ManagedStructureAnnotation<UObjectBase> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UObjectBase>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UObjectBase>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UObjectBase>::value; }
	UObjectBase_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UObjectBase", ml, "UObjectBase") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UObjectBaseUtility.h:57:7
struct UObjectBaseUtility_GeneratedAnnotation : ManagedStructureAnnotation<UObjectBaseUtility> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UObjectBaseUtility>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UObjectBaseUtility>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UObjectBaseUtility>::value; }
	UObjectBaseUtility_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UObjectBaseUtility", ml, "UObjectBaseUtility") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Object.h:906:9
struct UObject_FAssetRegistryTagMetadata_GeneratedAnnotation : ManagedStructureAnnotation<UObject::FAssetRegistryTagMetadata> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UObject::FAssetRegistryTagMetadata>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UObject::FAssetRegistryTagMetadata>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UObject::FAssetRegistryTagMetadata>::value; }
	UObject_FAssetRegistryTagMetadata_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FAssetRegistryTagMetadata", ml, "UObject::FAssetRegistryTagMetadata") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(DisplayName)>("DisplayName","DisplayName");
		addField<DAS_BIND_MANAGED_FIELD(TooltipText)>("TooltipText","TooltipText");
		addField<DAS_BIND_MANAGED_FIELD(Suffix)>("Suffix","Suffix");
		addField<DAS_BIND_MANAGED_FIELD(ImportantValue)>("ImportantValue","ImportantValue");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Object.h:85:7
struct UObject_GeneratedAnnotation : ManagedStructureAnnotation<UObject, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UObject>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UObject>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UObject>::value; }
	UObject_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UObject", ml, "UObject") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Object.h:1723:8
struct FObjectNetPushIdHelper_GeneratedAnnotation : ManagedStructureAnnotation<FObjectNetPushIdHelper> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FObjectNetPushIdHelper>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FObjectNetPushIdHelper>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FObjectNetPushIdHelper>::value; }
	FObjectNetPushIdHelper_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FObjectNetPushIdHelper", ml, "FObjectNetPushIdHelper") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Field.h:62:7
struct FFieldClass_GeneratedAnnotation : ManagedStructureAnnotation<FFieldClass> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FFieldClass>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FFieldClass>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FFieldClass>::value; }
	FFieldClass_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FFieldClass", ml, "FFieldClass") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Field.h:264:7
struct FFieldVariant_GeneratedAnnotation : ManagedStructureAnnotation<FFieldVariant> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FFieldVariant>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FFieldVariant>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FFieldVariant>::value; }
	FFieldVariant_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FFieldVariant", ml, "FFieldVariant") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Field.h:412:7
struct FField_GeneratedAnnotation : ManagedStructureAnnotation<FField> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FField>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FField>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FField>::value; }
	FField_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FField", ml, "FField") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Owner)>("Owner","Owner");
		addField<DAS_BIND_MANAGED_FIELD(Next)>("Next","Next");
		addField<DAS_BIND_MANAGED_FIELD(NamePrivate)>("NamePrivate","NamePrivate");
		addField<DAS_BIND_MANAGED_FIELD(FlagsPrivate)>("FlagsPrivate","FlagsPrivate");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/ObjectPtr.h:55:8
struct FObjectPtr_GeneratedAnnotation : ManagedStructureAnnotation<FObjectPtr> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FObjectPtr>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FObjectPtr>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FObjectPtr>::value; }
	FObjectPtr_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FObjectPtr", ml, "FObjectPtr") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/ObjectPtr.h:614:9
struct ObjectPtr_Private_Friend_GeneratedAnnotation : ManagedStructureAnnotation<ObjectPtr_Private::Friend> {
	virtual bool canCopy() const override { return std::is_copy_constructible<ObjectPtr_Private::Friend>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<ObjectPtr_Private::Friend>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<ObjectPtr_Private::Friend>::value; }
	ObjectPtr_Private_Friend_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("Friend", ml, "ObjectPtr_Private::Friend") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:155:7
struct UField_GeneratedAnnotation : ManagedStructureAnnotation<UField, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UField>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UField>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UField>::value; }
	UField_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UField", ml, "UField") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Next)>("Next","Next");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:383:7
struct UStruct_GeneratedAnnotation : ManagedStructureAnnotation<UStruct, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UStruct>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UStruct>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UStruct>::value; }
	UStruct_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UStruct", ml, "UStruct") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Children)>("Children","Children");
		addField<DAS_BIND_MANAGED_FIELD(ChildProperties)>("ChildProperties","ChildProperties");
		addField<DAS_BIND_MANAGED_FIELD(PropertiesSize)>("PropertiesSize","PropertiesSize");
		addField<DAS_BIND_MANAGED_FIELD(MinAlignment)>("MinAlignment","MinAlignment");
		addField<DAS_BIND_MANAGED_FIELD(PropertyLink)>("PropertyLink","PropertyLink");
		addField<DAS_BIND_MANAGED_FIELD(RefLink)>("RefLink","RefLink");
		addField<DAS_BIND_MANAGED_FIELD(DestructorLink)>("DestructorLink","DestructorLink");
		addField<DAS_BIND_MANAGED_FIELD(PostConstructLink)>("PostConstructLink","PostConstructLink");
		addField<DAS_BIND_MANAGED_FIELD(FieldPathSerialNumber)>("FieldPathSerialNumber","FieldPathSerialNumber");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:904:10
struct UScriptStruct_ICppStructOps_FCapabilities_GeneratedAnnotation : ManagedStructureAnnotation<UScriptStruct::ICppStructOps::FCapabilities> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UScriptStruct::ICppStructOps::FCapabilities>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UScriptStruct::ICppStructOps::FCapabilities>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UScriptStruct::ICppStructOps::FCapabilities>::value; }
	UScriptStruct_ICppStructOps_FCapabilities_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FCapabilities", ml, "UScriptStruct::ICppStructOps::FCapabilities") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(ComputedPropertyFlags)>("ComputedPropertyFlags","ComputedPropertyFlags");
		addField<DAS_BIND_MANAGED_FIELD(HasSerializerObjectReferences)>("HasSerializerObjectReferences","HasSerializerObjectReferences");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:901:9
struct UScriptStruct_ICppStructOps_GeneratedAnnotation : ManagedStructureAnnotation<UScriptStruct::ICppStructOps> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UScriptStruct::ICppStructOps>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UScriptStruct::ICppStructOps>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UScriptStruct::ICppStructOps>::value; }
	UScriptStruct_ICppStructOps_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("ICppStructOps", ml, "UScriptStruct::ICppStructOps") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:897:7
struct UScriptStruct_GeneratedAnnotation : ManagedStructureAnnotation<UScriptStruct, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UScriptStruct>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UScriptStruct>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UScriptStruct>::value; }
	UScriptStruct_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UScriptStruct", ml, "UScriptStruct") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(StructFlags)>("StructFlags","StructFlags");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:1780:7
struct UFunction_GeneratedAnnotation : ManagedStructureAnnotation<UFunction, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UFunction>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UFunction>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UFunction>::value; }
	UFunction_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UFunction", ml, "UFunction") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(FunctionFlags)>("FunctionFlags","FunctionFlags");
		addField<DAS_BIND_MANAGED_FIELD(NumParms)>("NumParms","NumParms");
		addField<DAS_BIND_MANAGED_FIELD(ParmsSize)>("ParmsSize","ParmsSize");
		addField<DAS_BIND_MANAGED_FIELD(ReturnValueOffset)>("ReturnValueOffset","ReturnValueOffset");
		addField<DAS_BIND_MANAGED_FIELD(RPCId)>("RPCId","RPCId");
		addField<DAS_BIND_MANAGED_FIELD(RPCResponseId)>("RPCResponseId","RPCResponseId");
		addField<DAS_BIND_MANAGED_FIELD(FirstPropertyToInit)>("FirstPropertyToInit","FirstPropertyToInit");
		addField<DAS_BIND_MANAGED_FIELD(EventGraphFunction)>("EventGraphFunction","EventGraphFunction");
		addField<DAS_BIND_MANAGED_FIELD(EventGraphCallOffset)>("EventGraphCallOffset","EventGraphCallOffset");
		addField<DAS_BIND_MANAGED_FIELD(SingletonPtr)>("SingletonPtr","SingletonPtr");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:1999:7
struct UEnum_GeneratedAnnotation : ManagedStructureAnnotation<UEnum, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UEnum>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UEnum>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UEnum>::value; }
	UEnum_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UEnum", ml, "UEnum") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(CppType)>("CppType","CppType");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:2601:8
struct FCppClassTypeTraitsBase_GeneratedAnnotation : ManagedStructureAnnotation<FCppClassTypeTraitsBase> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FCppClassTypeTraitsBase>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FCppClassTypeTraitsBase>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FCppClassTypeTraitsBase>::value; }
	FCppClassTypeTraitsBase_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FCppClassTypeTraitsBase", ml, "FCppClassTypeTraitsBase") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:2622:8
struct ICppClassTypeInfo_GeneratedAnnotation : ManagedStructureAnnotation<ICppClassTypeInfo> {
	virtual bool canCopy() const override { return std::is_copy_constructible<ICppClassTypeInfo>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<ICppClassTypeInfo>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<ICppClassTypeInfo>::value; }
	ICppClassTypeInfo_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("ICppClassTypeInfo", ml, "ICppClassTypeInfo") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:2629:8
struct FCppClassTypeInfoStatic_GeneratedAnnotation : ManagedStructureAnnotation<FCppClassTypeInfoStatic> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FCppClassTypeInfoStatic>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FCppClassTypeInfoStatic>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FCppClassTypeInfoStatic>::value; }
	FCppClassTypeInfoStatic_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FCppClassTypeInfoStatic", ml, "FCppClassTypeInfoStatic") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(bIsAbstract)>("bIsAbstract","bIsAbstract");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:2636:8
struct FCppClassTypeInfo_GeneratedAnnotation : ManagedStructureAnnotation<FCppClassTypeInfo> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FCppClassTypeInfo>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FCppClassTypeInfo>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FCppClassTypeInfo>::value; }
	FCppClassTypeInfo_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FCppClassTypeInfo", ml, "FCppClassTypeInfo") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:2659:8
struct FImplementedInterface_GeneratedAnnotation : ManagedStructureAnnotation<FImplementedInterface> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FImplementedInterface>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FImplementedInterface>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FImplementedInterface>::value; }
	FImplementedInterface_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FImplementedInterface", ml, "FImplementedInterface") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Class)>("Class","Class");
		addField<DAS_BIND_MANAGED_FIELD(PointerOffset)>("PointerOffset","PointerOffset");
		addField<DAS_BIND_MANAGED_FIELD(bImplementedByK2)>("bImplementedByK2","bImplementedByK2");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:2684:8
struct FNativeFunctionLookup_GeneratedAnnotation : ManagedStructureAnnotation<FNativeFunctionLookup> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FNativeFunctionLookup>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FNativeFunctionLookup>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FNativeFunctionLookup>::value; }
	FNativeFunctionLookup_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FNativeFunctionLookup", ml, "FNativeFunctionLookup") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Name)>("Name","Name");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:2705:8
struct FClassFunctionLinkInfo_GeneratedAnnotation : ManagedStructureAnnotation<FClassFunctionLinkInfo> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FClassFunctionLinkInfo>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FClassFunctionLinkInfo>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FClassFunctionLinkInfo>::value; }
	FClassFunctionLinkInfo_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FClassFunctionLinkInfo", ml, "FClassFunctionLinkInfo") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(FuncNameUTF8)>("FuncNameUTF8","FuncNameUTF8");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:2726:7
struct UClass_GeneratedAnnotation : ManagedStructureAnnotation<UClass, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UClass>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UClass>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UClass>::value; }
	UClass_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UClass", ml, "UClass") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(ClassUnique)>("ClassUnique","ClassUnique");
		addField<DAS_BIND_MANAGED_FIELD(FirstOwnedClassRep)>("FirstOwnedClassRep","FirstOwnedClassRep");
		addField<DAS_BIND_MANAGED_FIELD(bCooked)>("bCooked","bCooked");
		addField<DAS_BIND_MANAGED_FIELD(bLayoutChanging)>("bLayoutChanging","bLayoutChanging");
		addField<DAS_BIND_MANAGED_FIELD(ClassFlags)>("ClassFlags","ClassFlags");
		addField<DAS_BIND_MANAGED_FIELD(ClassCastFlags)>("ClassCastFlags","ClassCastFlags");
		addField<DAS_BIND_MANAGED_FIELD(ClassWithin)>("ClassWithin","ClassWithin");
		addField<DAS_BIND_MANAGED_FIELD(ClassGeneratedBy)>("ClassGeneratedBy","ClassGeneratedBy");
		addField<DAS_BIND_MANAGED_FIELD(PropertiesPendingDestruction)>("PropertiesPendingDestruction","PropertiesPendingDestruction");
		addField<DAS_BIND_MANAGED_FIELD(ClassConfigName)>("ClassConfigName","ClassConfigName");
		addField<DAS_BIND_MANAGED_FIELD(ClassDefaultObject)>("ClassDefaultObject","ClassDefaultObject");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Class.h:4037:8
struct FTestUninitializedScriptStructMembersTest_GeneratedAnnotation : ManagedStructureAnnotation<FTestUninitializedScriptStructMembersTest> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FTestUninitializedScriptStructMembersTest>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FTestUninitializedScriptStructMembersTest>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FTestUninitializedScriptStructMembersTest>::value; }
	FTestUninitializedScriptStructMembersTest_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FTestUninitializedScriptStructMembersTest", ml, "FTestUninitializedScriptStructMembersTest") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(UninitializedObjectReference)>("UninitializedObjectReference","UninitializedObjectReference");
		addField<DAS_BIND_MANAGED_FIELD(InitializedObjectReference)>("InitializedObjectReference","InitializedObjectReference");
		addField<DAS_BIND_MANAGED_FIELD(UnusedValue)>("UnusedValue","UnusedValue");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Package.h:86:8
struct FSavePackageResultStruct_GeneratedAnnotation : ManagedStructureAnnotation<FSavePackageResultStruct> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FSavePackageResultStruct>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FSavePackageResultStruct>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FSavePackageResultStruct>::value; }
	FSavePackageResultStruct_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FSavePackageResultStruct", ml, "FSavePackageResultStruct") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Result)>("Result","Result");
		addField<DAS_BIND_MANAGED_FIELD(TotalFileSize)>("TotalFileSize","TotalFileSize");
		addField<DAS_BIND_MANAGED_FIELD(SerializedPackageFlags)>("SerializedPackageFlags","SerializedPackageFlags");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Package.h:142:23
struct UPackage_GeneratedAnnotation : ManagedStructureAnnotation<UPackage, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UPackage>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UPackage>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UPackage>::value; }
	UPackage_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UPackage", ml, "UPackage") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:153:7
struct FProperty_GeneratedAnnotation : ManagedStructureAnnotation<FProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FProperty>::value; }
	FProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FProperty", ml, "FProperty") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(ArrayDim)>("ArrayDim","ArrayDim");
		addField<DAS_BIND_MANAGED_FIELD(ElementSize)>("ElementSize","ElementSize");
		addField<DAS_BIND_MANAGED_FIELD(PropertyFlags)>("PropertyFlags","PropertyFlags");
		addField<DAS_BIND_MANAGED_FIELD(RepIndex)>("RepIndex","RepIndex");
		addField<DAS_BIND_MANAGED_FIELD(PropertyLinkNext)>("PropertyLinkNext","PropertyLinkNext");
		addField<DAS_BIND_MANAGED_FIELD(NextRef)>("NextRef","NextRef");
		addField<DAS_BIND_MANAGED_FIELD(DestructorLinkNext)>("DestructorLinkNext","DestructorLinkNext");
		addField<DAS_BIND_MANAGED_FIELD(PostConstructLinkNext)>("PostConstructLinkNext","PostConstructLinkNext");
		addField<DAS_BIND_MANAGED_FIELD(RepNotifyFunc)>("RepNotifyFunc","RepNotifyFunc");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:1139:7
struct FPropertyHelpers_GeneratedAnnotation : ManagedStructureAnnotation<FPropertyHelpers> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FPropertyHelpers>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FPropertyHelpers>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FPropertyHelpers>::value; }
	FPropertyHelpers_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FPropertyHelpers", ml, "FPropertyHelpers") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:1151:8
struct UEProperty_Private_FProperty_DoNotUse_GeneratedAnnotation : ManagedStructureAnnotation<UEProperty_Private::FProperty_DoNotUse> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UEProperty_Private::FProperty_DoNotUse>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UEProperty_Private::FProperty_DoNotUse>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UEProperty_Private::FProperty_DoNotUse>::value; }
	UEProperty_Private_FProperty_DoNotUse_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FProperty_DoNotUse", ml, "UEProperty_Private::FProperty_DoNotUse") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:1170:8
struct FDefinedProperty_GeneratedAnnotation : ManagedStructureAnnotation<FDefinedProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FDefinedProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FDefinedProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FDefinedProperty>::value; }
	FDefinedProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FDefinedProperty", ml, "FDefinedProperty") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Property)>("Property","Property");
		addField<DAS_BIND_MANAGED_FIELD(Index)>("Index","Index");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:1486:23
struct FNumericProperty_GeneratedAnnotation : ManagedStructureAnnotation<FNumericProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FNumericProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FNumericProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FNumericProperty>::value; }
	FNumericProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FNumericProperty", ml, "FNumericProperty") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:1900:23
struct FByteProperty_GeneratedAnnotation : ManagedStructureAnnotation<FByteProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FByteProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FByteProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FByteProperty>::value; }
	FByteProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FByteProperty", ml, "FByteProperty") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Enum)>("Enum","Enum");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:1974:23
struct FInt8Property_GeneratedAnnotation : ManagedStructureAnnotation<FInt8Property> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FInt8Property>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FInt8Property>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FInt8Property>::value; }
	FInt8Property_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FInt8Property", ml, "FInt8Property") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2013:23
struct FInt16Property_GeneratedAnnotation : ManagedStructureAnnotation<FInt16Property> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FInt16Property>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FInt16Property>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FInt16Property>::value; }
	FInt16Property_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FInt16Property", ml, "FInt16Property") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2053:23
struct FIntProperty_GeneratedAnnotation : ManagedStructureAnnotation<FIntProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FIntProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FIntProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FIntProperty>::value; }
	FIntProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FIntProperty", ml, "FIntProperty") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2092:23
struct FInt64Property_GeneratedAnnotation : ManagedStructureAnnotation<FInt64Property> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FInt64Property>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FInt64Property>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FInt64Property>::value; }
	FInt64Property_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FInt64Property", ml, "FInt64Property") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2131:23
struct FUInt16Property_GeneratedAnnotation : ManagedStructureAnnotation<FUInt16Property> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FUInt16Property>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FUInt16Property>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FUInt16Property>::value; }
	FUInt16Property_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FUInt16Property", ml, "FUInt16Property") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2170:23
struct FUInt32Property_GeneratedAnnotation : ManagedStructureAnnotation<FUInt32Property> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FUInt32Property>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FUInt32Property>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FUInt32Property>::value; }
	FUInt32Property_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FUInt32Property", ml, "FUInt32Property") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2209:23
struct FUInt64Property_GeneratedAnnotation : ManagedStructureAnnotation<FUInt64Property> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FUInt64Property>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FUInt64Property>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FUInt64Property>::value; }
	FUInt64Property_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FUInt64Property", ml, "FUInt64Property") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2249:23
struct FFloatProperty_GeneratedAnnotation : ManagedStructureAnnotation<FFloatProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FFloatProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FFloatProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FFloatProperty>::value; }
	FFloatProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FFloatProperty", ml, "FFloatProperty") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2288:23
struct FDoubleProperty_GeneratedAnnotation : ManagedStructureAnnotation<FDoubleProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FDoubleProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FDoubleProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FDoubleProperty>::value; }
	FDoubleProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FDoubleProperty", ml, "FDoubleProperty") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2338:23
struct FBoolProperty_GeneratedAnnotation : ManagedStructureAnnotation<FBoolProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FBoolProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FBoolProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FBoolProperty>::value; }
	FBoolProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FBoolProperty", ml, "FBoolProperty") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2491:23
struct FObjectPropertyBase_GeneratedAnnotation : ManagedStructureAnnotation<FObjectPropertyBase> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FObjectPropertyBase>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FObjectPropertyBase>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FObjectPropertyBase>::value; }
	FObjectPropertyBase_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FObjectPropertyBase", ml, "FObjectPropertyBase") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(PropertyClass)>("PropertyClass","PropertyClass");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2837:23
struct FObjectProperty_GeneratedAnnotation : ManagedStructureAnnotation<FObjectProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FObjectProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FObjectProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FObjectProperty>::value; }
	FObjectProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FObjectProperty", ml, "FObjectProperty") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:2923:23
struct FObjectPtrProperty_GeneratedAnnotation : ManagedStructureAnnotation<FObjectPtrProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FObjectPtrProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FObjectPtrProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FObjectPtrProperty>::value; }
	FObjectPtrProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FObjectPtrProperty", ml, "FObjectPtrProperty") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:3203:23
struct FClassProperty_GeneratedAnnotation : ManagedStructureAnnotation<FClassProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FClassProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FClassProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FClassProperty>::value; }
	FClassProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FClassProperty", ml, "FClassProperty") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(MetaClass)>("MetaClass","MetaClass");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:3282:23
struct FClassPtrProperty_GeneratedAnnotation : ManagedStructureAnnotation<FClassPtrProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FClassPtrProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FClassPtrProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FClassPtrProperty>::value; }
	FClassPtrProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FClassPtrProperty", ml, "FClassPtrProperty") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:3564:23
struct FStrProperty_GeneratedAnnotation : ManagedStructureAnnotation<FStrProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FStrProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FStrProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FStrProperty>::value; }
	FStrProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FStrProperty", ml, "FStrProperty") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:3628:23
struct FArrayProperty_GeneratedAnnotation : ManagedStructureAnnotation<FArrayProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FArrayProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FArrayProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FArrayProperty>::value; }
	FArrayProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FArrayProperty", ml, "FArrayProperty") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(ArrayFlags)>("ArrayFlags","ArrayFlags");
		addField<DAS_BIND_MANAGED_FIELD(Inner)>("Inner","Inner");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:3772:23
struct FMapProperty_GeneratedAnnotation : ManagedStructureAnnotation<FMapProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FMapProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FMapProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FMapProperty>::value; }
	FMapProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FMapProperty", ml, "FMapProperty") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(KeyProp)>("KeyProp","KeyProp");
		addField<DAS_BIND_MANAGED_FIELD(ValueProp)>("ValueProp","ValueProp");
		addField<DAS_BIND_MANAGED_FIELD(MapLayout)>("MapLayout","MapLayout");
		addField<DAS_BIND_MANAGED_FIELD(MapFlags)>("MapFlags","MapFlags");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:3930:23
struct FSetProperty_GeneratedAnnotation : ManagedStructureAnnotation<FSetProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FSetProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FSetProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FSetProperty>::value; }
	FSetProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FSetProperty", ml, "FSetProperty") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(ElementProp)>("ElementProp","ElementProp");
		addField<DAS_BIND_MANAGED_FIELD(SetLayout)>("SetLayout","SetLayout");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:5788:23
struct FStructProperty_GeneratedAnnotation : ManagedStructureAnnotation<FStructProperty> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FStructProperty>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FStructProperty>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FStructProperty>::value; }
	FStructProperty_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FStructProperty", ml, "FStructProperty") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Struct)>("Struct","Struct");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:6181:24
struct FCustomPropertyListNode_GeneratedAnnotation : ManagedStructureAnnotation<FCustomPropertyListNode> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FCustomPropertyListNode>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FCustomPropertyListNode>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FCustomPropertyListNode>::value; }
	FCustomPropertyListNode_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FCustomPropertyListNode", ml, "FCustomPropertyListNode") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Property)>("Property","Property");
		addField<DAS_BIND_MANAGED_FIELD(ArrayIndex)>("ArrayIndex","ArrayIndex");
		addField<DAS_BIND_MANAGED_FIELD(SubPropertyList)>("SubPropertyList","SubPropertyList");
		addField<DAS_BIND_MANAGED_FIELD(PropertyListNext)>("PropertyListNext","PropertyListNext");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/UnrealType.h:7164:23
struct UPropertyWrapper_GeneratedAnnotation : ManagedStructureAnnotation<UPropertyWrapper, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UPropertyWrapper>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UPropertyWrapper>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UPropertyWrapper>::value; }
	UPropertyWrapper_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UPropertyWrapper", ml, "UPropertyWrapper") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Stack.h:125:8
struct FOutParmRec_GeneratedAnnotation : ManagedStructureAnnotation<FOutParmRec> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FOutParmRec>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FOutParmRec>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FOutParmRec>::value; }
	FOutParmRec_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FOutParmRec", ml, "FOutParmRec") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Property)>("Property","Property");
		addField<DAS_BIND_MANAGED_FIELD(PropAddr)>("PropAddr","PropAddr");
		addField<DAS_BIND_MANAGED_FIELD(NextOutParm)>("NextOutParm","NextOutParm");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/CoreUObject/Public\UObject/Stack.h:136:8
struct FFrame_GeneratedAnnotation : ManagedStructureAnnotation<FFrame> {
	virtual bool canCopy() const override { return std::is_copy_constructible<FFrame>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<FFrame>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<FFrame>::value; }
	FFrame_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("FFrame", ml, "FFrame") {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Node)>("Node","Node");
		addField<DAS_BIND_MANAGED_FIELD(Object)>("Object","Object");
		addField<DAS_BIND_MANAGED_FIELD(Code)>("Code","Code");
		addField<DAS_BIND_MANAGED_FIELD(Locals)>("Locals","Locals");
		addField<DAS_BIND_MANAGED_FIELD(MostRecentProperty)>("MostRecentProperty","MostRecentProperty");
		addField<DAS_BIND_MANAGED_FIELD(MostRecentPropertyAddress)>("MostRecentPropertyAddress","MostRecentPropertyAddress");
		addField<DAS_BIND_MANAGED_FIELD(MostRecentPropertyContainer)>("MostRecentPropertyContainer","MostRecentPropertyContainer");
		addField<DAS_BIND_MANAGED_FIELD(PreviousFrame)>("PreviousFrame","PreviousFrame");
		addField<DAS_BIND_MANAGED_FIELD(OutParms)>("OutParms","OutParms");
		addField<DAS_BIND_MANAGED_FIELD(PropertyChainForCompiledIn)>("PropertyChainForCompiledIn","PropertyChainForCompiledIn");
		addField<DAS_BIND_MANAGED_FIELD(CurrentNativeFunction)>("CurrentNativeFunction","CurrentNativeFunction");
		addField<DAS_BIND_MANAGED_FIELD(PreviousTrackingFrame)>("PreviousTrackingFrame","PreviousTrackingFrame");
		addField<DAS_BIND_MANAGED_FIELD(bArrayContextFailed)>("bArrayContextFailed","bArrayContextFailed");
		addField<DAS_BIND_MANAGED_FIELD(bAbortingExecution)>("bAbortingExecution","bAbortingExecution");
		addField<DAS_BIND_MANAGED_FIELD(DepthCounter)>("DepthCounter","DepthCounter");
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Engine/Classes\Kismet/BlueprintFunctionLibrary.h:15:7
struct UBlueprintFunctionLibrary_GeneratedAnnotation : ManagedStructureAnnotation<UBlueprintFunctionLibrary, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UBlueprintFunctionLibrary>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UBlueprintFunctionLibrary>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UBlueprintFunctionLibrary>::value; }
	UBlueprintFunctionLibrary_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UBlueprintFunctionLibrary", ml, "UBlueprintFunctionLibrary") {
	}
	void init () {
	}
};

// from ../../../../../../../UnrealEngine/Engine/Source/Runtime/Engine/Classes\Kismet/KismetArrayLibrary.h:19:7
struct UKismetArrayLibrary_GeneratedAnnotation : ManagedStructureAnnotation<UKismetArrayLibrary, false, false> {
	virtual bool canCopy() const override { return std::is_copy_constructible<UKismetArrayLibrary>::value; }
	virtual bool canClone() const override { return std::is_copy_constructible<UKismetArrayLibrary>::value; }
	virtual bool canMove() const override { return std::is_copy_constructible<UKismetArrayLibrary>::value; }
	UKismetArrayLibrary_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("UKismetArrayLibrary", ml, "UKismetArrayLibrary") {
	}
	void init () {
	}
};

