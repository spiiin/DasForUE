// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

FString _dasUnreal_static_0_Chr(const FString &,wchar_t Ch);
FString _dasUnreal_static_1_ChrN(const FString &,int NumCharacters,wchar_t Char);
FString _dasUnreal_static_2_FormatAsNumber(const FString &,int InNumber);
FString _dasUnreal_static_3_FromInt(const FString &,int Num);
FString _dasUnreal_static_4_FromBlob(const FString &,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_5_ToBlob(const FString &,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_6_FromHexBlob(const FString &,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_7_ToHexBlob(const FString &,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_8_SanitizeFloat(const FString &,double InFloat,const int InMinFractionalDigits);
FName _dasUnreal_virtual_9_GetFNameForStatID(const UObjectBase & self);
FString _dasUnreal_static_10_RemoveClassPrefix(const UObjectBase &,const wchar_t * ClassName);
void _dasUnreal_static_11_PrefetchClass(const UObjectBase &,UObject * Object);
void _dasUnreal_static_12_PrefetchOuter(const UObjectBase &,UObject * Object);
bool _dasUnreal_static_13_IsPendingKillEnabled(const UObjectBaseUtility &);
EInternalObjectFlags _dasUnreal_static_14_FixGarbageOrPendingKillInternalObjectFlags(const UObjectBaseUtility &,const EInternalObjectFlags InFlags);
bool _dasUnreal_virtual_15_CanBeClusterRoot(const UObjectBaseUtility & self);
bool _dasUnreal_virtual_16_CanBeInCluster(const UObjectBaseUtility & self);
void _dasUnreal_virtual_17_CreateCluster(UObjectBaseUtility & self);
void _dasUnreal_virtual_18_OnClusterMarkedAsPendingKill(UObjectBaseUtility & self);
UClass * _dasUnreal_static_19_StaticClass(const UObject &);
const wchar_t * _dasUnreal_static_20_StaticConfigName(const UObject &);
void _dasUnreal_static_21_StaticRegisterNativesUObject(const UObject &);
void _dasUnreal_virtual_22_PostInitProperties(UObject & self);
void _dasUnreal_virtual_23_PostReinitProperties(UObject & self);
void _dasUnreal_virtual_24_PostCDOContruct(UObject & self);
bool _dasUnreal_virtual_25_PreSaveRoot(UObject & self,const wchar_t * Filename);
void _dasUnreal_virtual_26_PostSaveRoot(UObject & self,bool bCleanupIsRequired);
bool _dasUnreal_virtual_27_Modify(UObject & self,bool bAlwaysMarkDirty);
bool _dasUnreal_virtual_28_IsCapturingAsRootObjectForTransaction(const UObject & self);
void _dasUnreal_virtual_29_LoadedFromAnotherClass(UObject & self,const FName & OldClassName);
bool _dasUnreal_virtual_30_ResolveSubobject(UObject & self,const wchar_t * SubObjectPath,UObject *& OutObject,bool bLoadIfExists);
bool _dasUnreal_virtual_31_IsReadyForAsyncPostLoad(const UObject & self);
void _dasUnreal_virtual_32_PostLoad(UObject & self);
void _dasUnreal_virtual_33_BeginDestroy(UObject & self);
bool _dasUnreal_virtual_34_IsReadyForFinishDestroy(UObject & self);
void _dasUnreal_virtual_35_PostLinkerChange(UObject & self);
void _dasUnreal_virtual_36_FinishDestroy(UObject & self);
void _dasUnreal_virtual_37_ShutdownAfterError(UObject & self);
void _dasUnreal_virtual_38_PreEditUndo(UObject & self);
void _dasUnreal_virtual_39_PostRename(UObject & self,UObject * OldOuter,const FName OldName);
bool _dasUnreal_virtual_40_NeedsLoadForClient(const UObject & self);
bool _dasUnreal_virtual_41_NeedsLoadForServer(const UObject & self);
bool _dasUnreal_virtual_42_NeedsLoadForEditorGame(const UObject & self);
bool _dasUnreal_virtual_43_IsEditorOnly(const UObject & self);
bool _dasUnreal_virtual_44_HasNonEditorOnlyReferences(const UObject & self);
bool _dasUnreal_virtual_45_IsPostLoadThreadSafe(const UObject & self);
bool _dasUnreal_virtual_46_IsDestructionThreadSafe(const UObject & self);
bool _dasUnreal_static_47_CanCreateInCurrentContext(const UObject &,UObject * Template);
void _dasUnreal_virtual_48_PostEditImport(UObject & self);
bool _dasUnreal_virtual_49_Rename(UObject & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
FString _dasUnreal_virtual_50_GetDesc(UObject & self);
void _dasUnreal_virtual_51_MoveDataToSparseClassDataStruct(const UObject & self);
bool _dasUnreal_virtual_52_ImplementsGetWorld(const UObject & self);
FName _dasUnreal_virtual_53_GetExporterName(UObject & self);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_54_GetRestoreForUObjectOverwrite(UObject & self);
bool _dasUnreal_virtual_55_AreNativePropertiesIdenticalTo(const UObject & self,UObject * Other);
const FName & _dasUnreal_static_56_SourceFileTagName(const UObject &);
const FName & _dasUnreal_static_57_AssetVersePathTagName(const UObject &);
bool _dasUnreal_virtual_58_IsAsset(const UObject & self);
bool _dasUnreal_virtual_59_IsLocalizedResource(const UObject & self);
bool _dasUnreal_virtual_60_IsSafeForRootSet(const UObject & self);
void _dasUnreal_virtual_61_TagSubobjects(UObject & self,EObjectFlags NewFlags);
bool _dasUnreal_virtual_62_IsNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_63_IsFullNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_64_IsSupportedForNetworking(const UObject & self);
void _dasUnreal_virtual_65_PreNetReceive(UObject & self);
void _dasUnreal_virtual_66_PostNetReceive(UObject & self);
void _dasUnreal_virtual_67_PostRepNotifies(UObject & self);
void _dasUnreal_virtual_68_PreDestroyFromReplication(UObject & self);
void _dasUnreal_virtual_69_WillNeverCacheCookedPlatformDataAgain(UObject & self);
void _dasUnreal_virtual_70_ClearAllCachedCookedPlatformData(UObject & self);
const wchar_t * _dasUnreal_virtual_71_GetConfigOverridePlatform(const UObject & self);
void _dasUnreal_virtual_72_OverrideConfigSection(UObject & self,FString & SectionName);
void _dasUnreal_virtual_73_OverridePerObjectConfigSection(UObject & self,FString & SectionName);
UObject * _dasUnreal_static_74_GetArchetypeFromRequiredInfo(const UObject &,const UClass * Class,const UObject * Outer,FName Name,EObjectFlags ObjectFlags);
UClass * _dasUnreal_virtual_75_RegenerateClass(UObject & self,UClass * ClassToRegenerate,UObject * PreviousCDO);
void _dasUnreal_virtual_76_MarkAsEditorOnlySubobject(UObject & self);
uint64 _dasUnreal_virtual_77_GetNetPushIdDynamic(const UObject & self);
UClass * _dasUnreal_static_78_StaticClass(const UField &);
const wchar_t * _dasUnreal_static_79_StaticPackage(const UField &);
void _dasUnreal_static_80_StaticRegisterNativesUField(const UField &);
void _dasUnreal_virtual_81_PostLoad(UField & self);
bool _dasUnreal_virtual_82_NeedsLoadForClient(const UField & self);
bool _dasUnreal_virtual_83_NeedsLoadForServer(const UField & self);
void _dasUnreal_virtual_84_Bind(UField & self);
void _dasUnreal_static_85_FormatNativeToolTip(const UField &,FString & ToolTipString,bool bRemoveExtraSections);
UClass * _dasUnreal_static_86_StaticClass(const UStruct &);
const wchar_t * _dasUnreal_static_87_StaticPackage(const UStruct &);
void _dasUnreal_static_88_StaticRegisterNativesUStruct(const UStruct &);
void _dasUnreal_virtual_89_PostLoad(UStruct & self);
void _dasUnreal_virtual_90_FinishDestroy(UStruct & self);
void _dasUnreal_virtual_91_RegisterDependencies(UStruct & self);
void _dasUnreal_virtual_92_TagSubobjects(UStruct & self,EObjectFlags NewFlags);
UStruct * _dasUnreal_virtual_93_GetInheritanceSuper(const UStruct & self);
void _dasUnreal_virtual_94_InitializeStruct(const UStruct & self,void * Dest,int ArrayDim);
void _dasUnreal_virtual_95_DestroyStruct(const UStruct & self,void * Dest,int ArrayDim);
const wchar_t * _dasUnreal_virtual_96_GetPrefixCPP(const UStruct & self);
void _dasUnreal_virtual_97_SetSuperStruct(UStruct & self,UStruct * NewSuperStruct);
FString _dasUnreal_virtual_98_GetAuthoredNameForField(const UStruct & self,const UField * Field);
bool _dasUnreal_virtual_99_IsStructTrashed(const UStruct & self);
UClass * _dasUnreal_static_100_StaticClass(const UEnum &);
const wchar_t * _dasUnreal_static_101_StaticPackage(const UEnum &);
void _dasUnreal_static_102_StaticRegisterNativesUEnum(const UEnum &);
FText _dasUnreal_virtual_103_GetDisplayNameTextByIndex(const UEnum & self,int InIndex);
FString _dasUnreal_virtual_104_GetAuthoredNameStringByIndex(const UEnum & self,int InIndex);
bool _dasUnreal_static_105_IsFullEnumName(const UEnum &,const wchar_t * InEnumName);
FString _dasUnreal_virtual_106_GenerateFullEnumName(const UEnum & self,const wchar_t * InEnumName);
int64 _dasUnreal_static_107_ParseEnum(const UEnum &,const wchar_t *& Str);
void _dasUnreal_virtual_108_BeginDestroy(UEnum & self);
bool _dasUnreal_virtual_109_IsAbstract(const FCppClassTypeInfo & self);
UClass * _dasUnreal_static_110_StaticClass(const UClass &);
const wchar_t * _dasUnreal_static_111_StaticPackage(const UClass &);
void _dasUnreal_static_112_StaticRegisterNativesUClass(const UClass &);
void _dasUnreal_virtual_113_ConditionalRecompileClass(UClass & self,FUObjectSerializeContext * InLoadContext);
void _dasUnreal_virtual_114_FlushCompilationQueueForLevel(UClass & self);
void _dasUnreal_static_115_AssembleReferenceTokenStreams(const UClass &);
UClass * _dasUnreal_virtual_116_GetAuthoritativeClass(UClass & self);
void _dasUnreal_virtual_117_PostLoad(UClass & self);
void _dasUnreal_virtual_118_FinishDestroy(UClass & self);
void _dasUnreal_virtual_119_DeferredRegister(UClass & self,UClass * UClassStaticClass,const wchar_t * PackageName,const wchar_t * InName);
bool _dasUnreal_virtual_120_Rename(UClass & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
void _dasUnreal_virtual_121_TagSubobjects(UClass & self,EObjectFlags NewFlags);
void _dasUnreal_virtual_122_PostInitProperties(UClass & self);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_123_GetRestoreForUObjectOverwrite(UClass & self);
FString _dasUnreal_virtual_124_GetDesc(UClass & self);
bool _dasUnreal_virtual_125_IsAsset(const UClass & self);
bool _dasUnreal_virtual_126_IsNameStableForNetworking(const UClass & self);
void _dasUnreal_virtual_127_Bind(UClass & self);
const wchar_t * _dasUnreal_virtual_128_GetPrefixCPP(const UClass & self);
void _dasUnreal_virtual_129_SetSuperStruct(UClass & self,UStruct * NewSuperStruct);
bool _dasUnreal_virtual_130_IsStructTrashed(const UClass & self);
void _dasUnreal_virtual_131_PostLoadInstance(UClass & self,UObject * InObj);
void _dasUnreal_virtual_132_InitPropertiesFromCustomList(UClass & self,unsigned char * DataPtr,const unsigned char * DefaultDataPtr);
bool _dasUnreal_virtual_133_CanCreateAssetOfClass(const UClass & self);
void _dasUnreal_virtual_134_CreatePersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bCreateOnlyIfEmpty,bool bSkipSuperClass,UClass * OldClass);
void _dasUnreal_virtual_135_DestroyPersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bSkipSuperClass);
void _dasUnreal_virtual_136_PostLoadDefaultObject(UClass & self,UObject * Object);
void _dasUnreal_virtual_137_PurgeClass(UClass & self,bool bRecompilingOnLoad);
UClass * _dasUnreal_static_138_FindCommonBase(const UClass &,UClass * InClassA,UClass * InClassB);
bool _dasUnreal_virtual_139_IsFunctionImplementedInScript(const UClass & self,FName InFunctionName);
UObject * _dasUnreal_virtual_140_FindArchetype(const UClass & self,const UClass * ArchetypeClass,const FName ArchetypeName);
UObject * _dasUnreal_virtual_141_GetArchetypeForCDO(const UClass & self);
bool _dasUnreal_static_142_IsSafeToSerializeToStructuredArchives(const UClass &,UClass * InClass);
UClass * _dasUnreal_static_143_StaticClass(const UPackage &);
const wchar_t * _dasUnreal_static_144_StaticPackage(const UPackage &);
void _dasUnreal_static_145_StaticRegisterNativesUPackage(const UPackage &);
bool _dasUnreal_virtual_146_IsNameStableForNetworking(const UPackage & self);
bool _dasUnreal_virtual_147_NeedsLoadForClient(const UPackage & self);
bool _dasUnreal_virtual_148_NeedsLoadForServer(const UPackage & self);
bool _dasUnreal_virtual_149_IsPostLoadThreadSafe(const UPackage & self);
bool _dasUnreal_virtual_150_IsDestructionThreadSafe(const UPackage & self);
void _dasUnreal_virtual_151_PostInitProperties(UPackage & self);
void _dasUnreal_virtual_152_FinishDestroy(UPackage & self);
bool _dasUnreal_virtual_153_IsAsset(const UPackage & self);
void _dasUnreal_virtual_154_TagSubobjects(UPackage & self,EObjectFlags NewFlags);
void _dasUnreal_static_155_WaitForAsyncFileWrites(const UPackage &);
bool _dasUnreal_static_156_HasAsyncFileWrites(const UPackage &);
bool _dasUnreal_static_157_IsEmptyPackage(const UPackage &,UPackage * Package,const UObject * LastReferencer);
