// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

EVersionComparison _dasUnreal_static_0_GetNewest(const FEngineVersionBase *,const FEngineVersionBase & First,const FEngineVersionBase & Second,EVersionComponent * OutComponent);
unsigned int _dasUnreal_static_1_EncodeLicenseeChangelist(const FEngineVersionBase *,unsigned int Changelist);
void _dasUnreal_virtual_2_Serialize(FOutputDevice & self,const wchar_t * V,ELogVerbosity::Type Verbosity,const FName & Category,const double Time);
void _dasUnreal_virtual_3_SerializeRecord(FOutputDevice & self,const UE::FLogRecord & Record);
void _dasUnreal_virtual_4_Flush(FOutputDevice & self);
void _dasUnreal_virtual_5_TearDown(FOutputDevice & self);
void _dasUnreal_virtual_6_Dump(FOutputDevice & self,FArchive & Ar);
bool _dasUnreal_virtual_7_IsMemoryOnly(const FOutputDevice & self);
bool _dasUnreal_virtual_8_CanBeUsedOnAnyThread(const FOutputDevice & self);
bool _dasUnreal_virtual_9_CanBeUsedOnMultipleThreads(const FOutputDevice & self);
bool _dasUnreal_virtual_10_CanBeUsedOnPanicThread(const FOutputDevice & self);
FArchiveState & _dasUnreal_virtual_11_GetInnermostState(FArchiveState & self);
void _dasUnreal_virtual_12_CountBytes(FArchiveState & self,SIZE_T InNum,SIZE_T InMax);
FString _dasUnreal_virtual_13_GetArchiveName(const FArchiveState & self);
FLinker * _dasUnreal_virtual_14_GetLinker(FArchiveState & self);
int64 _dasUnreal_virtual_15_Tell(FArchiveState & self);
int64 _dasUnreal_virtual_16_TotalSize(FArchiveState & self);
bool _dasUnreal_virtual_17_AtEnd(FArchiveState & self);
UObject * _dasUnreal_virtual_18_GetArchetypeFromLoader(FArchiveState & self,const UObject * Obj);
unsigned int _dasUnreal_virtual_19_EngineNetVer(const FArchiveState & self);
unsigned int _dasUnreal_virtual_20_GameNetVer(const FArchiveState & self);
void _dasUnreal_virtual_21_ResetCustomVersions(FArchiveState & self);
void _dasUnreal_virtual_22_SetFilterEditorOnly(FArchiveState & self,bool InFilterEditorOnly);
bool _dasUnreal_virtual_23_UseToResolveEnumerators(const FArchiveState & self);
bool _dasUnreal_virtual_24_ShouldSkipProperty(const FArchiveState & self,const FProperty * InProperty);
void _dasUnreal_virtual_25_SetSerializedProperty(FArchiveState & self,FProperty * InProperty);
void _dasUnreal_virtual_26_SetSerializedPropertyChain(FArchiveState & self,const FArchiveSerializedPropertyChain * InSerializedPropertyChain,FProperty * InSerializedPropertyOverride);
bool _dasUnreal_virtual_27_IsEditorOnlyPropertyOnTheStack(const FArchiveState & self);
void _dasUnreal_virtual_28_SetSerializeContext(FArchiveState & self,FUObjectSerializeContext * InLoadContext);
FUObjectSerializeContext * _dasUnreal_virtual_29_GetSerializeContext(FArchiveState & self);
void _dasUnreal_virtual_30_SetLocalizationNamespace(FArchiveState & self,const FString & InLocalizationNamespace);
FString _dasUnreal_virtual_31_GetLocalizationNamespace(const FArchiveState & self);
void _dasUnreal_virtual_32_Reset(FArchiveState & self);
void _dasUnreal_virtual_33_SetIsLoading(FArchiveState & self,bool bInIsLoading);
void _dasUnreal_virtual_34_SetIsLoadingFromCookedPackage(FArchiveState & self,bool bInIsLoadingFromCookedPackage);
void _dasUnreal_virtual_35_SetIsSaving(FArchiveState & self,bool bInIsSaving);
void _dasUnreal_virtual_36_SetIsTransacting(FArchiveState & self,bool bInIsTransacting);
void _dasUnreal_virtual_37_SetIsTextFormat(FArchiveState & self,bool bInIsTextFormat);
void _dasUnreal_virtual_38_SetWantBinaryPropertySerialization(FArchiveState & self,bool bInWantBinaryPropertySerialization);
void _dasUnreal_virtual_39_SetUseUnversionedPropertySerialization(FArchiveState & self,bool bInUseUnversioned);
void _dasUnreal_virtual_40_SetForceUnicode(FArchiveState & self,bool bInForceUnicode);
void _dasUnreal_virtual_41_SetIsPersistent(FArchiveState & self,bool bInIsPersistent);
void _dasUnreal_virtual_42_SetLicenseeUEVer(FArchiveState & self,int InVer);
void _dasUnreal_virtual_43_SetEngineVer(FArchiveState & self,const FEngineVersionBase & InVer);
void _dasUnreal_virtual_44_SetEngineNetVer(FArchiveState & self,const unsigned int InEngineNetVer);
void _dasUnreal_virtual_45_SetGameNetVer(FArchiveState & self,const unsigned int InGameNetVer);
void _dasUnreal_virtual_46_ForceBlueprintFinalization(FArchive & self);
void _dasUnreal_virtual_47_Serialize(FArchive & self,void * V,int64 Length);
void _dasUnreal_virtual_48_SerializeBits(FArchive & self,void * V,int64 LengthBits);
void _dasUnreal_virtual_49_SerializeInt(FArchive & self,unsigned int & Value,unsigned int Max);
void _dasUnreal_virtual_50_SerializeIntPacked(FArchive & self,unsigned int & Value);
void _dasUnreal_virtual_51_SerializeIntPacked64(FArchive & self,unsigned long long & Value);
void _dasUnreal_virtual_52_Preload(FArchive & self,UObject * Object);
void _dasUnreal_virtual_53_Seek(FArchive & self,int64 InPos);
void _dasUnreal_virtual_54_AttachBulkData(FArchive & self,UE::Serialization::FEditorBulkData * BulkData);
void _dasUnreal_virtual_55_DetachBulkData(FArchive & self,UE::Serialization::FEditorBulkData * BulkData,bool bEnsureBulkDataIsLoaded);
bool _dasUnreal_virtual_56_IsProxyOf(const FArchive & self,FArchive * InOther);
bool _dasUnreal_virtual_57_Precache(FArchive & self,int64 PrecacheOffset,int64 PrecacheSize);
void _dasUnreal_virtual_58_FlushCache(FArchive & self);
void _dasUnreal_virtual_59_Flush(FArchive & self);
bool _dasUnreal_virtual_60_Close(FArchive & self);
void _dasUnreal_virtual_61_MarkScriptSerializationStart(FArchive & self,const UObject * Obj);
void _dasUnreal_virtual_62_MarkScriptSerializationEnd(FArchive & self,const UObject * Obj);
FArchive * _dasUnreal_virtual_63_GetCacheableArchive(FArchive & self);
void _dasUnreal_virtual_64_PushSerializedProperty(FArchive & self,FProperty * InProperty,const bool bIsEditorOnlyProperty);
void _dasUnreal_virtual_65_PopSerializedProperty(FArchive & self,FProperty * InProperty,const bool bIsEditorOnlyProperty);
void _dasUnreal_virtual_66_PushDebugDataString(FArchive & self,const FName & DebugData);
void _dasUnreal_virtual_67_PopDebugDataString(FArchive & self);
void _dasUnreal_virtual_68_PushFileRegionType(FArchive & self,EFileRegionType Type);
void _dasUnreal_virtual_69_PopFileRegionType(FArchive & self);
FString _dasUnreal_static_70_Chr(const FString *,wchar_t Ch);
FString _dasUnreal_static_71_ChrN(const FString *,int NumCharacters,wchar_t Char);
FString _dasUnreal_static_72_FormatAsNumber(const FString *,int InNumber);
FString _dasUnreal_static_73_FromInt(const FString *,int Num);
FString _dasUnreal_static_74_FromBlob(const FString *,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_75_ToBlob(const FString *,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_76_FromHexBlob(const FString *,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_77_ToHexBlob(const FString *,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_78_SanitizeFloat(const FString *,double InFloat,const int InMinFractionalDigits);
FSetElementId _dasUnreal_static_79_FromInteger(const FSetElementId *,int Integer);
FPrimaryAssetId _dasUnreal_static_80_ParseTypeAndName(const FPrimaryAssetId *,const wchar_t * TypeAndName,unsigned int Len);
FPrimaryAssetId _dasUnreal_static_81_ParseTypeAndName(const FPrimaryAssetId *,FName TypeAndName);
FPrimaryAssetId _dasUnreal_static_82_ParseTypeAndName(const FPrimaryAssetId *,const FString & TypeAndName);
FPrimaryAssetId _dasUnreal_static_83_FromString(const FPrimaryAssetId *,const FString & String);
const char * _dasUnreal_static_84_GetGroupName(const FStatGroup_STATGROUP_Script *);
const char * _dasUnreal_static_85_GetGroupCategory(const FStatGroup_STATGROUP_Script *);
const wchar_t * _dasUnreal_static_86_GetDescription(const FStatGroup_STATGROUP_Script *);
bool _dasUnreal_static_87_IsDefaultEnabled(const FStatGroup_STATGROUP_Script *);
bool _dasUnreal_static_88_IsCompileTimeEnable(const FStatGroup_STATGROUP_Script *);
bool _dasUnreal_static_89_GetSortByName(const FStatGroup_STATGROUP_Script *);
void _dasUnreal_static_90_ThrowScriptException(const FBlueprintCoreDelegates *,const UObject * ActiveObject,FFrame & StackFrame,const FBlueprintExceptionInfo & Info);
void _dasUnreal_static_91_InstrumentScriptEvent(const FBlueprintCoreDelegates *,const FScriptInstrumentationSignal & Info);
void _dasUnreal_static_92_SetScriptMaximumLoopIterations(const FBlueprintCoreDelegates *,const int MaximumLoopIterations);
bool _dasUnreal_static_93_IsDebuggingEnabled(const FBlueprintCoreDelegates *);
FBlueprintContextTracker & _dasUnreal_static_94_Get(const FBlueprintContextTracker *);
const FBlueprintContextTracker * _dasUnreal_static_95_TryGet(const FBlueprintContextTracker *);
void _dasUnreal_static_96_AssertIfInConstructor(const FObjectInitializer *,UObject * Outer,const wchar_t * ErrorMessage);
FObjectInitializer & _dasUnreal_static_97_Get(const FObjectInitializer *);
void _dasUnreal_static_98_InitProperties(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer,UObject * Obj,UClass * DefaultsClass,UObject * DefaultData);
bool _dasUnreal_static_99_InitSubobjectProperties(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer);
void _dasUnreal_static_100_InstanceSubobjects(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer,UClass * Class,bool bNeedInstancing,bool bNeedSubobjectInstancing);
void _dasUnreal_static_101_PostConstructInitObject(const FScriptIntegrationObjectHelper *,FObjectInitializer & ObjectInitializer);
void _dasUnreal_virtual_102_AddStableReference(FReferenceCollector & self,TObjectPtr_UObject * Object);
void _dasUnreal_virtual_103_AddStableReference(FReferenceCollector & self,UObject ** Object);
bool _dasUnreal_virtual_104_NeedsPropertyReferencer(const FReferenceCollector & self);
void _dasUnreal_virtual_105_AllowEliminatingReferences(FReferenceCollector & self,bool bAllow);
void _dasUnreal_virtual_106_SetSerializedProperty(FReferenceCollector & self,FProperty * Inproperty);
FProperty * _dasUnreal_virtual_107_GetSerializedProperty(const FReferenceCollector & self);
bool _dasUnreal_virtual_108_MarkWeakObjectReferenceForClearing(FReferenceCollector & self,UObject ** WeakReference);
void _dasUnreal_virtual_109_SetIsProcessingNativeReferences(FReferenceCollector & self,bool bIsNative);
bool _dasUnreal_virtual_110_IsProcessingNativeReferences(const FReferenceCollector & self);
bool _dasUnreal_virtual_111_NeedsInitialReferences(const FReferenceCollector & self);
void _dasUnreal_virtual_112_FindReferences(FReferenceFinder & self,UObject * Object,UObject * ReferencingObject,FProperty * ReferencingProperty);
bool _dasUnreal_virtual_113_IsIgnoringArchetypeRef(const FReferenceFinder & self);
bool _dasUnreal_virtual_114_IsIgnoringTransient(const FReferenceFinder & self);
void _dasUnreal_virtual_115_SetSerializedProperty(FReferenceFinder & self,FProperty * Inproperty);
FProperty * _dasUnreal_virtual_116_GetSerializedProperty(const FReferenceFinder & self);
void _dasUnreal_static_117_BroadcastOnObjectModified(const FCoreUObjectDelegates *,UObject * Object);
FString _dasUnreal_static_118_FormatPathForAssetLog(const FAssetMsg *,const wchar_t * Path);
FString _dasUnreal_static_119_FormatPathForAssetLog(const FAssetMsg *,const UObject * Object);
FString _dasUnreal_static_120_GetAssetLogString(const FAssetMsg *,const wchar_t * Path,const FString & Message);
FString _dasUnreal_static_121_GetAssetLogString(const FAssetMsg *,const UObject * Object,const FString & Message);
FName _dasUnreal_virtual_122_GetFNameForStatID(const UObjectBase & self);
FString _dasUnreal_static_123_RemoveClassPrefix(const UObjectBase *,const wchar_t * ClassName);
void _dasUnreal_static_124_PrefetchClass(const UObjectBase *,UObject * Object);
void _dasUnreal_static_125_PrefetchOuter(const UObjectBase *,UObject * Object);
bool _dasUnreal_static_126_IsPendingKillEnabled(const UObjectBaseUtility *);
EInternalObjectFlags _dasUnreal_static_127_FixGarbageOrPendingKillInternalObjectFlags(const UObjectBaseUtility *,const EInternalObjectFlags InFlags);
bool _dasUnreal_virtual_128_CanBeClusterRoot(const UObjectBaseUtility & self);
bool _dasUnreal_virtual_129_CanBeInCluster(const UObjectBaseUtility & self);
void _dasUnreal_virtual_130_CreateCluster(UObjectBaseUtility & self);
void _dasUnreal_virtual_131_OnClusterMarkedAsPendingKill(UObjectBaseUtility & self);
UClass * _dasUnreal_static_132_StaticClass(const UObject *);
const wchar_t * _dasUnreal_static_133_StaticConfigName(const UObject *);
void _dasUnreal_static_134_StaticRegisterNativesUObject(const UObject *);
void _dasUnreal_virtual_135_PostInitProperties(UObject & self);
void _dasUnreal_virtual_136_PostReinitProperties(UObject & self);
void _dasUnreal_virtual_137_PostCDOContruct(UObject & self);
bool _dasUnreal_virtual_138_Modify(UObject & self,bool bAlwaysMarkDirty);
bool _dasUnreal_virtual_139_IsCapturingAsRootObjectForTransaction(const UObject & self);
void _dasUnreal_virtual_140_LoadedFromAnotherClass(UObject & self,const FName & OldClassName);
bool _dasUnreal_virtual_141_ResolveSubobject(UObject & self,const wchar_t * SubObjectPath,UObject *& OutObject,bool bLoadIfExists);
bool _dasUnreal_virtual_142_IsReadyForAsyncPostLoad(const UObject & self);
void _dasUnreal_virtual_143_PostLoad(UObject & self);
void _dasUnreal_virtual_144_BeginDestroy(UObject & self);
bool _dasUnreal_virtual_145_IsReadyForFinishDestroy(UObject & self);
void _dasUnreal_virtual_146_PostLinkerChange(UObject & self);
void _dasUnreal_virtual_147_FinishDestroy(UObject & self);
void _dasUnreal_virtual_148_Serialize(UObject & self,FArchive & Ar);
void _dasUnreal_virtual_149_ShutdownAfterError(UObject & self);
void _dasUnreal_virtual_150_PreEditUndo(UObject & self);
void _dasUnreal_virtual_151_PostRename(UObject & self,UObject * OldOuter,const FName OldName);
void _dasUnreal_virtual_152_PostDuplicate(UObject & self,bool bDuplicateForPIE);
void _dasUnreal_virtual_153_PostDuplicate(UObject & self,EDuplicateMode::Type DuplicateMode);
bool _dasUnreal_virtual_154_NeedsLoadForClient(const UObject & self);
bool _dasUnreal_virtual_155_NeedsLoadForServer(const UObject & self);
bool _dasUnreal_virtual_156_NeedsLoadForEditorGame(const UObject & self);
bool _dasUnreal_virtual_157_IsEditorOnly(const UObject & self);
bool _dasUnreal_virtual_158_HasNonEditorOnlyReferences(const UObject & self);
bool _dasUnreal_virtual_159_IsPostLoadThreadSafe(const UObject & self);
bool _dasUnreal_virtual_160_IsDestructionThreadSafe(const UObject & self);
bool _dasUnreal_static_161_CanCreateInCurrentContext(const UObject *,UObject * Template);
void _dasUnreal_virtual_162_PostEditImport(UObject & self);
void _dasUnreal_virtual_163_PostReloadConfig(UObject & self,FProperty * PropertyThatWasLoaded);
bool _dasUnreal_virtual_164_Rename(UObject & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
FString _dasUnreal_virtual_165_GetDesc(UObject & self);
void _dasUnreal_virtual_166_MoveDataToSparseClassDataStruct(const UObject & self);
bool _dasUnreal_virtual_167_ConformSparseClassDataStruct(const UObject & self,UScriptStruct * SourceSparseClassDataStruct,void * SourceSparseClassData);
bool _dasUnreal_virtual_168_ImplementsGetWorld(const UObject & self);
FName _dasUnreal_virtual_169_GetExporterName(UObject & self);
void _dasUnreal_static_170_AddReferencedObjects(const UObject *,UObject * InThis,FReferenceCollector & Collector);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_171_GetRestoreForUObjectOverwrite(UObject & self);
bool _dasUnreal_virtual_172_AreNativePropertiesIdenticalTo(const UObject & self,UObject * Other);
const FName & _dasUnreal_static_173_SourceFileTagName(const UObject *);
const FName & _dasUnreal_static_174_AssetVersePathTagName(const UObject *);
bool _dasUnreal_virtual_175_IsAsset(const UObject & self);
FPrimaryAssetId _dasUnreal_virtual_176_GetPrimaryAssetId(const UObject & self);
bool _dasUnreal_virtual_177_IsLocalizedResource(const UObject & self);
bool _dasUnreal_virtual_178_IsSafeForRootSet(const UObject & self);
void _dasUnreal_virtual_179_TagSubobjects(UObject & self,EObjectFlags NewFlags);
bool _dasUnreal_virtual_180_IsNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_181_IsFullNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_182_IsSupportedForNetworking(const UObject & self);
void _dasUnreal_virtual_183_PreNetReceive(UObject & self);
void _dasUnreal_virtual_184_PostNetReceive(UObject & self);
void _dasUnreal_virtual_185_PostRepNotifies(UObject & self);
void _dasUnreal_virtual_186_PreDestroyFromReplication(UObject & self);
void _dasUnreal_virtual_187_WillNeverCacheCookedPlatformDataAgain(UObject & self);
void _dasUnreal_virtual_188_ClearAllCachedCookedPlatformData(UObject & self);
const wchar_t * _dasUnreal_virtual_189_GetConfigOverridePlatform(const UObject & self);
void _dasUnreal_virtual_190_OverrideConfigSection(UObject & self,FString & SectionName);
void _dasUnreal_virtual_191_OverridePerObjectConfigSection(UObject & self,FString & SectionName);
UObject * _dasUnreal_static_192_GetArchetypeFromRequiredInfo(const UObject *,const UClass * Class,const UObject * Outer,FName Name,EObjectFlags ObjectFlags);
void _dasUnreal_virtual_193_ProcessEvent(UObject & self,UFunction * Function,void * Parms);
int _dasUnreal_virtual_194_GetFunctionCallspace(UObject & self,UFunction * Function,FFrame * Stack);
bool _dasUnreal_virtual_195_CallRemoteFunction(UObject & self,UFunction * Function,void * Parms,FOutParmRec * OutParms,FFrame * Stack);
UClass * _dasUnreal_virtual_196_RegenerateClass(UObject & self,UClass * ClassToRegenerate,UObject * PreviousCDO);
void _dasUnreal_virtual_197_MarkAsEditorOnlySubobject(UObject & self);
uint64 _dasUnreal_virtual_198_GetNetPushIdDynamic(const UObject & self);
FFieldClass * _dasUnreal_static_199_StaticClass(const FField *);
uint64 _dasUnreal_static_200_StaticClassCastFlagsPrivate(const FField *);
uint64 _dasUnreal_static_201_StaticClassCastFlags(const FField *);
void _dasUnreal_virtual_202_Serialize(FField & self,FArchive & Ar);
void _dasUnreal_virtual_203_PostLoad(FField & self);
void _dasUnreal_virtual_204_BeginDestroy(FField & self);
void _dasUnreal_virtual_205_AddReferencedObjects(FField & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_206_AddCppProperty(FField & self,FProperty * Property);
void _dasUnreal_virtual_207_Bind(FField & self);
FField * _dasUnreal_static_208_Construct(const FField *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InFlags);
FField * _dasUnreal_static_209_Construct(const FField *,const FName & FieldTypeName,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InFlags);
void _dasUnreal_virtual_210_PostDuplicate(FField & self,const FField & InField);
FField * _dasUnreal_virtual_211_GetInnerFieldByName(FField & self,const FName & InName);
void _dasUnreal_static_212_CopyMetaData(const FField *,const FField * InSourceField,FField * InDestField);
FField * _dasUnreal_static_213_CreateFromUField(const FField *,UField * InField);
FField * _dasUnreal_static_214_Duplicate(const FField *,const FField * InField,FFieldVariant DestOwner,const FName DestName,EObjectFlags FlagMask,EInternalObjectFlags InternalFlagsMask);
FName _dasUnreal_static_215_GenerateFFieldName(const FField *,FFieldVariant InOwner,FFieldClass * InClass);
UClass * _dasUnreal_static_216_StaticClass(const UField *);
const wchar_t * _dasUnreal_static_217_StaticPackage(const UField *);
void _dasUnreal_static_218_StaticRegisterNativesUField(const UField *);
void _dasUnreal_virtual_219_Serialize(UField & self,FArchive & Ar);
void _dasUnreal_virtual_220_PostLoad(UField & self);
bool _dasUnreal_virtual_221_NeedsLoadForClient(const UField & self);
bool _dasUnreal_virtual_222_NeedsLoadForServer(const UField & self);
void _dasUnreal_virtual_223_Bind(UField & self);
void _dasUnreal_static_224_FormatNativeToolTip(const UField *,FString & ToolTipString,bool bRemoveExtraSections);
FField * _dasUnreal_virtual_225_GetAssociatedFField(UField & self);
void _dasUnreal_virtual_226_SetAssociatedFField(UField & self,FField * InField);
UClass * _dasUnreal_static_227_StaticClass(const UStruct *);
const wchar_t * _dasUnreal_static_228_StaticPackage(const UStruct *);
void _dasUnreal_static_229_StaticRegisterNativesUStruct(const UStruct *);
void _dasUnreal_virtual_230_Serialize(UStruct & self,FArchive & Ar);
void _dasUnreal_virtual_231_PostLoad(UStruct & self);
void _dasUnreal_virtual_232_FinishDestroy(UStruct & self);
void _dasUnreal_virtual_233_RegisterDependencies(UStruct & self);
void _dasUnreal_static_234_AddReferencedObjects(const UStruct *,UObject * InThis,FReferenceCollector & Collector);
void _dasUnreal_virtual_235_TagSubobjects(UStruct & self,EObjectFlags NewFlags);
void _dasUnreal_virtual_236_AddCppProperty(UStruct & self,FProperty * Property);
UStruct * _dasUnreal_virtual_237_GetInheritanceSuper(const UStruct & self);
void _dasUnreal_virtual_238_Link(UStruct & self,FArchive & Ar,bool bRelinkExistingProperties);
void _dasUnreal_virtual_239_SerializeBin(const UStruct & self,FArchive & Ar,void * Data);
void _dasUnreal_virtual_240_InitializeStruct(const UStruct & self,void * Dest,int ArrayDim);
void _dasUnreal_virtual_241_DestroyStruct(const UStruct & self,void * Dest,int ArrayDim);
FProperty * _dasUnreal_virtual_242_CustomFindProperty(const UStruct & self,const FName InName);
const wchar_t * _dasUnreal_virtual_243_GetPrefixCPP(const UStruct & self);
void _dasUnreal_virtual_244_SetSuperStruct(UStruct & self,UStruct * NewSuperStruct);
FString _dasUnreal_virtual_245_GetAuthoredNameForField(const UStruct & self,const UField * Field);
FString _dasUnreal_virtual_246_GetAuthoredNameForField(const UStruct & self,const FField * Field);
bool _dasUnreal_virtual_247_IsStructTrashed(const UStruct & self);
UClass * _dasUnreal_static_248_StaticClass(const UScriptStruct *);
const wchar_t * _dasUnreal_static_249_StaticPackage(const UScriptStruct *);
void _dasUnreal_static_250_StaticRegisterNativesUScriptStruct(const UScriptStruct *);
void _dasUnreal_virtual_251_Serialize(UScriptStruct & self,FArchive & Ar);
void _dasUnreal_virtual_252_Link(UScriptStruct & self,FArchive & Ar,bool bRelinkExistingProperties);
void _dasUnreal_virtual_253_InitializeStruct(const UScriptStruct & self,void * Dest,int ArrayDim);
void _dasUnreal_virtual_254_DestroyStruct(const UScriptStruct & self,void * Dest,int ArrayDim);
bool _dasUnreal_virtual_255_IsStructTrashed(const UScriptStruct & self);
void _dasUnreal_virtual_256_PrepareCppStructOps(UScriptStruct & self);
unsigned int _dasUnreal_virtual_257_GetStructTypeHash(const UScriptStruct & self,const void * Src);
void _dasUnreal_virtual_258_RecursivelyPreload(UScriptStruct & self);
FString _dasUnreal_virtual_259_GetStructCPPName(const UScriptStruct & self,unsigned int CPPExportFlags);
void _dasUnreal_virtual_260_InitializeDefaultValue(const UScriptStruct & self,unsigned char * InStructData);
UClass * _dasUnreal_static_261_StaticClass(const UFunction *);
const wchar_t * _dasUnreal_static_262_StaticPackage(const UFunction *);
void _dasUnreal_static_263_StaticRegisterNativesUFunction(const UFunction *);
void _dasUnreal_virtual_264_Serialize(UFunction & self,FArchive & Ar);
void _dasUnreal_virtual_265_PostLoad(UFunction & self);
void _dasUnreal_virtual_266_Bind(UFunction & self);
UStruct * _dasUnreal_virtual_267_GetInheritanceSuper(const UFunction & self);
void _dasUnreal_virtual_268_Link(UFunction & self,FArchive & Ar,bool bRelinkExistingProperties);
uint64 _dasUnreal_static_269_GetDefaultIgnoredSignatureCompatibilityFlags(const UFunction *);
UClass * _dasUnreal_static_270_StaticClass(const UEnum *);
const wchar_t * _dasUnreal_static_271_StaticPackage(const UEnum *);
void _dasUnreal_static_272_StaticRegisterNativesUEnum(const UEnum *);
FText _dasUnreal_virtual_273_GetDisplayNameTextByIndex(const UEnum & self,int InIndex);
FString _dasUnreal_virtual_274_GetAuthoredNameStringByIndex(const UEnum & self,int InIndex);
bool _dasUnreal_static_275_IsFullEnumName(const UEnum *,const wchar_t * InEnumName);
FString _dasUnreal_virtual_276_GenerateFullEnumName(const UEnum & self,const wchar_t * InEnumName);
int64 _dasUnreal_static_277_ParseEnum(const UEnum *,const wchar_t *& Str);
void _dasUnreal_virtual_278_Serialize(UEnum & self,FArchive & Ar);
void _dasUnreal_virtual_279_BeginDestroy(UEnum & self);
bool _dasUnreal_virtual_280_IsAbstract(const FCppClassTypeInfo & self);
UClass * _dasUnreal_static_281_StaticClass(const UClass *);
const wchar_t * _dasUnreal_static_282_StaticPackage(const UClass *);
void _dasUnreal_static_283_StaticRegisterNativesUClass(const UClass *);
void _dasUnreal_virtual_284_ConditionalRecompileClass(UClass & self,FUObjectSerializeContext * InLoadContext);
void _dasUnreal_virtual_285_FlushCompilationQueueForLevel(UClass & self);
void _dasUnreal_static_286_AssembleReferenceTokenStreams(const UClass *);
UClass * _dasUnreal_virtual_287_GetAuthoritativeClass(UClass & self);
void _dasUnreal_virtual_288_Serialize(UClass & self,FArchive & Ar);
void _dasUnreal_virtual_289_PostLoad(UClass & self);
void _dasUnreal_virtual_290_FinishDestroy(UClass & self);
void _dasUnreal_virtual_291_DeferredRegister(UClass & self,UClass * UClassStaticClass,const wchar_t * PackageName,const wchar_t * InName);
bool _dasUnreal_virtual_292_Rename(UClass & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
void _dasUnreal_virtual_293_TagSubobjects(UClass & self,EObjectFlags NewFlags);
void _dasUnreal_virtual_294_PostInitProperties(UClass & self);
void _dasUnreal_static_295_AddReferencedObjects(const UClass *,UObject * InThis,FReferenceCollector & Collector);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_296_GetRestoreForUObjectOverwrite(UClass & self);
FString _dasUnreal_virtual_297_GetDesc(UClass & self);
bool _dasUnreal_virtual_298_IsAsset(const UClass & self);
bool _dasUnreal_virtual_299_IsNameStableForNetworking(const UClass & self);
void _dasUnreal_virtual_300_Bind(UClass & self);
const wchar_t * _dasUnreal_virtual_301_GetPrefixCPP(const UClass & self);
void _dasUnreal_virtual_302_Link(UClass & self,FArchive & Ar,bool bRelinkExistingProperties);
void _dasUnreal_virtual_303_SetSuperStruct(UClass & self,UStruct * NewSuperStruct);
bool _dasUnreal_virtual_304_IsStructTrashed(const UClass & self);
void _dasUnreal_virtual_305_PostLoadInstance(UClass & self,UObject * InObj);
void _dasUnreal_virtual_306_InitPropertiesFromCustomList(UClass & self,unsigned char * DataPtr,const unsigned char * DefaultDataPtr);
bool _dasUnreal_virtual_307_CanCreateAssetOfClass(const UClass & self);
unsigned char * _dasUnreal_virtual_308_GetPersistentUberGraphFrame(const UClass & self,UObject * Obj,UFunction * FuncToCheck);
void _dasUnreal_virtual_309_CreatePersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bCreateOnlyIfEmpty,bool bSkipSuperClass,UClass * OldClass);
void _dasUnreal_virtual_310_DestroyPersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bSkipSuperClass);
void _dasUnreal_virtual_311_PostLoadDefaultObject(UClass & self,UObject * Object);
void _dasUnreal_virtual_312_PurgeClass(UClass & self,bool bRecompilingOnLoad);
UClass * _dasUnreal_static_313_FindCommonBase(const UClass *,UClass * InClassA,UClass * InClassB);
bool _dasUnreal_virtual_314_IsFunctionImplementedInScript(const UClass & self,FName InFunctionName);
bool _dasUnreal_virtual_315_HasProperty(const UClass & self,FProperty * InProperty);
UObject * _dasUnreal_virtual_316_FindArchetype(const UClass & self,const UClass * ArchetypeClass,const FName ArchetypeName);
UObject * _dasUnreal_virtual_317_GetArchetypeForCDO(const UClass & self);
bool _dasUnreal_static_318_IsSafeToSerializeToStructuredArchives(const UClass *,UClass * InClass);
UClass * _dasUnreal_static_319_StaticClass(const UPackage *);
const wchar_t * _dasUnreal_static_320_StaticPackage(const UPackage *);
void _dasUnreal_static_321_StaticRegisterNativesUPackage(const UPackage *);
bool _dasUnreal_virtual_322_IsNameStableForNetworking(const UPackage & self);
bool _dasUnreal_virtual_323_NeedsLoadForClient(const UPackage & self);
bool _dasUnreal_virtual_324_NeedsLoadForServer(const UPackage & self);
bool _dasUnreal_virtual_325_IsPostLoadThreadSafe(const UPackage & self);
bool _dasUnreal_virtual_326_IsDestructionThreadSafe(const UPackage & self);
void _dasUnreal_virtual_327_PostInitProperties(UPackage & self);
void _dasUnreal_virtual_328_FinishDestroy(UPackage & self);
void _dasUnreal_virtual_329_Serialize(UPackage & self,FArchive & Ar);
bool _dasUnreal_virtual_330_IsAsset(const UPackage & self);
void _dasUnreal_static_331_AddReferencedObjects(const UPackage *,UObject * InThis,FReferenceCollector & Collector);
void _dasUnreal_virtual_332_TagSubobjects(UPackage & self,EObjectFlags NewFlags);
void _dasUnreal_static_333_WaitForAsyncFileWrites(const UPackage *);
bool _dasUnreal_static_334_HasAsyncFileWrites(const UPackage *);
bool _dasUnreal_static_335_IsEmptyPackage(const UPackage *,UPackage * Package,const UObject * LastReferencer);
FFieldClass * _dasUnreal_static_336_StaticClass(const FProperty *);
uint64 _dasUnreal_static_337_StaticClassCastFlagsPrivate(const FProperty *);
uint64 _dasUnreal_static_338_StaticClassCastFlags(const FProperty *);
void _dasUnreal_virtual_339_Serialize(FProperty & self,FArchive & Ar);
void _dasUnreal_virtual_340_PostDuplicate(FProperty & self,const FField & InField);
FName _dasUnreal_static_341_FindRedirectedPropertyName(const FProperty *,UStruct * ObjectStruct,FName OldName);
FString _dasUnreal_virtual_342_GetCPPMacroType(const FProperty & self,FString & ExtendedTypeText);
bool _dasUnreal_virtual_343_PassCPPArgsByRef(const FProperty & self);
FString _dasUnreal_virtual_344_GetCPPType(const FProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_345_GetCPPTypeForwardDeclaration(const FProperty & self);
bool _dasUnreal_virtual_346_HasSetter(const FProperty & self);
bool _dasUnreal_virtual_347_HasGetter(const FProperty & self);
bool _dasUnreal_virtual_348_HasSetterOrGetter(const FProperty & self);
void _dasUnreal_virtual_349_CallSetter(const FProperty & self,void * Container,const void * InValue);
void _dasUnreal_virtual_350_CallGetter(const FProperty & self,const void * Container,void * OutValue);
bool _dasUnreal_virtual_351_Identical(const FProperty & self,const void * A,const void * B,unsigned int PortFlags);
bool _dasUnreal_virtual_352_SupportsNetSharedSerialization(const FProperty & self);
void * _dasUnreal_virtual_353_GetValueAddressAtIndex_Direct(const FProperty & self,const FProperty * Inner,void * InValueAddress,int Index);
void _dasUnreal_virtual_354_AppendSchemaHash(const FProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
void _dasUnreal_virtual_355_CopySingleValueToScriptVM(const FProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_356_CopyCompleteValueToScriptVM(const FProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_357_CopyCompleteValueToScriptVM_InContainer(const FProperty & self,void * OutValue,const void * InContainer);
void _dasUnreal_virtual_358_CopyCompleteValueFromScriptVM_InContainer(const FProperty & self,void * OutContainer,const void * InValue);
void _dasUnreal_virtual_359_CopySingleValueFromScriptVM(const FProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_360_CopyCompleteValueFromScriptVM(const FProperty & self,void * Dest,const void * Src);
FName _dasUnreal_virtual_361_GetID(const FProperty & self);
int _dasUnreal_virtual_362_GetMinAlignment(const FProperty & self);
bool _dasUnreal_virtual_363_SameType(const FProperty & self,const FProperty * Other);
FFieldClass * _dasUnreal_static_364_StaticClass(const FNumericProperty *);
FField * _dasUnreal_static_365_Construct(const FNumericProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_366_StaticClassCastFlagsPrivate(const FNumericProperty *);
uint64 _dasUnreal_static_367_StaticClassCastFlags(const FNumericProperty *);
const wchar_t * _dasUnreal_virtual_368_ImportText_Internal(const FNumericProperty & self,const wchar_t * Buffer,void * ContainerOrPropertyPtr,EPropertyPointerType PropertyPointerType,UObject * Parent,int PortFlags,FOutputDevice * ErrorText);
void _dasUnreal_virtual_369_ExportText_Internal(const FNumericProperty & self,FString & ValueStr,const void * PropertyValueOrContainer,EPropertyPointerType PropertyPointerType,const void * DefaultValue,UObject * Parent,int PortFlags,UObject * ExportRootScope);
bool _dasUnreal_virtual_370_IsFloatingPoint(const FNumericProperty & self);
bool _dasUnreal_virtual_371_IsInteger(const FNumericProperty & self);
UEnum * _dasUnreal_virtual_372_GetIntPropertyEnum(const FNumericProperty & self);
void _dasUnreal_virtual_373_SetIntPropertyValue(const FNumericProperty & self,void * Data,uint64 Value);
void _dasUnreal_virtual_374_SetIntPropertyValue(const FNumericProperty & self,void * Data,int64 Value);
void _dasUnreal_virtual_375_SetFloatingPointPropertyValue(const FNumericProperty & self,void * Data,double Value);
void _dasUnreal_virtual_376_SetNumericPropertyValueFromString(const FNumericProperty & self,void * Data,const wchar_t * Value);
void _dasUnreal_virtual_377_SetNumericPropertyValueFromString_InContainer(const FNumericProperty & self,void * Container,const wchar_t * Value);
int64 _dasUnreal_virtual_378_GetSignedIntPropertyValue(const FNumericProperty & self,const void * Data);
int64 _dasUnreal_virtual_379_GetSignedIntPropertyValue_InContainer(const FNumericProperty & self,const void * Container);
uint64 _dasUnreal_virtual_380_GetUnsignedIntPropertyValue(const FNumericProperty & self,const void * Data);
uint64 _dasUnreal_virtual_381_GetUnsignedIntPropertyValue_InContainer(const FNumericProperty & self,const void * Container);
double _dasUnreal_virtual_382_GetFloatingPointPropertyValue(const FNumericProperty & self,const void * Data);
FString _dasUnreal_virtual_383_GetNumericPropertyValueToString(const FNumericProperty & self,const void * Data);
FString _dasUnreal_virtual_384_GetNumericPropertyValueToString_InContainer(const FNumericProperty & self,const void * Container);
FFieldClass * _dasUnreal_static_385_StaticClass(const FByteProperty *);
FField * _dasUnreal_static_386_Construct(const FByteProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_387_StaticClassCastFlagsPrivate(const FByteProperty *);
uint64 _dasUnreal_static_388_StaticClassCastFlags(const FByteProperty *);
void _dasUnreal_virtual_389_Serialize(FByteProperty & self,FArchive & Ar);
void _dasUnreal_virtual_390_AddReferencedObjects(FByteProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_391_PostDuplicate(FByteProperty & self,const FField & InField);
FString _dasUnreal_virtual_392_GetCPPType(const FByteProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
void _dasUnreal_virtual_393_AppendSchemaHash(const FByteProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
UEnum * _dasUnreal_virtual_394_GetIntPropertyEnum(const FByteProperty & self);
FFieldClass * _dasUnreal_static_395_StaticClass(const FInt8Property *);
FField * _dasUnreal_static_396_Construct(const FInt8Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_397_StaticClassCastFlagsPrivate(const FInt8Property *);
uint64 _dasUnreal_static_398_StaticClassCastFlags(const FInt8Property *);
FFieldClass * _dasUnreal_static_399_StaticClass(const FInt16Property *);
FField * _dasUnreal_static_400_Construct(const FInt16Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_401_StaticClassCastFlagsPrivate(const FInt16Property *);
uint64 _dasUnreal_static_402_StaticClassCastFlags(const FInt16Property *);
FFieldClass * _dasUnreal_static_403_StaticClass(const FIntProperty *);
FField * _dasUnreal_static_404_Construct(const FIntProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_405_StaticClassCastFlagsPrivate(const FIntProperty *);
uint64 _dasUnreal_static_406_StaticClassCastFlags(const FIntProperty *);
FFieldClass * _dasUnreal_static_407_StaticClass(const FInt64Property *);
FField * _dasUnreal_static_408_Construct(const FInt64Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_409_StaticClassCastFlagsPrivate(const FInt64Property *);
uint64 _dasUnreal_static_410_StaticClassCastFlags(const FInt64Property *);
FFieldClass * _dasUnreal_static_411_StaticClass(const FUInt16Property *);
FField * _dasUnreal_static_412_Construct(const FUInt16Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_413_StaticClassCastFlagsPrivate(const FUInt16Property *);
uint64 _dasUnreal_static_414_StaticClassCastFlags(const FUInt16Property *);
FFieldClass * _dasUnreal_static_415_StaticClass(const FUInt32Property *);
FField * _dasUnreal_static_416_Construct(const FUInt32Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_417_StaticClassCastFlagsPrivate(const FUInt32Property *);
uint64 _dasUnreal_static_418_StaticClassCastFlags(const FUInt32Property *);
FFieldClass * _dasUnreal_static_419_StaticClass(const FUInt64Property *);
FField * _dasUnreal_static_420_Construct(const FUInt64Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_421_StaticClassCastFlagsPrivate(const FUInt64Property *);
uint64 _dasUnreal_static_422_StaticClassCastFlags(const FUInt64Property *);
FFieldClass * _dasUnreal_static_423_StaticClass(const FFloatProperty *);
FField * _dasUnreal_static_424_Construct(const FFloatProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_425_StaticClassCastFlagsPrivate(const FFloatProperty *);
uint64 _dasUnreal_static_426_StaticClassCastFlags(const FFloatProperty *);
FFieldClass * _dasUnreal_static_427_StaticClass(const FDoubleProperty *);
FField * _dasUnreal_static_428_Construct(const FDoubleProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_429_StaticClassCastFlagsPrivate(const FDoubleProperty *);
uint64 _dasUnreal_static_430_StaticClassCastFlags(const FDoubleProperty *);
FFieldClass * _dasUnreal_static_431_StaticClass(const FBoolProperty *);
FField * _dasUnreal_static_432_Construct(const FBoolProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_433_StaticClassCastFlagsPrivate(const FBoolProperty *);
uint64 _dasUnreal_static_434_StaticClassCastFlags(const FBoolProperty *);
void _dasUnreal_virtual_435_Serialize(FBoolProperty & self,FArchive & Ar);
void _dasUnreal_virtual_436_PostDuplicate(FBoolProperty & self,const FField & InField);
FString _dasUnreal_virtual_437_GetCPPType(const FBoolProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_438_GetCPPMacroType(const FBoolProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_439_GetCPPTypeForwardDeclaration(const FBoolProperty & self);
void _dasUnreal_virtual_440_LinkInternal(FBoolProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_441_Identical(const FBoolProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_442_CopyValuesInternal(const FBoolProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_443_ClearValueInternal(const FBoolProperty & self,void * Data);
void _dasUnreal_virtual_444_InitializeValueInternal(const FBoolProperty & self,void * Dest);
int _dasUnreal_virtual_445_GetMinAlignment(const FBoolProperty & self);
void _dasUnreal_virtual_446_AppendSchemaHash(const FBoolProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
bool _dasUnreal_static_447_GetDefaultPropertyValue(const FBoolProperty *);
unsigned int _dasUnreal_virtual_448_GetValueTypeHashInternal(const FBoolProperty & self,const void * Src);
FFieldClass * _dasUnreal_static_449_StaticClass(const FObjectPropertyBase *);
FField * _dasUnreal_static_450_Construct(const FObjectPropertyBase *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_451_StaticClassCastFlagsPrivate(const FObjectPropertyBase *);
uint64 _dasUnreal_static_452_StaticClassCastFlags(const FObjectPropertyBase *);
void _dasUnreal_virtual_453_Serialize(FObjectPropertyBase & self,FArchive & Ar);
void _dasUnreal_virtual_454_AddReferencedObjects(FObjectPropertyBase & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_455_BeginDestroy(FObjectPropertyBase & self);
void _dasUnreal_virtual_456_PostDuplicate(FObjectPropertyBase & self,const FField & InField);
bool _dasUnreal_virtual_457_Identical(const FObjectPropertyBase & self,const void * A,const void * B,unsigned int PortFlags);
bool _dasUnreal_virtual_458_SupportsNetSharedSerialization(const FObjectPropertyBase & self);
FName _dasUnreal_virtual_459_GetID(const FObjectPropertyBase & self);
bool _dasUnreal_virtual_460_SameType(const FObjectPropertyBase & self,const FProperty * Other);
FString _dasUnreal_virtual_461_GetCPPTypeCustom(const FObjectPropertyBase & self,FString * ExtendedTypeText,unsigned int CPPExportFlags,const FString & InnerNativeTypeName);
bool _dasUnreal_static_462_ParseObjectPropertyValue(const FObjectPropertyBase *,const FProperty * Property,UObject * OwnerObject,UClass * RequiredMetaClass,unsigned int PortFlags,const wchar_t *& Buffer,TObjectPtr_UObject & out_ResolvedValue,FUObjectSerializeContext * InSerializeContext,bool bAllowAnyPackage);
TObjectPtr_UObject _dasUnreal_static_463_FindImportedObject(const FObjectPropertyBase *,const FProperty * Property,UObject * OwnerObject,UClass * ObjectClass,UClass * RequiredMetaClass,const wchar_t * Text,unsigned int PortFlags,FUObjectSerializeContext * InSerializeContext,bool bAllowAnyPackage);
bool _dasUnreal_static_464_StaticIdentical(const FObjectPropertyBase *,UObject * A,UObject * B,unsigned int PortFlags);
UObject * _dasUnreal_virtual_465_LoadObjectPropertyValue(const FObjectPropertyBase & self,const void * PropertyValueAddress);
TObjectPtr_UObject _dasUnreal_virtual_466_GetObjectPtrPropertyValue(const FObjectPropertyBase & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_467_GetObjectPropertyValue(const FObjectPropertyBase & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_468_GetObjectPropertyValue_InContainer(const FObjectPropertyBase & self,const void * ContainerAddress,int ArrayIndex);
void _dasUnreal_virtual_469_SetObjectPropertyValue(const FObjectPropertyBase & self,void * PropertyValueAddress,UObject * Value);
void _dasUnreal_virtual_470_SetObjectPtrPropertyValue(const FObjectPropertyBase & self,void * PropertyValueAddress,TObjectPtr_UObject Value);
void _dasUnreal_virtual_471_SetObjectPropertyValue_InContainer(const FObjectPropertyBase & self,void * ContainerAddress,UObject * Value,int ArrayIndex);
void _dasUnreal_virtual_472_CheckValidObject(const FObjectPropertyBase & self,void * ValueAddress,TObjectPtr_UObject OldValue);
FFieldClass * _dasUnreal_static_473_StaticClass(const FObjectProperty *);
FField * _dasUnreal_static_474_Construct(const FObjectProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_475_StaticClassCastFlagsPrivate(const FObjectProperty *);
uint64 _dasUnreal_static_476_StaticClassCastFlags(const FObjectProperty *);
FString _dasUnreal_virtual_477_GetCPPMacroType(const FObjectProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_478_GetCPPTypeForwardDeclaration(const FObjectProperty & self);
const wchar_t * _dasUnreal_virtual_479_ImportText_Internal(const FObjectProperty & self,const wchar_t * Buffer,void * ContainerOrPropertyPtr,EPropertyPointerType PropertyPointerType,UObject * OwnerObject,int PortFlags,FOutputDevice * ErrorText);
void _dasUnreal_virtual_480_CopySingleValueToScriptVM(const FObjectProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_481_CopySingleValueFromScriptVM(const FObjectProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_482_CopyCompleteValueToScriptVM(const FObjectProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_483_CopyCompleteValueFromScriptVM(const FObjectProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_484_CopyCompleteValueToScriptVM_InContainer(const FObjectProperty & self,void * OutValue,const void * InContainer);
void _dasUnreal_virtual_485_CopyCompleteValueFromScriptVM_InContainer(const FObjectProperty & self,void * OutContainer,const void * InValue);
TObjectPtr_UObject _dasUnreal_virtual_486_GetObjectPtrPropertyValue(const FObjectProperty & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_487_GetObjectPropertyValue(const FObjectProperty & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_488_GetObjectPropertyValue_InContainer(const FObjectProperty & self,const void * ContainerAddress,int ArrayIndex);
void _dasUnreal_virtual_489_SetObjectPropertyValue(const FObjectProperty & self,void * PropertyValueAddress,UObject * Value);
void _dasUnreal_virtual_490_SetObjectPtrPropertyValue(const FObjectProperty & self,void * PropertyValueAddress,TObjectPtr_UObject Value);
void _dasUnreal_virtual_491_SetObjectPropertyValue_InContainer(const FObjectProperty & self,void * ContainerAddress,UObject * Value,int ArrayIndex);
FString _dasUnreal_virtual_492_GetCPPTypeCustom(const FObjectProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags,const FString & InnerNativeTypeName);
FFieldClass * _dasUnreal_static_493_StaticClass(const FObjectPtrProperty *);
FField * _dasUnreal_static_494_Construct(const FObjectPtrProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_495_StaticClassCastFlagsPrivate(const FObjectPtrProperty *);
uint64 _dasUnreal_static_496_StaticClassCastFlags(const FObjectPtrProperty *);
FString _dasUnreal_virtual_497_GetCPPMacroType(const FObjectPtrProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_498_GetCPPType(const FObjectPtrProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
bool _dasUnreal_virtual_499_SameType(const FObjectPtrProperty & self,const FProperty * Other);
bool _dasUnreal_virtual_500_Identical(const FObjectPtrProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_501_CopySingleValueToScriptVM(const FObjectPtrProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_502_CopySingleValueFromScriptVM(const FObjectPtrProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_503_CopyCompleteValueToScriptVM(const FObjectPtrProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_504_CopyCompleteValueFromScriptVM(const FObjectPtrProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_505_CopyCompleteValueToScriptVM_InContainer(const FObjectPtrProperty & self,void * OutValue,const void * InContainer);
void _dasUnreal_virtual_506_CopyCompleteValueFromScriptVM_InContainer(const FObjectPtrProperty & self,void * OutContainer,const void * InValue);
TObjectPtr_UObject _dasUnreal_virtual_507_GetObjectPtrPropertyValue(const FObjectPtrProperty & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_508_GetObjectPropertyValue(const FObjectPtrProperty & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_509_GetObjectPropertyValue_InContainer(const FObjectPtrProperty & self,const void * ContainerAddress,int ArrayIndex);
void _dasUnreal_virtual_510_SetObjectPropertyValue(const FObjectPtrProperty & self,void * PropertyValueAddress,UObject * Value);
void _dasUnreal_virtual_511_SetObjectPropertyValue_InContainer(const FObjectPtrProperty & self,void * ContainerAddress,UObject * Value,int ArrayIndex);
bool _dasUnreal_virtual_512_AllowObjectTypeReinterpretationTo(const FObjectPtrProperty & self,const FObjectPropertyBase * Other);
FFieldClass * _dasUnreal_static_513_StaticClass(const FClassProperty *);
FField * _dasUnreal_static_514_Construct(const FClassProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_515_StaticClassCastFlagsPrivate(const FClassProperty *);
uint64 _dasUnreal_static_516_StaticClassCastFlags(const FClassProperty *);
void _dasUnreal_virtual_517_Serialize(FClassProperty & self,FArchive & Ar);
void _dasUnreal_virtual_518_AddReferencedObjects(FClassProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_519_BeginDestroy(FClassProperty & self);
void _dasUnreal_virtual_520_PostDuplicate(FClassProperty & self,const FField & InField);
FString _dasUnreal_virtual_521_GetCPPType(const FClassProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_522_GetCPPMacroType(const FClassProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_523_GetCPPTypeForwardDeclaration(const FClassProperty & self);
const wchar_t * _dasUnreal_virtual_524_ImportText_Internal(const FClassProperty & self,const wchar_t * Buffer,void * ContainerOrPropertyPtr,EPropertyPointerType PropertyPointerType,UObject * OwnerObject,int PortFlags,FOutputDevice * ErrorText);
bool _dasUnreal_virtual_525_SameType(const FClassProperty & self,const FProperty * Other);
bool _dasUnreal_virtual_526_Identical(const FClassProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_527_AppendSchemaHash(const FClassProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FString _dasUnreal_virtual_528_GetCPPTypeCustom(const FClassProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags,const FString & InnerNativeTypeName);
FFieldClass * _dasUnreal_static_529_StaticClass(const FClassPtrProperty *);
FField * _dasUnreal_static_530_Construct(const FClassPtrProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_531_StaticClassCastFlagsPrivate(const FClassPtrProperty *);
uint64 _dasUnreal_static_532_StaticClassCastFlags(const FClassPtrProperty *);
FString _dasUnreal_virtual_533_GetCPPMacroType(const FClassPtrProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_534_GetCPPType(const FClassPtrProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
bool _dasUnreal_virtual_535_SameType(const FClassPtrProperty & self,const FProperty * Other);
bool _dasUnreal_virtual_536_Identical(const FClassPtrProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_537_CopySingleValueToScriptVM(const FClassPtrProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_538_CopySingleValueFromScriptVM(const FClassPtrProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_539_CopyCompleteValueToScriptVM(const FClassPtrProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_540_CopyCompleteValueFromScriptVM(const FClassPtrProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_541_CopyCompleteValueToScriptVM_InContainer(const FClassPtrProperty & self,void * OutValue,const void * InContainer);
void _dasUnreal_virtual_542_CopyCompleteValueFromScriptVM_InContainer(const FClassPtrProperty & self,void * OutContainer,const void * InValue);
UObject * _dasUnreal_virtual_543_GetObjectPropertyValue(const FClassPtrProperty & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_544_GetObjectPropertyValue_InContainer(const FClassPtrProperty & self,const void * ContainerAddress,int ArrayIndex);
void _dasUnreal_virtual_545_SetObjectPropertyValue(const FClassPtrProperty & self,void * PropertyValueAddress,UObject * Value);
void _dasUnreal_virtual_546_SetObjectPropertyValue_InContainer(const FClassPtrProperty & self,void * ContainerAddress,UObject * Value,int ArrayIndex);
FFieldClass * _dasUnreal_static_547_StaticClass(const FStrProperty *);
FField * _dasUnreal_static_548_Construct(const FStrProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_549_StaticClassCastFlagsPrivate(const FStrProperty *);
uint64 _dasUnreal_static_550_StaticClassCastFlags(const FStrProperty *);
FString _dasUnreal_virtual_551_GetCPPTypeForwardDeclaration(const FStrProperty & self);
unsigned int _dasUnreal_virtual_552_GetValueTypeHashInternal(const FStrProperty & self,const void * Src);
FFieldClass * _dasUnreal_static_553_StaticClass(const FArrayProperty *);
FField * _dasUnreal_static_554_Construct(const FArrayProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_555_StaticClassCastFlagsPrivate(const FArrayProperty *);
uint64 _dasUnreal_static_556_StaticClassCastFlags(const FArrayProperty *);
void _dasUnreal_virtual_557_Serialize(FArrayProperty & self,FArchive & Ar);
void _dasUnreal_virtual_558_AddReferencedObjects(FArrayProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_559_PostDuplicate(FArrayProperty & self,const FField & InField);
void _dasUnreal_virtual_560_AddCppProperty(FArrayProperty & self,FProperty * Property);
FField * _dasUnreal_virtual_561_GetInnerFieldByName(FArrayProperty & self,const FName & InName);
FString _dasUnreal_virtual_562_GetCPPMacroType(const FArrayProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_563_GetCPPType(const FArrayProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_564_GetCPPTypeForwardDeclaration(const FArrayProperty & self);
void _dasUnreal_virtual_565_LinkInternal(FArrayProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_566_Identical(const FArrayProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_567_InitializeValueInternal(const FArrayProperty & self,void * Dest);
void _dasUnreal_virtual_568_CopyValuesInternal(const FArrayProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_569_ClearValueInternal(const FArrayProperty & self,void * Data);
void _dasUnreal_virtual_570_DestroyValueInternal(const FArrayProperty & self,void * Dest);
bool _dasUnreal_virtual_571_PassCPPArgsByRef(const FArrayProperty & self);
bool _dasUnreal_virtual_572_SameType(const FArrayProperty & self,const FProperty * Other);
int _dasUnreal_virtual_573_GetMinAlignment(const FArrayProperty & self);
void * _dasUnreal_virtual_574_GetValueAddressAtIndex_Direct(const FArrayProperty & self,const FProperty * Inner,void * InValueAddress,int Index);
void _dasUnreal_static_575_ExportTextInnerItem(const FArrayProperty *,FString & ValueStr,const FProperty * Inner,const void * PropertyValue,int PropertySize,const void * DefaultValue,int DefaultSize,UObject * Parent,int PortFlags,UObject * ExportRootScope);
void _dasUnreal_virtual_576_AppendSchemaHash(const FArrayProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FFieldClass * _dasUnreal_static_577_StaticClass(const FMapProperty *);
FField * _dasUnreal_static_578_Construct(const FMapProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_579_StaticClassCastFlagsPrivate(const FMapProperty *);
uint64 _dasUnreal_static_580_StaticClassCastFlags(const FMapProperty *);
void _dasUnreal_virtual_581_Serialize(FMapProperty & self,FArchive & Ar);
void _dasUnreal_virtual_582_AddReferencedObjects(FMapProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_583_PostDuplicate(FMapProperty & self,const FField & InField);
FField * _dasUnreal_virtual_584_GetInnerFieldByName(FMapProperty & self,const FName & InName);
void _dasUnreal_virtual_585_AddCppProperty(FMapProperty & self,FProperty * Property);
FString _dasUnreal_virtual_586_GetCPPMacroType(const FMapProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_587_GetCPPType(const FMapProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_588_GetCPPTypeForwardDeclaration(const FMapProperty & self);
void _dasUnreal_virtual_589_LinkInternal(FMapProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_590_Identical(const FMapProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_591_InitializeValueInternal(const FMapProperty & self,void * Dest);
void _dasUnreal_virtual_592_CopyValuesInternal(const FMapProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_593_ClearValueInternal(const FMapProperty & self,void * Data);
void _dasUnreal_virtual_594_DestroyValueInternal(const FMapProperty & self,void * Dest);
bool _dasUnreal_virtual_595_PassCPPArgsByRef(const FMapProperty & self);
bool _dasUnreal_virtual_596_SameType(const FMapProperty & self,const FProperty * Other);
void * _dasUnreal_virtual_597_GetValueAddressAtIndex_Direct(const FMapProperty & self,const FProperty * Inner,void * InValueAddress,int Index);
void _dasUnreal_virtual_598_AppendSchemaHash(const FMapProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FFieldClass * _dasUnreal_static_599_StaticClass(const FSetProperty *);
FField * _dasUnreal_static_600_Construct(const FSetProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_601_StaticClassCastFlagsPrivate(const FSetProperty *);
uint64 _dasUnreal_static_602_StaticClassCastFlags(const FSetProperty *);
void _dasUnreal_virtual_603_Serialize(FSetProperty & self,FArchive & Ar);
void _dasUnreal_virtual_604_AddReferencedObjects(FSetProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_605_PostDuplicate(FSetProperty & self,const FField & InField);
FField * _dasUnreal_virtual_606_GetInnerFieldByName(FSetProperty & self,const FName & InName);
void _dasUnreal_virtual_607_AddCppProperty(FSetProperty & self,FProperty * Property);
FString _dasUnreal_virtual_608_GetCPPMacroType(const FSetProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_609_GetCPPType(const FSetProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_610_GetCPPTypeForwardDeclaration(const FSetProperty & self);
void _dasUnreal_virtual_611_LinkInternal(FSetProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_612_Identical(const FSetProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_613_CopyValuesInternal(const FSetProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_614_ClearValueInternal(const FSetProperty & self,void * Data);
void _dasUnreal_virtual_615_DestroyValueInternal(const FSetProperty & self,void * Dest);
bool _dasUnreal_virtual_616_PassCPPArgsByRef(const FSetProperty & self);
bool _dasUnreal_virtual_617_SameType(const FSetProperty & self,const FProperty * Other);
void * _dasUnreal_virtual_618_GetValueAddressAtIndex_Direct(const FSetProperty & self,const FProperty * Inner,void * InValueAddress,int Index);
void _dasUnreal_virtual_619_AppendSchemaHash(const FSetProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FFieldClass * _dasUnreal_static_620_StaticClass(const FStructProperty *);
FField * _dasUnreal_static_621_Construct(const FStructProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_622_StaticClassCastFlagsPrivate(const FStructProperty *);
uint64 _dasUnreal_static_623_StaticClassCastFlags(const FStructProperty *);
void _dasUnreal_virtual_624_Serialize(FStructProperty & self,FArchive & Ar);
void _dasUnreal_virtual_625_AddReferencedObjects(FStructProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_626_PostDuplicate(FStructProperty & self,const FField & InField);
FString _dasUnreal_virtual_627_GetCPPMacroType(const FStructProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_628_GetCPPType(const FStructProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_629_GetCPPTypeForwardDeclaration(const FStructProperty & self);
void _dasUnreal_virtual_630_LinkInternal(FStructProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_631_Identical(const FStructProperty & self,const void * A,const void * B,unsigned int PortFlags);
bool _dasUnreal_virtual_632_SupportsNetSharedSerialization(const FStructProperty & self);
void _dasUnreal_virtual_633_CopyValuesInternal(const FStructProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_634_ClearValueInternal(const FStructProperty & self,void * Data);
void _dasUnreal_virtual_635_DestroyValueInternal(const FStructProperty & self,void * Dest);
void _dasUnreal_virtual_636_InitializeValueInternal(const FStructProperty & self,void * Dest);
int _dasUnreal_virtual_637_GetMinAlignment(const FStructProperty & self);
bool _dasUnreal_virtual_638_SameType(const FStructProperty & self,const FProperty * Other);
void _dasUnreal_virtual_639_AppendSchemaHash(const FStructProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FProperty * _dasUnreal_static_640_GetNextPropertyAndAdvance(const FCustomPropertyListNode *,const FCustomPropertyListNode *& Node);
UClass * _dasUnreal_static_641_StaticClass(const UPropertyWrapper *);
const wchar_t * _dasUnreal_static_642_StaticPackage(const UPropertyWrapper *);
void _dasUnreal_static_643_StaticRegisterNativesUPropertyWrapper(const UPropertyWrapper *);
void _dasUnreal_virtual_644_Serialize(FFrame & self,const wchar_t * V,ELogVerbosity::Type Verbosity,const FName & Category);
void _dasUnreal_static_645_KismetExecutionMessage(const FFrame *,const wchar_t * Message,ELogVerbosity::Type Verbosity,FName WarningId);
FFrame * _dasUnreal_static_646_PushThreadLocalTopStackFrame(const FFrame *,FFrame * NewTopStackFrame);
void _dasUnreal_static_647_PopThreadLocalTopStackFrame(const FFrame *,FFrame * NewTopStackFrame);
FFrame * _dasUnreal_static_648_GetThreadLocalTopStackFrame(const FFrame *);
UClass * _dasUnreal_static_649_StaticClass(const UBlueprintFunctionLibrary *);
const wchar_t * _dasUnreal_static_650_StaticPackage(const UBlueprintFunctionLibrary *);
int _dasUnreal_virtual_651_GetFunctionCallspace(UBlueprintFunctionLibrary & self,UFunction * Function,FFrame * Stack);
UClass * _dasUnreal_static_652_StaticClass(const UKismetArrayLibrary *);
const wchar_t * _dasUnreal_static_653_StaticPackage(const UKismetArrayLibrary *);
int _dasUnreal_static_654_GenericArray_Add(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,const void * NewItem);
int _dasUnreal_static_655_GenericArray_AddUnique(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,const void * NewItem);
void _dasUnreal_static_656_GenericArray_Shuffle(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp);
bool _dasUnreal_static_657_GenericArray_Identical(const UKismetArrayLibrary *,void * ArrayA,const FArrayProperty * ArrayAProp,void * ArrayB,const FArrayProperty * ArrayBProperty);
void _dasUnreal_static_658_GenericArray_Append(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * TargetArrayProp,void * SourceArray,const FArrayProperty * SourceArrayProperty);
void _dasUnreal_static_659_GenericArray_Insert(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,const void * NewItem,int Index);
void _dasUnreal_static_660_GenericArray_Remove(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,int IndexToRemove);
bool _dasUnreal_static_661_GenericArray_RemoveItem(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,const void * Item);
void _dasUnreal_static_662_GenericArray_Clear(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp);
void _dasUnreal_static_663_GenericArray_Resize(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,int Size);
void _dasUnreal_static_664_GenericArray_Reverse(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp);
int _dasUnreal_static_665_GenericArray_Length(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp);
bool _dasUnreal_static_666_GenericArray_IsEmpty(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp);
bool _dasUnreal_static_667_GenericArray_IsNotEmpty(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp);
int _dasUnreal_static_668_GenericArray_LastIndex(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp);
void _dasUnreal_static_669_GenericArray_Get(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,int Index,void * Item);
void _dasUnreal_static_670_GenericArray_Set(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,int Index,const void * NewItem,bool bSizeToFit);
void _dasUnreal_static_671_GenericArray_Swap(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp,int First,int Second);
int _dasUnreal_static_672_GenericArray_Find(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProperty,const void * ItemToFind);
void _dasUnreal_static_673_GenericArray_SetArrayPropertyByName(const UKismetArrayLibrary *,UObject * OwnerObject,FName ArrayPropertyName,const void * SrcArrayAddr);
void _dasUnreal_static_674_GenericArray_Random(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,void * OutItem,int * OutIndex);
bool _dasUnreal_static_675_GenericArray_IsValidIndex(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp,int IndexToTest);
