// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

EVersionComparison _dasUnreal_static_0_GetNewest(const FEngineVersionBase *,const FEngineVersionBase & First,const FEngineVersionBase & Second,EVersionComponent * OutComponent);
unsigned int _dasUnreal_static_1_EncodeLicenseeChangelist(const FEngineVersionBase *,unsigned int Changelist);
FArchiveState & _dasUnreal_virtual_2_GetInnermostState(FArchiveState & self);
void _dasUnreal_virtual_3_CountBytes(FArchiveState & self,SIZE_T InNum,SIZE_T InMax);
FString _dasUnreal_virtual_4_GetArchiveName(const FArchiveState & self);
FLinker * _dasUnreal_virtual_5_GetLinker(FArchiveState & self);
int64 _dasUnreal_virtual_6_Tell(FArchiveState & self);
int64 _dasUnreal_virtual_7_TotalSize(FArchiveState & self);
bool _dasUnreal_virtual_8_AtEnd(FArchiveState & self);
UObject * _dasUnreal_virtual_9_GetArchetypeFromLoader(FArchiveState & self,const UObject * Obj);
unsigned int _dasUnreal_virtual_10_EngineNetVer(const FArchiveState & self);
unsigned int _dasUnreal_virtual_11_GameNetVer(const FArchiveState & self);
void _dasUnreal_virtual_12_ResetCustomVersions(FArchiveState & self);
void _dasUnreal_virtual_13_SetFilterEditorOnly(FArchiveState & self,bool InFilterEditorOnly);
bool _dasUnreal_virtual_14_UseToResolveEnumerators(const FArchiveState & self);
bool _dasUnreal_virtual_15_ShouldSkipProperty(const FArchiveState & self,const FProperty * InProperty);
void _dasUnreal_virtual_16_SetSerializedProperty(FArchiveState & self,FProperty * InProperty);
void _dasUnreal_virtual_17_SetSerializedPropertyChain(FArchiveState & self,const FArchiveSerializedPropertyChain * InSerializedPropertyChain,FProperty * InSerializedPropertyOverride);
bool _dasUnreal_virtual_18_IsEditorOnlyPropertyOnTheStack(const FArchiveState & self);
void _dasUnreal_virtual_19_SetSerializeContext(FArchiveState & self,FUObjectSerializeContext * InLoadContext);
FUObjectSerializeContext * _dasUnreal_virtual_20_GetSerializeContext(FArchiveState & self);
void _dasUnreal_virtual_21_SetLocalizationNamespace(FArchiveState & self,const FString & InLocalizationNamespace);
FString _dasUnreal_virtual_22_GetLocalizationNamespace(const FArchiveState & self);
void _dasUnreal_virtual_23_Reset(FArchiveState & self);
void _dasUnreal_virtual_24_SetIsLoading(FArchiveState & self,bool bInIsLoading);
void _dasUnreal_virtual_25_SetIsLoadingFromCookedPackage(FArchiveState & self,bool bInIsLoadingFromCookedPackage);
void _dasUnreal_virtual_26_SetIsSaving(FArchiveState & self,bool bInIsSaving);
void _dasUnreal_virtual_27_SetIsTransacting(FArchiveState & self,bool bInIsTransacting);
void _dasUnreal_virtual_28_SetIsTextFormat(FArchiveState & self,bool bInIsTextFormat);
void _dasUnreal_virtual_29_SetWantBinaryPropertySerialization(FArchiveState & self,bool bInWantBinaryPropertySerialization);
void _dasUnreal_virtual_30_SetUseUnversionedPropertySerialization(FArchiveState & self,bool bInUseUnversioned);
void _dasUnreal_virtual_31_SetForceUnicode(FArchiveState & self,bool bInForceUnicode);
void _dasUnreal_virtual_32_SetIsPersistent(FArchiveState & self,bool bInIsPersistent);
void _dasUnreal_virtual_33_SetLicenseeUEVer(FArchiveState & self,int InVer);
void _dasUnreal_virtual_34_SetEngineVer(FArchiveState & self,const FEngineVersionBase & InVer);
void _dasUnreal_virtual_35_SetEngineNetVer(FArchiveState & self,const unsigned int InEngineNetVer);
void _dasUnreal_virtual_36_SetGameNetVer(FArchiveState & self,const unsigned int InGameNetVer);
void _dasUnreal_virtual_37_ForceBlueprintFinalization(FArchive & self);
void _dasUnreal_virtual_38_Serialize(FArchive & self,void * V,int64 Length);
void _dasUnreal_virtual_39_SerializeBits(FArchive & self,void * V,int64 LengthBits);
void _dasUnreal_virtual_40_SerializeInt(FArchive & self,unsigned int & Value,unsigned int Max);
void _dasUnreal_virtual_41_SerializeIntPacked(FArchive & self,unsigned int & Value);
void _dasUnreal_virtual_42_SerializeIntPacked64(FArchive & self,unsigned long long & Value);
void _dasUnreal_virtual_43_Preload(FArchive & self,UObject * Object);
void _dasUnreal_virtual_44_Seek(FArchive & self,int64 InPos);
void _dasUnreal_virtual_45_AttachBulkData(FArchive & self,UE::Serialization::FEditorBulkData * BulkData);
void _dasUnreal_virtual_46_DetachBulkData(FArchive & self,UE::Serialization::FEditorBulkData * BulkData,bool bEnsureBulkDataIsLoaded);
bool _dasUnreal_virtual_47_IsProxyOf(const FArchive & self,FArchive * InOther);
bool _dasUnreal_virtual_48_Precache(FArchive & self,int64 PrecacheOffset,int64 PrecacheSize);
void _dasUnreal_virtual_49_FlushCache(FArchive & self);
void _dasUnreal_virtual_50_Flush(FArchive & self);
bool _dasUnreal_virtual_51_Close(FArchive & self);
void _dasUnreal_virtual_52_MarkScriptSerializationStart(FArchive & self,const UObject * Obj);
void _dasUnreal_virtual_53_MarkScriptSerializationEnd(FArchive & self,const UObject * Obj);
FArchive * _dasUnreal_virtual_54_GetCacheableArchive(FArchive & self);
void _dasUnreal_virtual_55_PushSerializedProperty(FArchive & self,FProperty * InProperty,const bool bIsEditorOnlyProperty);
void _dasUnreal_virtual_56_PopSerializedProperty(FArchive & self,FProperty * InProperty,const bool bIsEditorOnlyProperty);
void _dasUnreal_virtual_57_PushDebugDataString(FArchive & self,const FName & DebugData);
void _dasUnreal_virtual_58_PopDebugDataString(FArchive & self);
void _dasUnreal_virtual_59_PushFileRegionType(FArchive & self,EFileRegionType Type);
void _dasUnreal_virtual_60_PopFileRegionType(FArchive & self);
FString _dasUnreal_static_61_Chr(const FString *,wchar_t Ch);
FString _dasUnreal_static_62_ChrN(const FString *,int NumCharacters,wchar_t Char);
FString _dasUnreal_static_63_FormatAsNumber(const FString *,int InNumber);
FString _dasUnreal_static_64_FromInt(const FString *,int Num);
FString _dasUnreal_static_65_FromBlob(const FString *,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_66_ToBlob(const FString *,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_67_FromHexBlob(const FString *,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_68_ToHexBlob(const FString *,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_69_SanitizeFloat(const FString *,double InFloat,const int InMinFractionalDigits);
void _dasUnreal_static_70_AssertIfInConstructor(const FObjectInitializer *,UObject * Outer,const wchar_t * ErrorMessage);
FObjectInitializer & _dasUnreal_static_71_Get(const FObjectInitializer *);
void _dasUnreal_static_72_InitProperties(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer,UObject * Obj,UClass * DefaultsClass,UObject * DefaultData);
bool _dasUnreal_static_73_InitSubobjectProperties(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer);
void _dasUnreal_static_74_InstanceSubobjects(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer,UClass * Class,bool bNeedInstancing,bool bNeedSubobjectInstancing);
void _dasUnreal_static_75_PostConstructInitObject(const FScriptIntegrationObjectHelper *,FObjectInitializer & ObjectInitializer);
void _dasUnreal_virtual_76_AddStableReference(FReferenceCollector & self,UObject ** Object);
bool _dasUnreal_virtual_77_NeedsPropertyReferencer(const FReferenceCollector & self);
void _dasUnreal_virtual_78_AllowEliminatingReferences(FReferenceCollector & self,bool bAllow);
void _dasUnreal_virtual_79_SetSerializedProperty(FReferenceCollector & self,FProperty * Inproperty);
FProperty * _dasUnreal_virtual_80_GetSerializedProperty(const FReferenceCollector & self);
bool _dasUnreal_virtual_81_MarkWeakObjectReferenceForClearing(FReferenceCollector & self,UObject ** WeakReference);
void _dasUnreal_virtual_82_SetIsProcessingNativeReferences(FReferenceCollector & self,bool bIsNative);
bool _dasUnreal_virtual_83_IsProcessingNativeReferences(const FReferenceCollector & self);
bool _dasUnreal_virtual_84_NeedsInitialReferences(const FReferenceCollector & self);
void _dasUnreal_virtual_85_FindReferences(FReferenceFinder & self,UObject * Object,UObject * ReferencingObject,FProperty * ReferencingProperty);
bool _dasUnreal_virtual_86_IsIgnoringArchetypeRef(const FReferenceFinder & self);
bool _dasUnreal_virtual_87_IsIgnoringTransient(const FReferenceFinder & self);
void _dasUnreal_virtual_88_SetSerializedProperty(FReferenceFinder & self,FProperty * Inproperty);
FProperty * _dasUnreal_virtual_89_GetSerializedProperty(const FReferenceFinder & self);
void _dasUnreal_static_90_BroadcastOnObjectModified(const FCoreUObjectDelegates *,UObject * Object);
FString _dasUnreal_static_91_FormatPathForAssetLog(const FAssetMsg *,const wchar_t * Path);
FString _dasUnreal_static_92_FormatPathForAssetLog(const FAssetMsg *,const UObject * Object);
FString _dasUnreal_static_93_GetAssetLogString(const FAssetMsg *,const wchar_t * Path,const FString & Message);
FString _dasUnreal_static_94_GetAssetLogString(const FAssetMsg *,const UObject * Object,const FString & Message);
FName _dasUnreal_virtual_95_GetFNameForStatID(const UObjectBase & self);
FString _dasUnreal_static_96_RemoveClassPrefix(const UObjectBase *,const wchar_t * ClassName);
void _dasUnreal_static_97_PrefetchClass(const UObjectBase *,UObject * Object);
void _dasUnreal_static_98_PrefetchOuter(const UObjectBase *,UObject * Object);
bool _dasUnreal_static_99_IsPendingKillEnabled(const UObjectBaseUtility *);
EInternalObjectFlags _dasUnreal_static_100_FixGarbageOrPendingKillInternalObjectFlags(const UObjectBaseUtility *,const EInternalObjectFlags InFlags);
bool _dasUnreal_virtual_101_CanBeClusterRoot(const UObjectBaseUtility & self);
bool _dasUnreal_virtual_102_CanBeInCluster(const UObjectBaseUtility & self);
void _dasUnreal_virtual_103_CreateCluster(UObjectBaseUtility & self);
void _dasUnreal_virtual_104_OnClusterMarkedAsPendingKill(UObjectBaseUtility & self);
UClass * _dasUnreal_static_105_StaticClass(const UObject *);
const wchar_t * _dasUnreal_static_106_StaticConfigName(const UObject *);
void _dasUnreal_static_107_StaticRegisterNativesUObject(const UObject *);
void _dasUnreal_virtual_108_PostInitProperties(UObject & self);
void _dasUnreal_virtual_109_PostReinitProperties(UObject & self);
void _dasUnreal_virtual_110_PostCDOContruct(UObject & self);
bool _dasUnreal_virtual_111_PreSaveRoot(UObject & self,const wchar_t * Filename);
void _dasUnreal_virtual_112_PostSaveRoot(UObject & self,bool bCleanupIsRequired);
bool _dasUnreal_virtual_113_Modify(UObject & self,bool bAlwaysMarkDirty);
bool _dasUnreal_virtual_114_IsCapturingAsRootObjectForTransaction(const UObject & self);
void _dasUnreal_virtual_115_LoadedFromAnotherClass(UObject & self,const FName & OldClassName);
bool _dasUnreal_virtual_116_ResolveSubobject(UObject & self,const wchar_t * SubObjectPath,UObject *& OutObject,bool bLoadIfExists);
bool _dasUnreal_virtual_117_IsReadyForAsyncPostLoad(const UObject & self);
void _dasUnreal_virtual_118_PostLoad(UObject & self);
void _dasUnreal_virtual_119_BeginDestroy(UObject & self);
bool _dasUnreal_virtual_120_IsReadyForFinishDestroy(UObject & self);
void _dasUnreal_virtual_121_PostLinkerChange(UObject & self);
void _dasUnreal_virtual_122_FinishDestroy(UObject & self);
void _dasUnreal_virtual_123_ShutdownAfterError(UObject & self);
void _dasUnreal_virtual_124_PostInterpChange(UObject & self,FProperty * PropertyThatChanged);
void _dasUnreal_virtual_125_PreEditUndo(UObject & self);
void _dasUnreal_virtual_126_PostRename(UObject & self,UObject * OldOuter,const FName OldName);
bool _dasUnreal_virtual_127_NeedsLoadForClient(const UObject & self);
bool _dasUnreal_virtual_128_NeedsLoadForServer(const UObject & self);
bool _dasUnreal_virtual_129_NeedsLoadForEditorGame(const UObject & self);
bool _dasUnreal_virtual_130_IsEditorOnly(const UObject & self);
bool _dasUnreal_virtual_131_HasNonEditorOnlyReferences(const UObject & self);
bool _dasUnreal_virtual_132_IsPostLoadThreadSafe(const UObject & self);
bool _dasUnreal_virtual_133_IsDestructionThreadSafe(const UObject & self);
bool _dasUnreal_static_134_CanCreateInCurrentContext(const UObject *,UObject * Template);
void _dasUnreal_virtual_135_PostEditImport(UObject & self);
void _dasUnreal_virtual_136_PostReloadConfig(UObject & self,FProperty * PropertyThatWasLoaded);
bool _dasUnreal_virtual_137_Rename(UObject & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
FString _dasUnreal_virtual_138_GetDesc(UObject & self);
void _dasUnreal_virtual_139_MoveDataToSparseClassDataStruct(const UObject & self);
bool _dasUnreal_virtual_140_ConformSparseClassDataStruct(const UObject & self,UScriptStruct * SourceSparseClassDataStruct,void * SourceSparseClassData);
bool _dasUnreal_virtual_141_ImplementsGetWorld(const UObject & self);
FName _dasUnreal_virtual_142_GetExporterName(UObject & self);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_143_GetRestoreForUObjectOverwrite(UObject & self);
bool _dasUnreal_virtual_144_AreNativePropertiesIdenticalTo(const UObject & self,UObject * Other);
const FName & _dasUnreal_static_145_SourceFileTagName(const UObject *);
const FName & _dasUnreal_static_146_AssetVersePathTagName(const UObject *);
bool _dasUnreal_virtual_147_IsAsset(const UObject & self);
bool _dasUnreal_virtual_148_IsLocalizedResource(const UObject & self);
bool _dasUnreal_virtual_149_IsSafeForRootSet(const UObject & self);
void _dasUnreal_virtual_150_TagSubobjects(UObject & self,EObjectFlags NewFlags);
bool _dasUnreal_virtual_151_IsNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_152_IsFullNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_153_IsSupportedForNetworking(const UObject & self);
void _dasUnreal_virtual_154_PreNetReceive(UObject & self);
void _dasUnreal_virtual_155_PostNetReceive(UObject & self);
void _dasUnreal_virtual_156_PostRepNotifies(UObject & self);
void _dasUnreal_virtual_157_PreDestroyFromReplication(UObject & self);
void _dasUnreal_virtual_158_WillNeverCacheCookedPlatformDataAgain(UObject & self);
void _dasUnreal_virtual_159_ClearAllCachedCookedPlatformData(UObject & self);
const wchar_t * _dasUnreal_virtual_160_GetConfigOverridePlatform(const UObject & self);
void _dasUnreal_virtual_161_OverrideConfigSection(UObject & self,FString & SectionName);
void _dasUnreal_virtual_162_OverridePerObjectConfigSection(UObject & self,FString & SectionName);
UObject * _dasUnreal_static_163_GetArchetypeFromRequiredInfo(const UObject *,const UClass * Class,const UObject * Outer,FName Name,EObjectFlags ObjectFlags);
void _dasUnreal_virtual_164_ProcessEvent(UObject & self,UFunction * Function,void * Parms);
UClass * _dasUnreal_virtual_165_RegenerateClass(UObject & self,UClass * ClassToRegenerate,UObject * PreviousCDO);
void _dasUnreal_virtual_166_MarkAsEditorOnlySubobject(UObject & self);
uint64 _dasUnreal_virtual_167_GetNetPushIdDynamic(const UObject & self);
FFieldClass * _dasUnreal_static_168_StaticClass(const FField *);
uint64 _dasUnreal_static_169_StaticClassCastFlagsPrivate(const FField *);
uint64 _dasUnreal_static_170_StaticClassCastFlags(const FField *);
void _dasUnreal_virtual_171_Serialize(FField & self,FArchive & Ar);
void _dasUnreal_virtual_172_PostLoad(FField & self);
void _dasUnreal_virtual_173_BeginDestroy(FField & self);
void _dasUnreal_virtual_174_AddReferencedObjects(FField & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_175_AddCppProperty(FField & self,FProperty * Property);
void _dasUnreal_virtual_176_Bind(FField & self);
FField * _dasUnreal_static_177_Construct(const FField *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InFlags);
FField * _dasUnreal_static_178_Construct(const FField *,const FName & FieldTypeName,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InFlags);
void _dasUnreal_virtual_179_PostDuplicate(FField & self,const FField & InField);
FField * _dasUnreal_virtual_180_GetInnerFieldByName(FField & self,const FName & InName);
void _dasUnreal_static_181_CopyMetaData(const FField *,const FField * InSourceField,FField * InDestField);
FField * _dasUnreal_static_182_CreateFromUField(const FField *,UField * InField);
FField * _dasUnreal_static_183_Duplicate(const FField *,const FField * InField,FFieldVariant DestOwner,const FName DestName,EObjectFlags FlagMask,EInternalObjectFlags InternalFlagsMask);
FName _dasUnreal_static_184_GenerateFFieldName(const FField *,FFieldVariant InOwner,FFieldClass * InClass);
UClass * _dasUnreal_static_185_StaticClass(const UField *);
const wchar_t * _dasUnreal_static_186_StaticPackage(const UField *);
void _dasUnreal_static_187_StaticRegisterNativesUField(const UField *);
void _dasUnreal_virtual_188_PostLoad(UField & self);
bool _dasUnreal_virtual_189_NeedsLoadForClient(const UField & self);
bool _dasUnreal_virtual_190_NeedsLoadForServer(const UField & self);
void _dasUnreal_virtual_191_Bind(UField & self);
void _dasUnreal_static_192_FormatNativeToolTip(const UField *,FString & ToolTipString,bool bRemoveExtraSections);
FField * _dasUnreal_virtual_193_GetAssociatedFField(UField & self);
void _dasUnreal_virtual_194_SetAssociatedFField(UField & self,FField * InField);
UClass * _dasUnreal_static_195_StaticClass(const UStruct *);
const wchar_t * _dasUnreal_static_196_StaticPackage(const UStruct *);
void _dasUnreal_static_197_StaticRegisterNativesUStruct(const UStruct *);
void _dasUnreal_virtual_198_PostLoad(UStruct & self);
void _dasUnreal_virtual_199_FinishDestroy(UStruct & self);
void _dasUnreal_virtual_200_RegisterDependencies(UStruct & self);
void _dasUnreal_virtual_201_TagSubobjects(UStruct & self,EObjectFlags NewFlags);
void _dasUnreal_virtual_202_AddCppProperty(UStruct & self,FProperty * Property);
UStruct * _dasUnreal_virtual_203_GetInheritanceSuper(const UStruct & self);
void _dasUnreal_virtual_204_InitializeStruct(const UStruct & self,void * Dest,int ArrayDim);
void _dasUnreal_virtual_205_DestroyStruct(const UStruct & self,void * Dest,int ArrayDim);
FProperty * _dasUnreal_virtual_206_CustomFindProperty(const UStruct & self,const FName InName);
const wchar_t * _dasUnreal_virtual_207_GetPrefixCPP(const UStruct & self);
void _dasUnreal_virtual_208_SetSuperStruct(UStruct & self,UStruct * NewSuperStruct);
FString _dasUnreal_virtual_209_GetAuthoredNameForField(const UStruct & self,const UField * Field);
FString _dasUnreal_virtual_210_GetAuthoredNameForField(const UStruct & self,const FField * Field);
bool _dasUnreal_virtual_211_IsStructTrashed(const UStruct & self);
UClass * _dasUnreal_static_212_StaticClass(const UScriptStruct *);
const wchar_t * _dasUnreal_static_213_StaticPackage(const UScriptStruct *);
void _dasUnreal_static_214_StaticRegisterNativesUScriptStruct(const UScriptStruct *);
void _dasUnreal_virtual_215_InitializeStruct(const UScriptStruct & self,void * Dest,int ArrayDim);
void _dasUnreal_virtual_216_DestroyStruct(const UScriptStruct & self,void * Dest,int ArrayDim);
bool _dasUnreal_virtual_217_IsStructTrashed(const UScriptStruct & self);
void _dasUnreal_virtual_218_PrepareCppStructOps(UScriptStruct & self);
unsigned int _dasUnreal_virtual_219_GetStructTypeHash(const UScriptStruct & self,const void * Src);
void _dasUnreal_virtual_220_RecursivelyPreload(UScriptStruct & self);
FString _dasUnreal_virtual_221_GetStructCPPName(const UScriptStruct & self,unsigned int CPPExportFlags);
void _dasUnreal_virtual_222_InitializeDefaultValue(const UScriptStruct & self,unsigned char * InStructData);
UClass * _dasUnreal_static_223_StaticClass(const UFunction *);
const wchar_t * _dasUnreal_static_224_StaticPackage(const UFunction *);
void _dasUnreal_static_225_StaticRegisterNativesUFunction(const UFunction *);
void _dasUnreal_virtual_226_PostLoad(UFunction & self);
void _dasUnreal_virtual_227_Bind(UFunction & self);
UStruct * _dasUnreal_virtual_228_GetInheritanceSuper(const UFunction & self);
uint64 _dasUnreal_static_229_GetDefaultIgnoredSignatureCompatibilityFlags(const UFunction *);
UClass * _dasUnreal_static_230_StaticClass(const UEnum *);
const wchar_t * _dasUnreal_static_231_StaticPackage(const UEnum *);
void _dasUnreal_static_232_StaticRegisterNativesUEnum(const UEnum *);
FText _dasUnreal_virtual_233_GetDisplayNameTextByIndex(const UEnum & self,int InIndex);
FString _dasUnreal_virtual_234_GetAuthoredNameStringByIndex(const UEnum & self,int InIndex);
bool _dasUnreal_static_235_IsFullEnumName(const UEnum *,const wchar_t * InEnumName);
FString _dasUnreal_virtual_236_GenerateFullEnumName(const UEnum & self,const wchar_t * InEnumName);
int64 _dasUnreal_static_237_ParseEnum(const UEnum *,const wchar_t *& Str);
void _dasUnreal_virtual_238_BeginDestroy(UEnum & self);
bool _dasUnreal_virtual_239_IsAbstract(const FCppClassTypeInfo & self);
UClass * _dasUnreal_static_240_StaticClass(const UClass *);
const wchar_t * _dasUnreal_static_241_StaticPackage(const UClass *);
void _dasUnreal_static_242_StaticRegisterNativesUClass(const UClass *);
void _dasUnreal_virtual_243_ConditionalRecompileClass(UClass & self,FUObjectSerializeContext * InLoadContext);
void _dasUnreal_virtual_244_FlushCompilationQueueForLevel(UClass & self);
void _dasUnreal_static_245_AssembleReferenceTokenStreams(const UClass *);
UClass * _dasUnreal_virtual_246_GetAuthoritativeClass(UClass & self);
void _dasUnreal_virtual_247_PostLoad(UClass & self);
void _dasUnreal_virtual_248_FinishDestroy(UClass & self);
void _dasUnreal_virtual_249_DeferredRegister(UClass & self,UClass * UClassStaticClass,const wchar_t * PackageName,const wchar_t * InName);
bool _dasUnreal_virtual_250_Rename(UClass & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
void _dasUnreal_virtual_251_TagSubobjects(UClass & self,EObjectFlags NewFlags);
void _dasUnreal_virtual_252_PostInitProperties(UClass & self);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_253_GetRestoreForUObjectOverwrite(UClass & self);
FString _dasUnreal_virtual_254_GetDesc(UClass & self);
bool _dasUnreal_virtual_255_IsAsset(const UClass & self);
bool _dasUnreal_virtual_256_IsNameStableForNetworking(const UClass & self);
void _dasUnreal_virtual_257_Bind(UClass & self);
const wchar_t * _dasUnreal_virtual_258_GetPrefixCPP(const UClass & self);
void _dasUnreal_virtual_259_SetSuperStruct(UClass & self,UStruct * NewSuperStruct);
bool _dasUnreal_virtual_260_IsStructTrashed(const UClass & self);
void _dasUnreal_virtual_261_PostLoadInstance(UClass & self,UObject * InObj);
void _dasUnreal_virtual_262_InitPropertiesFromCustomList(UClass & self,unsigned char * DataPtr,const unsigned char * DefaultDataPtr);
bool _dasUnreal_virtual_263_CanCreateAssetOfClass(const UClass & self);
unsigned char * _dasUnreal_virtual_264_GetPersistentUberGraphFrame(const UClass & self,UObject * Obj,UFunction * FuncToCheck);
void _dasUnreal_virtual_265_CreatePersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bCreateOnlyIfEmpty,bool bSkipSuperClass,UClass * OldClass);
void _dasUnreal_virtual_266_DestroyPersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bSkipSuperClass);
void _dasUnreal_virtual_267_PostLoadDefaultObject(UClass & self,UObject * Object);
void _dasUnreal_virtual_268_PurgeClass(UClass & self,bool bRecompilingOnLoad);
UClass * _dasUnreal_static_269_FindCommonBase(const UClass *,UClass * InClassA,UClass * InClassB);
bool _dasUnreal_virtual_270_IsFunctionImplementedInScript(const UClass & self,FName InFunctionName);
bool _dasUnreal_virtual_271_HasProperty(const UClass & self,FProperty * InProperty);
UObject * _dasUnreal_virtual_272_FindArchetype(const UClass & self,const UClass * ArchetypeClass,const FName ArchetypeName);
UObject * _dasUnreal_virtual_273_GetArchetypeForCDO(const UClass & self);
bool _dasUnreal_static_274_IsSafeToSerializeToStructuredArchives(const UClass *,UClass * InClass);
UClass * _dasUnreal_static_275_StaticClass(const UPackage *);
const wchar_t * _dasUnreal_static_276_StaticPackage(const UPackage *);
void _dasUnreal_static_277_StaticRegisterNativesUPackage(const UPackage *);
bool _dasUnreal_virtual_278_IsNameStableForNetworking(const UPackage & self);
bool _dasUnreal_virtual_279_NeedsLoadForClient(const UPackage & self);
bool _dasUnreal_virtual_280_NeedsLoadForServer(const UPackage & self);
bool _dasUnreal_virtual_281_IsPostLoadThreadSafe(const UPackage & self);
bool _dasUnreal_virtual_282_IsDestructionThreadSafe(const UPackage & self);
void _dasUnreal_virtual_283_PostInitProperties(UPackage & self);
void _dasUnreal_virtual_284_FinishDestroy(UPackage & self);
bool _dasUnreal_virtual_285_IsAsset(const UPackage & self);
void _dasUnreal_virtual_286_TagSubobjects(UPackage & self,EObjectFlags NewFlags);
void _dasUnreal_static_287_WaitForAsyncFileWrites(const UPackage *);
bool _dasUnreal_static_288_HasAsyncFileWrites(const UPackage *);
bool _dasUnreal_static_289_IsEmptyPackage(const UPackage *,UPackage * Package,const UObject * LastReferencer);
FFieldClass * _dasUnreal_static_290_StaticClass(const FProperty *);
uint64 _dasUnreal_static_291_StaticClassCastFlagsPrivate(const FProperty *);
uint64 _dasUnreal_static_292_StaticClassCastFlags(const FProperty *);
void _dasUnreal_virtual_293_Serialize(FProperty & self,FArchive & Ar);
void _dasUnreal_virtual_294_PostDuplicate(FProperty & self,const FField & InField);
FName _dasUnreal_static_295_FindRedirectedPropertyName(const FProperty *,UStruct * ObjectStruct,FName OldName);
FString _dasUnreal_virtual_296_GetCPPMacroType(const FProperty & self,FString & ExtendedTypeText);
bool _dasUnreal_virtual_297_PassCPPArgsByRef(const FProperty & self);
FString _dasUnreal_virtual_298_GetCPPType(const FProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_299_GetCPPTypeForwardDeclaration(const FProperty & self);
bool _dasUnreal_virtual_300_HasSetter(const FProperty & self);
bool _dasUnreal_virtual_301_HasGetter(const FProperty & self);
bool _dasUnreal_virtual_302_HasSetterOrGetter(const FProperty & self);
void _dasUnreal_virtual_303_CallSetter(const FProperty & self,void * Container,const void * InValue);
void _dasUnreal_virtual_304_CallGetter(const FProperty & self,const void * Container,void * OutValue);
bool _dasUnreal_virtual_305_Identical(const FProperty & self,const void * A,const void * B,unsigned int PortFlags);
bool _dasUnreal_virtual_306_SupportsNetSharedSerialization(const FProperty & self);
void _dasUnreal_virtual_307_ExportTextItem(const FProperty & self,FString & ValueStr,const void * PropertyValue,const void * DefaultValue,UObject * Parent,int PortFlags,UObject * ExportRootScope);
void * _dasUnreal_virtual_308_GetValueAddressAtIndex_Direct(const FProperty & self,const FProperty * Inner,void * InValueAddress,int Index);
void _dasUnreal_virtual_309_AppendSchemaHash(const FProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
void _dasUnreal_virtual_310_CopySingleValueToScriptVM(const FProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_311_CopyCompleteValueToScriptVM(const FProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_312_CopyCompleteValueToScriptVM_InContainer(const FProperty & self,void * OutValue,const void * InContainer);
void _dasUnreal_virtual_313_CopyCompleteValueFromScriptVM_InContainer(const FProperty & self,void * OutContainer,const void * InValue);
void _dasUnreal_virtual_314_CopySingleValueFromScriptVM(const FProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_315_CopyCompleteValueFromScriptVM(const FProperty & self,void * Dest,const void * Src);
FName _dasUnreal_virtual_316_GetID(const FProperty & self);
int _dasUnreal_virtual_317_GetMinAlignment(const FProperty & self);
bool _dasUnreal_virtual_318_SameType(const FProperty & self,const FProperty * Other);
FFieldClass * _dasUnreal_static_319_StaticClass(const FNumericProperty *);
FField * _dasUnreal_static_320_Construct(const FNumericProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_321_StaticClassCastFlagsPrivate(const FNumericProperty *);
uint64 _dasUnreal_static_322_StaticClassCastFlags(const FNumericProperty *);
void _dasUnreal_virtual_323_ExportText_Internal(const FNumericProperty & self,FString & ValueStr,const void * PropertyValueOrContainer,EPropertyPointerType PropertyPointerType,const void * DefaultValue,UObject * Parent,int PortFlags,UObject * ExportRootScope);
bool _dasUnreal_virtual_324_IsFloatingPoint(const FNumericProperty & self);
bool _dasUnreal_virtual_325_IsInteger(const FNumericProperty & self);
UEnum * _dasUnreal_virtual_326_GetIntPropertyEnum(const FNumericProperty & self);
void _dasUnreal_virtual_327_SetIntPropertyValue(const FNumericProperty & self,void * Data,uint64 Value);
void _dasUnreal_virtual_328_SetIntPropertyValue(const FNumericProperty & self,void * Data,int64 Value);
void _dasUnreal_virtual_329_SetFloatingPointPropertyValue(const FNumericProperty & self,void * Data,double Value);
void _dasUnreal_virtual_330_SetNumericPropertyValueFromString(const FNumericProperty & self,void * Data,const wchar_t * Value);
void _dasUnreal_virtual_331_SetNumericPropertyValueFromString_InContainer(const FNumericProperty & self,void * Container,const wchar_t * Value);
int64 _dasUnreal_virtual_332_GetSignedIntPropertyValue(const FNumericProperty & self,const void * Data);
int64 _dasUnreal_virtual_333_GetSignedIntPropertyValue_InContainer(const FNumericProperty & self,const void * Container);
uint64 _dasUnreal_virtual_334_GetUnsignedIntPropertyValue(const FNumericProperty & self,const void * Data);
uint64 _dasUnreal_virtual_335_GetUnsignedIntPropertyValue_InContainer(const FNumericProperty & self,const void * Container);
double _dasUnreal_virtual_336_GetFloatingPointPropertyValue(const FNumericProperty & self,const void * Data);
FString _dasUnreal_virtual_337_GetNumericPropertyValueToString(const FNumericProperty & self,const void * Data);
FString _dasUnreal_virtual_338_GetNumericPropertyValueToString_InContainer(const FNumericProperty & self,const void * Container);
FFieldClass * _dasUnreal_static_339_StaticClass(const FByteProperty *);
FField * _dasUnreal_static_340_Construct(const FByteProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_341_StaticClassCastFlagsPrivate(const FByteProperty *);
uint64 _dasUnreal_static_342_StaticClassCastFlags(const FByteProperty *);
void _dasUnreal_virtual_343_Serialize(FByteProperty & self,FArchive & Ar);
void _dasUnreal_virtual_344_AddReferencedObjects(FByteProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_345_PostDuplicate(FByteProperty & self,const FField & InField);
FString _dasUnreal_virtual_346_GetCPPType(const FByteProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
void _dasUnreal_virtual_347_AppendSchemaHash(const FByteProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
UEnum * _dasUnreal_virtual_348_GetIntPropertyEnum(const FByteProperty & self);
FFieldClass * _dasUnreal_static_349_StaticClass(const FInt8Property *);
FField * _dasUnreal_static_350_Construct(const FInt8Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_351_StaticClassCastFlagsPrivate(const FInt8Property *);
uint64 _dasUnreal_static_352_StaticClassCastFlags(const FInt8Property *);
FFieldClass * _dasUnreal_static_353_StaticClass(const FInt16Property *);
FField * _dasUnreal_static_354_Construct(const FInt16Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_355_StaticClassCastFlagsPrivate(const FInt16Property *);
uint64 _dasUnreal_static_356_StaticClassCastFlags(const FInt16Property *);
FFieldClass * _dasUnreal_static_357_StaticClass(const FIntProperty *);
FField * _dasUnreal_static_358_Construct(const FIntProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_359_StaticClassCastFlagsPrivate(const FIntProperty *);
uint64 _dasUnreal_static_360_StaticClassCastFlags(const FIntProperty *);
FFieldClass * _dasUnreal_static_361_StaticClass(const FInt64Property *);
FField * _dasUnreal_static_362_Construct(const FInt64Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_363_StaticClassCastFlagsPrivate(const FInt64Property *);
uint64 _dasUnreal_static_364_StaticClassCastFlags(const FInt64Property *);
FFieldClass * _dasUnreal_static_365_StaticClass(const FUInt16Property *);
FField * _dasUnreal_static_366_Construct(const FUInt16Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_367_StaticClassCastFlagsPrivate(const FUInt16Property *);
uint64 _dasUnreal_static_368_StaticClassCastFlags(const FUInt16Property *);
FFieldClass * _dasUnreal_static_369_StaticClass(const FUInt32Property *);
FField * _dasUnreal_static_370_Construct(const FUInt32Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_371_StaticClassCastFlagsPrivate(const FUInt32Property *);
uint64 _dasUnreal_static_372_StaticClassCastFlags(const FUInt32Property *);
FFieldClass * _dasUnreal_static_373_StaticClass(const FUInt64Property *);
FField * _dasUnreal_static_374_Construct(const FUInt64Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_375_StaticClassCastFlagsPrivate(const FUInt64Property *);
uint64 _dasUnreal_static_376_StaticClassCastFlags(const FUInt64Property *);
FFieldClass * _dasUnreal_static_377_StaticClass(const FFloatProperty *);
FField * _dasUnreal_static_378_Construct(const FFloatProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_379_StaticClassCastFlagsPrivate(const FFloatProperty *);
uint64 _dasUnreal_static_380_StaticClassCastFlags(const FFloatProperty *);
FFieldClass * _dasUnreal_static_381_StaticClass(const FDoubleProperty *);
FField * _dasUnreal_static_382_Construct(const FDoubleProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_383_StaticClassCastFlagsPrivate(const FDoubleProperty *);
uint64 _dasUnreal_static_384_StaticClassCastFlags(const FDoubleProperty *);
FFieldClass * _dasUnreal_static_385_StaticClass(const FBoolProperty *);
FField * _dasUnreal_static_386_Construct(const FBoolProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_387_StaticClassCastFlagsPrivate(const FBoolProperty *);
uint64 _dasUnreal_static_388_StaticClassCastFlags(const FBoolProperty *);
void _dasUnreal_virtual_389_Serialize(FBoolProperty & self,FArchive & Ar);
void _dasUnreal_virtual_390_PostDuplicate(FBoolProperty & self,const FField & InField);
FString _dasUnreal_virtual_391_GetCPPType(const FBoolProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_392_GetCPPMacroType(const FBoolProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_393_GetCPPTypeForwardDeclaration(const FBoolProperty & self);
void _dasUnreal_virtual_394_LinkInternal(FBoolProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_395_Identical(const FBoolProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_396_CopyValuesInternal(const FBoolProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_397_ClearValueInternal(const FBoolProperty & self,void * Data);
void _dasUnreal_virtual_398_InitializeValueInternal(const FBoolProperty & self,void * Dest);
int _dasUnreal_virtual_399_GetMinAlignment(const FBoolProperty & self);
void _dasUnreal_virtual_400_AppendSchemaHash(const FBoolProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
bool _dasUnreal_static_401_GetDefaultPropertyValue(const FBoolProperty *);
unsigned int _dasUnreal_virtual_402_GetValueTypeHashInternal(const FBoolProperty & self,const void * Src);
FFieldClass * _dasUnreal_static_403_StaticClass(const FObjectPropertyBase *);
FField * _dasUnreal_static_404_Construct(const FObjectPropertyBase *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_405_StaticClassCastFlagsPrivate(const FObjectPropertyBase *);
uint64 _dasUnreal_static_406_StaticClassCastFlags(const FObjectPropertyBase *);
void _dasUnreal_virtual_407_Serialize(FObjectPropertyBase & self,FArchive & Ar);
void _dasUnreal_virtual_408_AddReferencedObjects(FObjectPropertyBase & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_409_BeginDestroy(FObjectPropertyBase & self);
void _dasUnreal_virtual_410_PostDuplicate(FObjectPropertyBase & self,const FField & InField);
bool _dasUnreal_virtual_411_Identical(const FObjectPropertyBase & self,const void * A,const void * B,unsigned int PortFlags);
bool _dasUnreal_virtual_412_SupportsNetSharedSerialization(const FObjectPropertyBase & self);
FName _dasUnreal_virtual_413_GetID(const FObjectPropertyBase & self);
bool _dasUnreal_virtual_414_SameType(const FObjectPropertyBase & self,const FProperty * Other);
FString _dasUnreal_virtual_415_GetCPPTypeCustom(const FObjectPropertyBase & self,FString * ExtendedTypeText,unsigned int CPPExportFlags,const FString & InnerNativeTypeName);
bool _dasUnreal_static_416_StaticIdentical(const FObjectPropertyBase *,UObject * A,UObject * B,unsigned int PortFlags);
UObject * _dasUnreal_virtual_417_LoadObjectPropertyValue(const FObjectPropertyBase & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_418_GetObjectPropertyValue(const FObjectPropertyBase & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_419_GetObjectPropertyValue_InContainer(const FObjectPropertyBase & self,const void * ContainerAddress,int ArrayIndex);
void _dasUnreal_virtual_420_SetObjectPropertyValue(const FObjectPropertyBase & self,void * PropertyValueAddress,UObject * Value);
void _dasUnreal_virtual_421_SetObjectPropertyValue_InContainer(const FObjectPropertyBase & self,void * ContainerAddress,UObject * Value,int ArrayIndex);
FFieldClass * _dasUnreal_static_422_StaticClass(const FStructProperty *);
FField * _dasUnreal_static_423_Construct(const FStructProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_424_StaticClassCastFlagsPrivate(const FStructProperty *);
uint64 _dasUnreal_static_425_StaticClassCastFlags(const FStructProperty *);
void _dasUnreal_virtual_426_Serialize(FStructProperty & self,FArchive & Ar);
void _dasUnreal_virtual_427_AddReferencedObjects(FStructProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_428_PostDuplicate(FStructProperty & self,const FField & InField);
FString _dasUnreal_virtual_429_GetCPPMacroType(const FStructProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_430_GetCPPType(const FStructProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_431_GetCPPTypeForwardDeclaration(const FStructProperty & self);
void _dasUnreal_virtual_432_LinkInternal(FStructProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_433_Identical(const FStructProperty & self,const void * A,const void * B,unsigned int PortFlags);
bool _dasUnreal_virtual_434_SupportsNetSharedSerialization(const FStructProperty & self);
void _dasUnreal_virtual_435_CopyValuesInternal(const FStructProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_436_ClearValueInternal(const FStructProperty & self,void * Data);
void _dasUnreal_virtual_437_DestroyValueInternal(const FStructProperty & self,void * Dest);
void _dasUnreal_virtual_438_InitializeValueInternal(const FStructProperty & self,void * Dest);
int _dasUnreal_virtual_439_GetMinAlignment(const FStructProperty & self);
bool _dasUnreal_virtual_440_SameType(const FStructProperty & self,const FProperty * Other);
void _dasUnreal_virtual_441_AppendSchemaHash(const FStructProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FProperty * _dasUnreal_static_442_GetNextPropertyAndAdvance(const FCustomPropertyListNode *,const FCustomPropertyListNode *& Node);
UClass * _dasUnreal_static_443_StaticClass(const UPropertyWrapper *);
const wchar_t * _dasUnreal_static_444_StaticPackage(const UPropertyWrapper *);
void _dasUnreal_static_445_StaticRegisterNativesUPropertyWrapper(const UPropertyWrapper *);
