// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

FString _dasUnreal_static_0_Chr(const FString *,wchar_t Ch);
FString _dasUnreal_static_1_ChrN(const FString *,int NumCharacters,wchar_t Char);
FString _dasUnreal_static_2_FormatAsNumber(const FString *,int InNumber);
FString _dasUnreal_static_3_FromInt(const FString *,int Num);
FString _dasUnreal_static_4_FromBlob(const FString *,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_5_ToBlob(const FString *,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_6_FromHexBlob(const FString *,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_7_ToHexBlob(const FString *,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_8_SanitizeFloat(const FString *,double InFloat,const int InMinFractionalDigits);
void _dasUnreal_static_9_AssertIfInConstructor(const FObjectInitializer *,UObject * Outer,const wchar_t * ErrorMessage);
FObjectInitializer & _dasUnreal_static_10_Get(const FObjectInitializer *);
void _dasUnreal_static_11_InitProperties(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer,UObject * Obj,UClass * DefaultsClass,UObject * DefaultData);
bool _dasUnreal_static_12_InitSubobjectProperties(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer);
void _dasUnreal_static_13_InstanceSubobjects(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer,UClass * Class,bool bNeedInstancing,bool bNeedSubobjectInstancing);
void _dasUnreal_static_14_PostConstructInitObject(const FScriptIntegrationObjectHelper *,FObjectInitializer & ObjectInitializer);
void _dasUnreal_virtual_15_AddStableReference(FReferenceCollector & self,UObject ** Object);
bool _dasUnreal_virtual_16_NeedsPropertyReferencer(const FReferenceCollector & self);
void _dasUnreal_virtual_17_AllowEliminatingReferences(FReferenceCollector & self,bool bAllow);
bool _dasUnreal_virtual_18_MarkWeakObjectReferenceForClearing(FReferenceCollector & self,UObject ** WeakReference);
void _dasUnreal_virtual_19_SetIsProcessingNativeReferences(FReferenceCollector & self,bool bIsNative);
bool _dasUnreal_virtual_20_IsProcessingNativeReferences(const FReferenceCollector & self);
bool _dasUnreal_virtual_21_NeedsInitialReferences(const FReferenceCollector & self);
bool _dasUnreal_virtual_22_IsIgnoringArchetypeRef(const FReferenceFinder & self);
bool _dasUnreal_virtual_23_IsIgnoringTransient(const FReferenceFinder & self);
void _dasUnreal_static_24_BroadcastOnObjectModified(const FCoreUObjectDelegates *,UObject * Object);
FString _dasUnreal_static_25_FormatPathForAssetLog(const FAssetMsg *,const wchar_t * Path);
FString _dasUnreal_static_26_FormatPathForAssetLog(const FAssetMsg *,const UObject * Object);
FString _dasUnreal_static_27_GetAssetLogString(const FAssetMsg *,const wchar_t * Path,const FString & Message);
FString _dasUnreal_static_28_GetAssetLogString(const FAssetMsg *,const UObject * Object,const FString & Message);
FName _dasUnreal_virtual_29_GetFNameForStatID(const UObjectBase & self);
FString _dasUnreal_static_30_RemoveClassPrefix(const UObjectBase *,const wchar_t * ClassName);
void _dasUnreal_static_31_PrefetchClass(const UObjectBase *,UObject * Object);
void _dasUnreal_static_32_PrefetchOuter(const UObjectBase *,UObject * Object);
bool _dasUnreal_static_33_IsPendingKillEnabled(const UObjectBaseUtility *);
EInternalObjectFlags _dasUnreal_static_34_FixGarbageOrPendingKillInternalObjectFlags(const UObjectBaseUtility *,const EInternalObjectFlags InFlags);
bool _dasUnreal_virtual_35_CanBeClusterRoot(const UObjectBaseUtility & self);
bool _dasUnreal_virtual_36_CanBeInCluster(const UObjectBaseUtility & self);
void _dasUnreal_virtual_37_CreateCluster(UObjectBaseUtility & self);
void _dasUnreal_virtual_38_OnClusterMarkedAsPendingKill(UObjectBaseUtility & self);
UClass * _dasUnreal_static_39_StaticClass(const UObject *);
const wchar_t * _dasUnreal_static_40_StaticConfigName(const UObject *);
void _dasUnreal_static_41_StaticRegisterNativesUObject(const UObject *);
void _dasUnreal_virtual_42_PostInitProperties(UObject & self);
void _dasUnreal_virtual_43_PostReinitProperties(UObject & self);
void _dasUnreal_virtual_44_PostCDOContruct(UObject & self);
bool _dasUnreal_virtual_45_PreSaveRoot(UObject & self,const wchar_t * Filename);
void _dasUnreal_virtual_46_PostSaveRoot(UObject & self,bool bCleanupIsRequired);
bool _dasUnreal_virtual_47_Modify(UObject & self,bool bAlwaysMarkDirty);
bool _dasUnreal_virtual_48_IsCapturingAsRootObjectForTransaction(const UObject & self);
void _dasUnreal_virtual_49_LoadedFromAnotherClass(UObject & self,const FName & OldClassName);
bool _dasUnreal_virtual_50_ResolveSubobject(UObject & self,const wchar_t * SubObjectPath,UObject *& OutObject,bool bLoadIfExists);
bool _dasUnreal_virtual_51_IsReadyForAsyncPostLoad(const UObject & self);
void _dasUnreal_virtual_52_PostLoad(UObject & self);
void _dasUnreal_virtual_53_BeginDestroy(UObject & self);
bool _dasUnreal_virtual_54_IsReadyForFinishDestroy(UObject & self);
void _dasUnreal_virtual_55_PostLinkerChange(UObject & self);
void _dasUnreal_virtual_56_FinishDestroy(UObject & self);
void _dasUnreal_virtual_57_ShutdownAfterError(UObject & self);
void _dasUnreal_virtual_58_PreEditUndo(UObject & self);
void _dasUnreal_virtual_59_PostRename(UObject & self,UObject * OldOuter,const FName OldName);
bool _dasUnreal_virtual_60_NeedsLoadForClient(const UObject & self);
bool _dasUnreal_virtual_61_NeedsLoadForServer(const UObject & self);
bool _dasUnreal_virtual_62_NeedsLoadForEditorGame(const UObject & self);
bool _dasUnreal_virtual_63_IsEditorOnly(const UObject & self);
bool _dasUnreal_virtual_64_HasNonEditorOnlyReferences(const UObject & self);
bool _dasUnreal_virtual_65_IsPostLoadThreadSafe(const UObject & self);
bool _dasUnreal_virtual_66_IsDestructionThreadSafe(const UObject & self);
bool _dasUnreal_static_67_CanCreateInCurrentContext(const UObject *,UObject * Template);
void _dasUnreal_virtual_68_PostEditImport(UObject & self);
bool _dasUnreal_virtual_69_Rename(UObject & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
FString _dasUnreal_virtual_70_GetDesc(UObject & self);
void _dasUnreal_virtual_71_MoveDataToSparseClassDataStruct(const UObject & self);
bool _dasUnreal_virtual_72_ConformSparseClassDataStruct(const UObject & self,UScriptStruct * SourceSparseClassDataStruct,void * SourceSparseClassData);
bool _dasUnreal_virtual_73_ImplementsGetWorld(const UObject & self);
FName _dasUnreal_virtual_74_GetExporterName(UObject & self);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_75_GetRestoreForUObjectOverwrite(UObject & self);
bool _dasUnreal_virtual_76_AreNativePropertiesIdenticalTo(const UObject & self,UObject * Other);
const FName & _dasUnreal_static_77_SourceFileTagName(const UObject *);
const FName & _dasUnreal_static_78_AssetVersePathTagName(const UObject *);
bool _dasUnreal_virtual_79_IsAsset(const UObject & self);
bool _dasUnreal_virtual_80_IsLocalizedResource(const UObject & self);
bool _dasUnreal_virtual_81_IsSafeForRootSet(const UObject & self);
void _dasUnreal_virtual_82_TagSubobjects(UObject & self,EObjectFlags NewFlags);
bool _dasUnreal_virtual_83_IsNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_84_IsFullNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_85_IsSupportedForNetworking(const UObject & self);
void _dasUnreal_virtual_86_PreNetReceive(UObject & self);
void _dasUnreal_virtual_87_PostNetReceive(UObject & self);
void _dasUnreal_virtual_88_PostRepNotifies(UObject & self);
void _dasUnreal_virtual_89_PreDestroyFromReplication(UObject & self);
void _dasUnreal_virtual_90_WillNeverCacheCookedPlatformDataAgain(UObject & self);
void _dasUnreal_virtual_91_ClearAllCachedCookedPlatformData(UObject & self);
const wchar_t * _dasUnreal_virtual_92_GetConfigOverridePlatform(const UObject & self);
void _dasUnreal_virtual_93_OverrideConfigSection(UObject & self,FString & SectionName);
void _dasUnreal_virtual_94_OverridePerObjectConfigSection(UObject & self,FString & SectionName);
UObject * _dasUnreal_static_95_GetArchetypeFromRequiredInfo(const UObject *,const UClass * Class,const UObject * Outer,FName Name,EObjectFlags ObjectFlags);
UClass * _dasUnreal_virtual_96_RegenerateClass(UObject & self,UClass * ClassToRegenerate,UObject * PreviousCDO);
void _dasUnreal_virtual_97_MarkAsEditorOnlySubobject(UObject & self);
uint64 _dasUnreal_virtual_98_GetNetPushIdDynamic(const UObject & self);
UClass * _dasUnreal_static_99_StaticClass(const UField *);
const wchar_t * _dasUnreal_static_100_StaticPackage(const UField *);
void _dasUnreal_static_101_StaticRegisterNativesUField(const UField *);
void _dasUnreal_virtual_102_PostLoad(UField & self);
bool _dasUnreal_virtual_103_NeedsLoadForClient(const UField & self);
bool _dasUnreal_virtual_104_NeedsLoadForServer(const UField & self);
void _dasUnreal_virtual_105_Bind(UField & self);
void _dasUnreal_static_106_FormatNativeToolTip(const UField *,FString & ToolTipString,bool bRemoveExtraSections);
UClass * _dasUnreal_static_107_StaticClass(const UStruct *);
const wchar_t * _dasUnreal_static_108_StaticPackage(const UStruct *);
void _dasUnreal_static_109_StaticRegisterNativesUStruct(const UStruct *);
void _dasUnreal_virtual_110_PostLoad(UStruct & self);
void _dasUnreal_virtual_111_FinishDestroy(UStruct & self);
void _dasUnreal_virtual_112_RegisterDependencies(UStruct & self);
void _dasUnreal_virtual_113_TagSubobjects(UStruct & self,EObjectFlags NewFlags);
UStruct * _dasUnreal_virtual_114_GetInheritanceSuper(const UStruct & self);
void _dasUnreal_virtual_115_InitializeStruct(const UStruct & self,void * Dest,int ArrayDim);
void _dasUnreal_virtual_116_DestroyStruct(const UStruct & self,void * Dest,int ArrayDim);
const wchar_t * _dasUnreal_virtual_117_GetPrefixCPP(const UStruct & self);
void _dasUnreal_virtual_118_SetSuperStruct(UStruct & self,UStruct * NewSuperStruct);
FString _dasUnreal_virtual_119_GetAuthoredNameForField(const UStruct & self,const UField * Field);
bool _dasUnreal_virtual_120_IsStructTrashed(const UStruct & self);
UClass * _dasUnreal_static_121_StaticClass(const UScriptStruct *);
const wchar_t * _dasUnreal_static_122_StaticPackage(const UScriptStruct *);
void _dasUnreal_static_123_StaticRegisterNativesUScriptStruct(const UScriptStruct *);
void _dasUnreal_virtual_124_InitializeStruct(const UScriptStruct & self,void * Dest,int ArrayDim);
void _dasUnreal_virtual_125_DestroyStruct(const UScriptStruct & self,void * Dest,int ArrayDim);
bool _dasUnreal_virtual_126_IsStructTrashed(const UScriptStruct & self);
void _dasUnreal_virtual_127_PrepareCppStructOps(UScriptStruct & self);
unsigned int _dasUnreal_virtual_128_GetStructTypeHash(const UScriptStruct & self,const void * Src);
void _dasUnreal_virtual_129_RecursivelyPreload(UScriptStruct & self);
FString _dasUnreal_virtual_130_GetStructCPPName(const UScriptStruct & self,unsigned int CPPExportFlags);
void _dasUnreal_virtual_131_InitializeDefaultValue(const UScriptStruct & self,unsigned char * InStructData);
UClass * _dasUnreal_static_132_StaticClass(const UEnum *);
const wchar_t * _dasUnreal_static_133_StaticPackage(const UEnum *);
void _dasUnreal_static_134_StaticRegisterNativesUEnum(const UEnum *);
FText _dasUnreal_virtual_135_GetDisplayNameTextByIndex(const UEnum & self,int InIndex);
FString _dasUnreal_virtual_136_GetAuthoredNameStringByIndex(const UEnum & self,int InIndex);
bool _dasUnreal_static_137_IsFullEnumName(const UEnum *,const wchar_t * InEnumName);
FString _dasUnreal_virtual_138_GenerateFullEnumName(const UEnum & self,const wchar_t * InEnumName);
int64 _dasUnreal_static_139_ParseEnum(const UEnum *,const wchar_t *& Str);
void _dasUnreal_virtual_140_BeginDestroy(UEnum & self);
bool _dasUnreal_virtual_141_IsAbstract(const FCppClassTypeInfo & self);
UClass * _dasUnreal_static_142_StaticClass(const UClass *);
const wchar_t * _dasUnreal_static_143_StaticPackage(const UClass *);
void _dasUnreal_static_144_StaticRegisterNativesUClass(const UClass *);
void _dasUnreal_virtual_145_ConditionalRecompileClass(UClass & self,FUObjectSerializeContext * InLoadContext);
void _dasUnreal_virtual_146_FlushCompilationQueueForLevel(UClass & self);
void _dasUnreal_static_147_AssembleReferenceTokenStreams(const UClass *);
UClass * _dasUnreal_virtual_148_GetAuthoritativeClass(UClass & self);
void _dasUnreal_virtual_149_PostLoad(UClass & self);
void _dasUnreal_virtual_150_FinishDestroy(UClass & self);
void _dasUnreal_virtual_151_DeferredRegister(UClass & self,UClass * UClassStaticClass,const wchar_t * PackageName,const wchar_t * InName);
bool _dasUnreal_virtual_152_Rename(UClass & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
void _dasUnreal_virtual_153_TagSubobjects(UClass & self,EObjectFlags NewFlags);
void _dasUnreal_virtual_154_PostInitProperties(UClass & self);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_155_GetRestoreForUObjectOverwrite(UClass & self);
FString _dasUnreal_virtual_156_GetDesc(UClass & self);
bool _dasUnreal_virtual_157_IsAsset(const UClass & self);
bool _dasUnreal_virtual_158_IsNameStableForNetworking(const UClass & self);
void _dasUnreal_virtual_159_Bind(UClass & self);
const wchar_t * _dasUnreal_virtual_160_GetPrefixCPP(const UClass & self);
void _dasUnreal_virtual_161_SetSuperStruct(UClass & self,UStruct * NewSuperStruct);
bool _dasUnreal_virtual_162_IsStructTrashed(const UClass & self);
void _dasUnreal_virtual_163_PostLoadInstance(UClass & self,UObject * InObj);
void _dasUnreal_virtual_164_InitPropertiesFromCustomList(UClass & self,unsigned char * DataPtr,const unsigned char * DefaultDataPtr);
bool _dasUnreal_virtual_165_CanCreateAssetOfClass(const UClass & self);
void _dasUnreal_virtual_166_CreatePersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bCreateOnlyIfEmpty,bool bSkipSuperClass,UClass * OldClass);
void _dasUnreal_virtual_167_DestroyPersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bSkipSuperClass);
void _dasUnreal_virtual_168_PostLoadDefaultObject(UClass & self,UObject * Object);
void _dasUnreal_virtual_169_PurgeClass(UClass & self,bool bRecompilingOnLoad);
UClass * _dasUnreal_static_170_FindCommonBase(const UClass *,UClass * InClassA,UClass * InClassB);
bool _dasUnreal_virtual_171_IsFunctionImplementedInScript(const UClass & self,FName InFunctionName);
UObject * _dasUnreal_virtual_172_FindArchetype(const UClass & self,const UClass * ArchetypeClass,const FName ArchetypeName);
UObject * _dasUnreal_virtual_173_GetArchetypeForCDO(const UClass & self);
bool _dasUnreal_static_174_IsSafeToSerializeToStructuredArchives(const UClass *,UClass * InClass);
UClass * _dasUnreal_static_175_StaticClass(const UPackage *);
const wchar_t * _dasUnreal_static_176_StaticPackage(const UPackage *);
void _dasUnreal_static_177_StaticRegisterNativesUPackage(const UPackage *);
bool _dasUnreal_virtual_178_IsNameStableForNetworking(const UPackage & self);
bool _dasUnreal_virtual_179_NeedsLoadForClient(const UPackage & self);
bool _dasUnreal_virtual_180_NeedsLoadForServer(const UPackage & self);
bool _dasUnreal_virtual_181_IsPostLoadThreadSafe(const UPackage & self);
bool _dasUnreal_virtual_182_IsDestructionThreadSafe(const UPackage & self);
void _dasUnreal_virtual_183_PostInitProperties(UPackage & self);
void _dasUnreal_virtual_184_FinishDestroy(UPackage & self);
bool _dasUnreal_virtual_185_IsAsset(const UPackage & self);
void _dasUnreal_virtual_186_TagSubobjects(UPackage & self,EObjectFlags NewFlags);
void _dasUnreal_static_187_WaitForAsyncFileWrites(const UPackage *);
bool _dasUnreal_static_188_HasAsyncFileWrites(const UPackage *);
bool _dasUnreal_static_189_IsEmptyPackage(const UPackage *,UPackage * Package,const UObject * LastReferencer);
