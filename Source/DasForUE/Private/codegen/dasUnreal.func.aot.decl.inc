// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

EVersionComparison _dasUnreal_static_0_GetNewest(const FEngineVersionBase *,const FEngineVersionBase & First,const FEngineVersionBase & Second,EVersionComponent * OutComponent);
unsigned int _dasUnreal_static_1_EncodeLicenseeChangelist(const FEngineVersionBase *,unsigned int Changelist);
void _dasUnreal_virtual_2_Serialize(FOutputDevice & self,const wchar_t * V,ELogVerbosity::Type Verbosity,const FName & Category,const double Time);
void _dasUnreal_virtual_3_SerializeRecord(FOutputDevice & self,const UE::FLogRecord & Record);
void _dasUnreal_virtual_4_Flush(FOutputDevice & self);
void _dasUnreal_virtual_5_TearDown(FOutputDevice & self);
void _dasUnreal_virtual_6_Dump(FOutputDevice & self,FArchive & Ar);
bool _dasUnreal_virtual_7_IsMemoryOnly(const FOutputDevice & self);
bool _dasUnreal_virtual_8_CanBeUsedOnAnyThread(const FOutputDevice & self);
bool _dasUnreal_virtual_9_CanBeUsedOnMultipleThreads(const FOutputDevice & self);
bool _dasUnreal_virtual_10_CanBeUsedOnPanicThread(const FOutputDevice & self);
FArchiveState & _dasUnreal_virtual_11_GetInnermostState(FArchiveState & self);
void _dasUnreal_virtual_12_CountBytes(FArchiveState & self,SIZE_T InNum,SIZE_T InMax);
FString _dasUnreal_virtual_13_GetArchiveName(const FArchiveState & self);
FLinker * _dasUnreal_virtual_14_GetLinker(FArchiveState & self);
int64 _dasUnreal_virtual_15_Tell(FArchiveState & self);
int64 _dasUnreal_virtual_16_TotalSize(FArchiveState & self);
bool _dasUnreal_virtual_17_AtEnd(FArchiveState & self);
UObject * _dasUnreal_virtual_18_GetArchetypeFromLoader(FArchiveState & self,const UObject * Obj);
unsigned int _dasUnreal_virtual_19_EngineNetVer(const FArchiveState & self);
unsigned int _dasUnreal_virtual_20_GameNetVer(const FArchiveState & self);
void _dasUnreal_virtual_21_ResetCustomVersions(FArchiveState & self);
void _dasUnreal_virtual_22_SetFilterEditorOnly(FArchiveState & self,bool InFilterEditorOnly);
bool _dasUnreal_virtual_23_UseToResolveEnumerators(const FArchiveState & self);
bool _dasUnreal_virtual_24_ShouldSkipProperty(const FArchiveState & self,const FProperty * InProperty);
void _dasUnreal_virtual_25_SetSerializedProperty(FArchiveState & self,FProperty * InProperty);
void _dasUnreal_virtual_26_SetSerializedPropertyChain(FArchiveState & self,const FArchiveSerializedPropertyChain * InSerializedPropertyChain,FProperty * InSerializedPropertyOverride);
bool _dasUnreal_virtual_27_IsEditorOnlyPropertyOnTheStack(const FArchiveState & self);
void _dasUnreal_virtual_28_SetSerializeContext(FArchiveState & self,FUObjectSerializeContext * InLoadContext);
FUObjectSerializeContext * _dasUnreal_virtual_29_GetSerializeContext(FArchiveState & self);
void _dasUnreal_virtual_30_SetLocalizationNamespace(FArchiveState & self,const FString & InLocalizationNamespace);
FString _dasUnreal_virtual_31_GetLocalizationNamespace(const FArchiveState & self);
void _dasUnreal_virtual_32_Reset(FArchiveState & self);
void _dasUnreal_virtual_33_SetIsLoading(FArchiveState & self,bool bInIsLoading);
void _dasUnreal_virtual_34_SetIsLoadingFromCookedPackage(FArchiveState & self,bool bInIsLoadingFromCookedPackage);
void _dasUnreal_virtual_35_SetIsSaving(FArchiveState & self,bool bInIsSaving);
void _dasUnreal_virtual_36_SetIsTransacting(FArchiveState & self,bool bInIsTransacting);
void _dasUnreal_virtual_37_SetIsTextFormat(FArchiveState & self,bool bInIsTextFormat);
void _dasUnreal_virtual_38_SetWantBinaryPropertySerialization(FArchiveState & self,bool bInWantBinaryPropertySerialization);
void _dasUnreal_virtual_39_SetUseUnversionedPropertySerialization(FArchiveState & self,bool bInUseUnversioned);
void _dasUnreal_virtual_40_SetForceUnicode(FArchiveState & self,bool bInForceUnicode);
void _dasUnreal_virtual_41_SetIsPersistent(FArchiveState & self,bool bInIsPersistent);
void _dasUnreal_virtual_42_SetLicenseeUEVer(FArchiveState & self,int InVer);
void _dasUnreal_virtual_43_SetEngineVer(FArchiveState & self,const FEngineVersionBase & InVer);
void _dasUnreal_virtual_44_SetEngineNetVer(FArchiveState & self,const unsigned int InEngineNetVer);
void _dasUnreal_virtual_45_SetGameNetVer(FArchiveState & self,const unsigned int InGameNetVer);
void _dasUnreal_virtual_46_ForceBlueprintFinalization(FArchive & self);
void _dasUnreal_virtual_47_Serialize(FArchive & self,void * V,int64 Length);
void _dasUnreal_virtual_48_SerializeBits(FArchive & self,void * V,int64 LengthBits);
void _dasUnreal_virtual_49_SerializeInt(FArchive & self,unsigned int & Value,unsigned int Max);
void _dasUnreal_virtual_50_SerializeIntPacked(FArchive & self,unsigned int & Value);
void _dasUnreal_virtual_51_SerializeIntPacked64(FArchive & self,unsigned long long & Value);
void _dasUnreal_virtual_52_Preload(FArchive & self,UObject * Object);
void _dasUnreal_virtual_53_Seek(FArchive & self,int64 InPos);
void _dasUnreal_virtual_54_AttachBulkData(FArchive & self,UE::Serialization::FEditorBulkData * BulkData);
void _dasUnreal_virtual_55_DetachBulkData(FArchive & self,UE::Serialization::FEditorBulkData * BulkData,bool bEnsureBulkDataIsLoaded);
bool _dasUnreal_virtual_56_IsProxyOf(const FArchive & self,FArchive * InOther);
bool _dasUnreal_virtual_57_Precache(FArchive & self,int64 PrecacheOffset,int64 PrecacheSize);
void _dasUnreal_virtual_58_FlushCache(FArchive & self);
void _dasUnreal_virtual_59_Flush(FArchive & self);
bool _dasUnreal_virtual_60_Close(FArchive & self);
void _dasUnreal_virtual_61_MarkScriptSerializationStart(FArchive & self,const UObject * Obj);
void _dasUnreal_virtual_62_MarkScriptSerializationEnd(FArchive & self,const UObject * Obj);
FArchive * _dasUnreal_virtual_63_GetCacheableArchive(FArchive & self);
void _dasUnreal_virtual_64_PushSerializedProperty(FArchive & self,FProperty * InProperty,const bool bIsEditorOnlyProperty);
void _dasUnreal_virtual_65_PopSerializedProperty(FArchive & self,FProperty * InProperty,const bool bIsEditorOnlyProperty);
void _dasUnreal_virtual_66_PushDebugDataString(FArchive & self,const FName & DebugData);
void _dasUnreal_virtual_67_PopDebugDataString(FArchive & self);
void _dasUnreal_virtual_68_PushFileRegionType(FArchive & self,EFileRegionType Type);
void _dasUnreal_virtual_69_PopFileRegionType(FArchive & self);
FString _dasUnreal_static_70_Chr(const FString *,wchar_t Ch);
FString _dasUnreal_static_71_ChrN(const FString *,int NumCharacters,wchar_t Char);
FString _dasUnreal_static_72_FormatAsNumber(const FString *,int InNumber);
FString _dasUnreal_static_73_FromInt(const FString *,int Num);
FString _dasUnreal_static_74_FromBlob(const FString *,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_75_ToBlob(const FString *,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_76_FromHexBlob(const FString *,const unsigned char * SrcBuffer,const unsigned int SrcSize);
bool _dasUnreal_static_77_ToHexBlob(const FString *,const FString & Source,unsigned char * DestBuffer,const unsigned int DestSize);
FString _dasUnreal_static_78_SanitizeFloat(const FString *,double InFloat,const int InMinFractionalDigits);
FSetElementId _dasUnreal_static_79_FromInteger(const FSetElementId *,int Integer);
FPrimaryAssetId _dasUnreal_static_80_ParseTypeAndName(const FPrimaryAssetId *,const wchar_t * TypeAndName,unsigned int Len);
FPrimaryAssetId _dasUnreal_static_81_ParseTypeAndName(const FPrimaryAssetId *,FName TypeAndName);
FPrimaryAssetId _dasUnreal_static_82_ParseTypeAndName(const FPrimaryAssetId *,const FString & TypeAndName);
FPrimaryAssetId _dasUnreal_static_83_FromString(const FPrimaryAssetId *,const FString & String);
const char * _dasUnreal_static_84_GetGroupName(const FStatGroup_STATGROUP_Script *);
const char * _dasUnreal_static_85_GetGroupCategory(const FStatGroup_STATGROUP_Script *);
const wchar_t * _dasUnreal_static_86_GetDescription(const FStatGroup_STATGROUP_Script *);
bool _dasUnreal_static_87_IsDefaultEnabled(const FStatGroup_STATGROUP_Script *);
bool _dasUnreal_static_88_IsCompileTimeEnable(const FStatGroup_STATGROUP_Script *);
bool _dasUnreal_static_89_GetSortByName(const FStatGroup_STATGROUP_Script *);
void _dasUnreal_static_90_ThrowScriptException(const FBlueprintCoreDelegates *,const UObject * ActiveObject,FFrame & StackFrame,const FBlueprintExceptionInfo & Info);
void _dasUnreal_static_91_InstrumentScriptEvent(const FBlueprintCoreDelegates *,const FScriptInstrumentationSignal & Info);
void _dasUnreal_static_92_SetScriptMaximumLoopIterations(const FBlueprintCoreDelegates *,const int MaximumLoopIterations);
bool _dasUnreal_static_93_IsDebuggingEnabled(const FBlueprintCoreDelegates *);
FBlueprintContextTracker & _dasUnreal_static_94_Get(const FBlueprintContextTracker *);
const FBlueprintContextTracker * _dasUnreal_static_95_TryGet(const FBlueprintContextTracker *);
void _dasUnreal_static_96_AssertIfInConstructor(const FObjectInitializer *,UObject * Outer,const wchar_t * ErrorMessage);
FObjectInitializer & _dasUnreal_static_97_Get(const FObjectInitializer *);
void _dasUnreal_static_98_InitProperties(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer,UObject * Obj,UClass * DefaultsClass,UObject * DefaultData);
bool _dasUnreal_static_99_InitSubobjectProperties(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer);
void _dasUnreal_static_100_InstanceSubobjects(const FScriptIntegrationObjectHelper *,const FObjectInitializer & ObjectInitializer,UClass * Class,bool bNeedInstancing,bool bNeedSubobjectInstancing);
void _dasUnreal_static_101_PostConstructInitObject(const FScriptIntegrationObjectHelper *,FObjectInitializer & ObjectInitializer);
void _dasUnreal_virtual_102_AddStableReference(FReferenceCollector & self,UObject ** Object);
bool _dasUnreal_virtual_103_NeedsPropertyReferencer(const FReferenceCollector & self);
void _dasUnreal_virtual_104_AllowEliminatingReferences(FReferenceCollector & self,bool bAllow);
void _dasUnreal_virtual_105_SetSerializedProperty(FReferenceCollector & self,FProperty * Inproperty);
FProperty * _dasUnreal_virtual_106_GetSerializedProperty(const FReferenceCollector & self);
bool _dasUnreal_virtual_107_MarkWeakObjectReferenceForClearing(FReferenceCollector & self,UObject ** WeakReference);
void _dasUnreal_virtual_108_SetIsProcessingNativeReferences(FReferenceCollector & self,bool bIsNative);
bool _dasUnreal_virtual_109_IsProcessingNativeReferences(const FReferenceCollector & self);
bool _dasUnreal_virtual_110_NeedsInitialReferences(const FReferenceCollector & self);
void _dasUnreal_virtual_111_FindReferences(FReferenceFinder & self,UObject * Object,UObject * ReferencingObject,FProperty * ReferencingProperty);
bool _dasUnreal_virtual_112_IsIgnoringArchetypeRef(const FReferenceFinder & self);
bool _dasUnreal_virtual_113_IsIgnoringTransient(const FReferenceFinder & self);
void _dasUnreal_virtual_114_SetSerializedProperty(FReferenceFinder & self,FProperty * Inproperty);
FProperty * _dasUnreal_virtual_115_GetSerializedProperty(const FReferenceFinder & self);
void _dasUnreal_static_116_BroadcastOnObjectModified(const FCoreUObjectDelegates *,UObject * Object);
FString _dasUnreal_static_117_FormatPathForAssetLog(const FAssetMsg *,const wchar_t * Path);
FString _dasUnreal_static_118_FormatPathForAssetLog(const FAssetMsg *,const UObject * Object);
FString _dasUnreal_static_119_GetAssetLogString(const FAssetMsg *,const wchar_t * Path,const FString & Message);
FString _dasUnreal_static_120_GetAssetLogString(const FAssetMsg *,const UObject * Object,const FString & Message);
FName _dasUnreal_virtual_121_GetFNameForStatID(const UObjectBase & self);
FString _dasUnreal_static_122_RemoveClassPrefix(const UObjectBase *,const wchar_t * ClassName);
void _dasUnreal_static_123_PrefetchClass(const UObjectBase *,UObject * Object);
void _dasUnreal_static_124_PrefetchOuter(const UObjectBase *,UObject * Object);
bool _dasUnreal_static_125_IsPendingKillEnabled(const UObjectBaseUtility *);
EInternalObjectFlags _dasUnreal_static_126_FixGarbageOrPendingKillInternalObjectFlags(const UObjectBaseUtility *,const EInternalObjectFlags InFlags);
bool _dasUnreal_virtual_127_CanBeClusterRoot(const UObjectBaseUtility & self);
bool _dasUnreal_virtual_128_CanBeInCluster(const UObjectBaseUtility & self);
void _dasUnreal_virtual_129_CreateCluster(UObjectBaseUtility & self);
void _dasUnreal_virtual_130_OnClusterMarkedAsPendingKill(UObjectBaseUtility & self);
UClass * _dasUnreal_static_131_StaticClass(const UObject *);
const wchar_t * _dasUnreal_static_132_StaticConfigName(const UObject *);
void _dasUnreal_static_133_StaticRegisterNativesUObject(const UObject *);
void _dasUnreal_virtual_134_PostInitProperties(UObject & self);
void _dasUnreal_virtual_135_PostReinitProperties(UObject & self);
void _dasUnreal_virtual_136_PostCDOContruct(UObject & self);
bool _dasUnreal_virtual_137_Modify(UObject & self,bool bAlwaysMarkDirty);
bool _dasUnreal_virtual_138_IsCapturingAsRootObjectForTransaction(const UObject & self);
void _dasUnreal_virtual_139_LoadedFromAnotherClass(UObject & self,const FName & OldClassName);
bool _dasUnreal_virtual_140_ResolveSubobject(UObject & self,const wchar_t * SubObjectPath,UObject *& OutObject,bool bLoadIfExists);
bool _dasUnreal_virtual_141_IsReadyForAsyncPostLoad(const UObject & self);
void _dasUnreal_virtual_142_PostLoad(UObject & self);
void _dasUnreal_virtual_143_BeginDestroy(UObject & self);
bool _dasUnreal_virtual_144_IsReadyForFinishDestroy(UObject & self);
void _dasUnreal_virtual_145_PostLinkerChange(UObject & self);
void _dasUnreal_virtual_146_FinishDestroy(UObject & self);
void _dasUnreal_virtual_147_Serialize(UObject & self,FArchive & Ar);
void _dasUnreal_virtual_148_ShutdownAfterError(UObject & self);
void _dasUnreal_virtual_149_PreEditUndo(UObject & self);
void _dasUnreal_virtual_150_PostRename(UObject & self,UObject * OldOuter,const FName OldName);
void _dasUnreal_virtual_151_PostDuplicate(UObject & self,bool bDuplicateForPIE);
void _dasUnreal_virtual_152_PostDuplicate(UObject & self,EDuplicateMode::Type DuplicateMode);
bool _dasUnreal_virtual_153_NeedsLoadForClient(const UObject & self);
bool _dasUnreal_virtual_154_NeedsLoadForServer(const UObject & self);
bool _dasUnreal_virtual_155_NeedsLoadForEditorGame(const UObject & self);
bool _dasUnreal_virtual_156_IsEditorOnly(const UObject & self);
bool _dasUnreal_virtual_157_HasNonEditorOnlyReferences(const UObject & self);
bool _dasUnreal_virtual_158_IsPostLoadThreadSafe(const UObject & self);
bool _dasUnreal_virtual_159_IsDestructionThreadSafe(const UObject & self);
bool _dasUnreal_static_160_CanCreateInCurrentContext(const UObject *,UObject * Template);
void _dasUnreal_virtual_161_PostEditImport(UObject & self);
void _dasUnreal_virtual_162_PostReloadConfig(UObject & self,FProperty * PropertyThatWasLoaded);
bool _dasUnreal_virtual_163_Rename(UObject & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
FString _dasUnreal_virtual_164_GetDesc(UObject & self);
void _dasUnreal_virtual_165_MoveDataToSparseClassDataStruct(const UObject & self);
bool _dasUnreal_virtual_166_ConformSparseClassDataStruct(const UObject & self,UScriptStruct * SourceSparseClassDataStruct,void * SourceSparseClassData);
bool _dasUnreal_virtual_167_ImplementsGetWorld(const UObject & self);
FName _dasUnreal_virtual_168_GetExporterName(UObject & self);
void _dasUnreal_static_169_AddReferencedObjects(const UObject *,UObject * InThis,FReferenceCollector & Collector);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_170_GetRestoreForUObjectOverwrite(UObject & self);
bool _dasUnreal_virtual_171_AreNativePropertiesIdenticalTo(const UObject & self,UObject * Other);
const FName & _dasUnreal_static_172_SourceFileTagName(const UObject *);
const FName & _dasUnreal_static_173_AssetVersePathTagName(const UObject *);
bool _dasUnreal_virtual_174_IsAsset(const UObject & self);
FPrimaryAssetId _dasUnreal_virtual_175_GetPrimaryAssetId(const UObject & self);
bool _dasUnreal_virtual_176_IsLocalizedResource(const UObject & self);
bool _dasUnreal_virtual_177_IsSafeForRootSet(const UObject & self);
void _dasUnreal_virtual_178_TagSubobjects(UObject & self,EObjectFlags NewFlags);
bool _dasUnreal_virtual_179_IsNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_180_IsFullNameStableForNetworking(const UObject & self);
bool _dasUnreal_virtual_181_IsSupportedForNetworking(const UObject & self);
void _dasUnreal_virtual_182_PreNetReceive(UObject & self);
void _dasUnreal_virtual_183_PostNetReceive(UObject & self);
void _dasUnreal_virtual_184_PostRepNotifies(UObject & self);
void _dasUnreal_virtual_185_PreDestroyFromReplication(UObject & self);
void _dasUnreal_virtual_186_WillNeverCacheCookedPlatformDataAgain(UObject & self);
void _dasUnreal_virtual_187_ClearAllCachedCookedPlatformData(UObject & self);
const wchar_t * _dasUnreal_virtual_188_GetConfigOverridePlatform(const UObject & self);
void _dasUnreal_virtual_189_OverrideConfigSection(UObject & self,FString & SectionName);
void _dasUnreal_virtual_190_OverridePerObjectConfigSection(UObject & self,FString & SectionName);
UObject * _dasUnreal_static_191_GetArchetypeFromRequiredInfo(const UObject *,const UClass * Class,const UObject * Outer,FName Name,EObjectFlags ObjectFlags);
void _dasUnreal_virtual_192_ProcessEvent(UObject & self,UFunction * Function,void * Parms);
int _dasUnreal_virtual_193_GetFunctionCallspace(UObject & self,UFunction * Function,FFrame * Stack);
bool _dasUnreal_virtual_194_CallRemoteFunction(UObject & self,UFunction * Function,void * Parms,FOutParmRec * OutParms,FFrame * Stack);
UClass * _dasUnreal_virtual_195_RegenerateClass(UObject & self,UClass * ClassToRegenerate,UObject * PreviousCDO);
void _dasUnreal_virtual_196_MarkAsEditorOnlySubobject(UObject & self);
uint64 _dasUnreal_virtual_197_GetNetPushIdDynamic(const UObject & self);
FFieldClass * _dasUnreal_static_198_StaticClass(const FField *);
uint64 _dasUnreal_static_199_StaticClassCastFlagsPrivate(const FField *);
uint64 _dasUnreal_static_200_StaticClassCastFlags(const FField *);
void _dasUnreal_virtual_201_Serialize(FField & self,FArchive & Ar);
void _dasUnreal_virtual_202_PostLoad(FField & self);
void _dasUnreal_virtual_203_BeginDestroy(FField & self);
void _dasUnreal_virtual_204_AddReferencedObjects(FField & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_205_AddCppProperty(FField & self,FProperty * Property);
void _dasUnreal_virtual_206_Bind(FField & self);
FField * _dasUnreal_static_207_Construct(const FField *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InFlags);
FField * _dasUnreal_static_208_Construct(const FField *,const FName & FieldTypeName,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InFlags);
void _dasUnreal_virtual_209_PostDuplicate(FField & self,const FField & InField);
FField * _dasUnreal_virtual_210_GetInnerFieldByName(FField & self,const FName & InName);
void _dasUnreal_static_211_CopyMetaData(const FField *,const FField * InSourceField,FField * InDestField);
FField * _dasUnreal_static_212_CreateFromUField(const FField *,UField * InField);
FField * _dasUnreal_static_213_Duplicate(const FField *,const FField * InField,FFieldVariant DestOwner,const FName DestName,EObjectFlags FlagMask,EInternalObjectFlags InternalFlagsMask);
FName _dasUnreal_static_214_GenerateFFieldName(const FField *,FFieldVariant InOwner,FFieldClass * InClass);
UClass * _dasUnreal_static_215_StaticClass(const UField *);
const wchar_t * _dasUnreal_static_216_StaticPackage(const UField *);
void _dasUnreal_static_217_StaticRegisterNativesUField(const UField *);
void _dasUnreal_virtual_218_Serialize(UField & self,FArchive & Ar);
void _dasUnreal_virtual_219_PostLoad(UField & self);
bool _dasUnreal_virtual_220_NeedsLoadForClient(const UField & self);
bool _dasUnreal_virtual_221_NeedsLoadForServer(const UField & self);
void _dasUnreal_virtual_222_Bind(UField & self);
void _dasUnreal_static_223_FormatNativeToolTip(const UField *,FString & ToolTipString,bool bRemoveExtraSections);
FField * _dasUnreal_virtual_224_GetAssociatedFField(UField & self);
void _dasUnreal_virtual_225_SetAssociatedFField(UField & self,FField * InField);
UClass * _dasUnreal_static_226_StaticClass(const UStruct *);
const wchar_t * _dasUnreal_static_227_StaticPackage(const UStruct *);
void _dasUnreal_static_228_StaticRegisterNativesUStruct(const UStruct *);
void _dasUnreal_virtual_229_Serialize(UStruct & self,FArchive & Ar);
void _dasUnreal_virtual_230_PostLoad(UStruct & self);
void _dasUnreal_virtual_231_FinishDestroy(UStruct & self);
void _dasUnreal_virtual_232_RegisterDependencies(UStruct & self);
void _dasUnreal_static_233_AddReferencedObjects(const UStruct *,UObject * InThis,FReferenceCollector & Collector);
void _dasUnreal_virtual_234_TagSubobjects(UStruct & self,EObjectFlags NewFlags);
void _dasUnreal_virtual_235_AddCppProperty(UStruct & self,FProperty * Property);
UStruct * _dasUnreal_virtual_236_GetInheritanceSuper(const UStruct & self);
void _dasUnreal_virtual_237_Link(UStruct & self,FArchive & Ar,bool bRelinkExistingProperties);
void _dasUnreal_virtual_238_SerializeBin(const UStruct & self,FArchive & Ar,void * Data);
void _dasUnreal_virtual_239_InitializeStruct(const UStruct & self,void * Dest,int ArrayDim);
void _dasUnreal_virtual_240_DestroyStruct(const UStruct & self,void * Dest,int ArrayDim);
FProperty * _dasUnreal_virtual_241_CustomFindProperty(const UStruct & self,const FName InName);
const wchar_t * _dasUnreal_virtual_242_GetPrefixCPP(const UStruct & self);
void _dasUnreal_virtual_243_SetSuperStruct(UStruct & self,UStruct * NewSuperStruct);
FString _dasUnreal_virtual_244_GetAuthoredNameForField(const UStruct & self,const UField * Field);
FString _dasUnreal_virtual_245_GetAuthoredNameForField(const UStruct & self,const FField * Field);
bool _dasUnreal_virtual_246_IsStructTrashed(const UStruct & self);
UClass * _dasUnreal_static_247_StaticClass(const UScriptStruct *);
const wchar_t * _dasUnreal_static_248_StaticPackage(const UScriptStruct *);
void _dasUnreal_static_249_StaticRegisterNativesUScriptStruct(const UScriptStruct *);
void _dasUnreal_virtual_250_Serialize(UScriptStruct & self,FArchive & Ar);
void _dasUnreal_virtual_251_Link(UScriptStruct & self,FArchive & Ar,bool bRelinkExistingProperties);
void _dasUnreal_virtual_252_InitializeStruct(const UScriptStruct & self,void * Dest,int ArrayDim);
void _dasUnreal_virtual_253_DestroyStruct(const UScriptStruct & self,void * Dest,int ArrayDim);
bool _dasUnreal_virtual_254_IsStructTrashed(const UScriptStruct & self);
void _dasUnreal_virtual_255_PrepareCppStructOps(UScriptStruct & self);
unsigned int _dasUnreal_virtual_256_GetStructTypeHash(const UScriptStruct & self,const void * Src);
void _dasUnreal_virtual_257_RecursivelyPreload(UScriptStruct & self);
FString _dasUnreal_virtual_258_GetStructCPPName(const UScriptStruct & self,unsigned int CPPExportFlags);
void _dasUnreal_virtual_259_InitializeDefaultValue(const UScriptStruct & self,unsigned char * InStructData);
UClass * _dasUnreal_static_260_StaticClass(const UFunction *);
const wchar_t * _dasUnreal_static_261_StaticPackage(const UFunction *);
void _dasUnreal_static_262_StaticRegisterNativesUFunction(const UFunction *);
void _dasUnreal_virtual_263_Serialize(UFunction & self,FArchive & Ar);
void _dasUnreal_virtual_264_PostLoad(UFunction & self);
void _dasUnreal_virtual_265_Bind(UFunction & self);
UStruct * _dasUnreal_virtual_266_GetInheritanceSuper(const UFunction & self);
void _dasUnreal_virtual_267_Link(UFunction & self,FArchive & Ar,bool bRelinkExistingProperties);
uint64 _dasUnreal_static_268_GetDefaultIgnoredSignatureCompatibilityFlags(const UFunction *);
UClass * _dasUnreal_static_269_StaticClass(const UEnum *);
const wchar_t * _dasUnreal_static_270_StaticPackage(const UEnum *);
void _dasUnreal_static_271_StaticRegisterNativesUEnum(const UEnum *);
FText _dasUnreal_virtual_272_GetDisplayNameTextByIndex(const UEnum & self,int InIndex);
FString _dasUnreal_virtual_273_GetAuthoredNameStringByIndex(const UEnum & self,int InIndex);
bool _dasUnreal_static_274_IsFullEnumName(const UEnum *,const wchar_t * InEnumName);
FString _dasUnreal_virtual_275_GenerateFullEnumName(const UEnum & self,const wchar_t * InEnumName);
int64 _dasUnreal_static_276_ParseEnum(const UEnum *,const wchar_t *& Str);
void _dasUnreal_virtual_277_Serialize(UEnum & self,FArchive & Ar);
void _dasUnreal_virtual_278_BeginDestroy(UEnum & self);
bool _dasUnreal_virtual_279_IsAbstract(const FCppClassTypeInfo & self);
UClass * _dasUnreal_static_280_StaticClass(const UClass *);
const wchar_t * _dasUnreal_static_281_StaticPackage(const UClass *);
void _dasUnreal_static_282_StaticRegisterNativesUClass(const UClass *);
void _dasUnreal_virtual_283_ConditionalRecompileClass(UClass & self,FUObjectSerializeContext * InLoadContext);
void _dasUnreal_virtual_284_FlushCompilationQueueForLevel(UClass & self);
void _dasUnreal_static_285_AssembleReferenceTokenStreams(const UClass *);
UClass * _dasUnreal_virtual_286_GetAuthoritativeClass(UClass & self);
void _dasUnreal_virtual_287_Serialize(UClass & self,FArchive & Ar);
void _dasUnreal_virtual_288_PostLoad(UClass & self);
void _dasUnreal_virtual_289_FinishDestroy(UClass & self);
void _dasUnreal_virtual_290_DeferredRegister(UClass & self,UClass * UClassStaticClass,const wchar_t * PackageName,const wchar_t * InName);
bool _dasUnreal_virtual_291_Rename(UClass & self,const wchar_t * NewName,UObject * NewOuter,unsigned int Flags);
void _dasUnreal_virtual_292_TagSubobjects(UClass & self,EObjectFlags NewFlags);
void _dasUnreal_virtual_293_PostInitProperties(UClass & self);
void _dasUnreal_static_294_AddReferencedObjects(const UClass *,UObject * InThis,FReferenceCollector & Collector);
FRestoreForUObjectOverwrite * _dasUnreal_virtual_295_GetRestoreForUObjectOverwrite(UClass & self);
FString _dasUnreal_virtual_296_GetDesc(UClass & self);
bool _dasUnreal_virtual_297_IsAsset(const UClass & self);
bool _dasUnreal_virtual_298_IsNameStableForNetworking(const UClass & self);
void _dasUnreal_virtual_299_Bind(UClass & self);
const wchar_t * _dasUnreal_virtual_300_GetPrefixCPP(const UClass & self);
void _dasUnreal_virtual_301_Link(UClass & self,FArchive & Ar,bool bRelinkExistingProperties);
void _dasUnreal_virtual_302_SetSuperStruct(UClass & self,UStruct * NewSuperStruct);
bool _dasUnreal_virtual_303_IsStructTrashed(const UClass & self);
void _dasUnreal_virtual_304_PostLoadInstance(UClass & self,UObject * InObj);
void _dasUnreal_virtual_305_InitPropertiesFromCustomList(UClass & self,unsigned char * DataPtr,const unsigned char * DefaultDataPtr);
bool _dasUnreal_virtual_306_CanCreateAssetOfClass(const UClass & self);
unsigned char * _dasUnreal_virtual_307_GetPersistentUberGraphFrame(const UClass & self,UObject * Obj,UFunction * FuncToCheck);
void _dasUnreal_virtual_308_CreatePersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bCreateOnlyIfEmpty,bool bSkipSuperClass,UClass * OldClass);
void _dasUnreal_virtual_309_DestroyPersistentUberGraphFrame(const UClass & self,UObject * Obj,bool bSkipSuperClass);
void _dasUnreal_virtual_310_PostLoadDefaultObject(UClass & self,UObject * Object);
void _dasUnreal_virtual_311_PurgeClass(UClass & self,bool bRecompilingOnLoad);
UClass * _dasUnreal_static_312_FindCommonBase(const UClass *,UClass * InClassA,UClass * InClassB);
bool _dasUnreal_virtual_313_IsFunctionImplementedInScript(const UClass & self,FName InFunctionName);
bool _dasUnreal_virtual_314_HasProperty(const UClass & self,FProperty * InProperty);
UObject * _dasUnreal_virtual_315_FindArchetype(const UClass & self,const UClass * ArchetypeClass,const FName ArchetypeName);
UObject * _dasUnreal_virtual_316_GetArchetypeForCDO(const UClass & self);
bool _dasUnreal_static_317_IsSafeToSerializeToStructuredArchives(const UClass *,UClass * InClass);
UClass * _dasUnreal_static_318_StaticClass(const UPackage *);
const wchar_t * _dasUnreal_static_319_StaticPackage(const UPackage *);
void _dasUnreal_static_320_StaticRegisterNativesUPackage(const UPackage *);
bool _dasUnreal_virtual_321_IsNameStableForNetworking(const UPackage & self);
bool _dasUnreal_virtual_322_NeedsLoadForClient(const UPackage & self);
bool _dasUnreal_virtual_323_NeedsLoadForServer(const UPackage & self);
bool _dasUnreal_virtual_324_IsPostLoadThreadSafe(const UPackage & self);
bool _dasUnreal_virtual_325_IsDestructionThreadSafe(const UPackage & self);
void _dasUnreal_virtual_326_PostInitProperties(UPackage & self);
void _dasUnreal_virtual_327_FinishDestroy(UPackage & self);
void _dasUnreal_virtual_328_Serialize(UPackage & self,FArchive & Ar);
bool _dasUnreal_virtual_329_IsAsset(const UPackage & self);
void _dasUnreal_static_330_AddReferencedObjects(const UPackage *,UObject * InThis,FReferenceCollector & Collector);
void _dasUnreal_virtual_331_TagSubobjects(UPackage & self,EObjectFlags NewFlags);
void _dasUnreal_static_332_WaitForAsyncFileWrites(const UPackage *);
bool _dasUnreal_static_333_HasAsyncFileWrites(const UPackage *);
bool _dasUnreal_static_334_IsEmptyPackage(const UPackage *,UPackage * Package,const UObject * LastReferencer);
FFieldClass * _dasUnreal_static_335_StaticClass(const FProperty *);
uint64 _dasUnreal_static_336_StaticClassCastFlagsPrivate(const FProperty *);
uint64 _dasUnreal_static_337_StaticClassCastFlags(const FProperty *);
void _dasUnreal_virtual_338_Serialize(FProperty & self,FArchive & Ar);
void _dasUnreal_virtual_339_PostDuplicate(FProperty & self,const FField & InField);
FName _dasUnreal_static_340_FindRedirectedPropertyName(const FProperty *,UStruct * ObjectStruct,FName OldName);
FString _dasUnreal_virtual_341_GetCPPMacroType(const FProperty & self,FString & ExtendedTypeText);
bool _dasUnreal_virtual_342_PassCPPArgsByRef(const FProperty & self);
FString _dasUnreal_virtual_343_GetCPPType(const FProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_344_GetCPPTypeForwardDeclaration(const FProperty & self);
bool _dasUnreal_virtual_345_HasSetter(const FProperty & self);
bool _dasUnreal_virtual_346_HasGetter(const FProperty & self);
bool _dasUnreal_virtual_347_HasSetterOrGetter(const FProperty & self);
void _dasUnreal_virtual_348_CallSetter(const FProperty & self,void * Container,const void * InValue);
void _dasUnreal_virtual_349_CallGetter(const FProperty & self,const void * Container,void * OutValue);
bool _dasUnreal_virtual_350_Identical(const FProperty & self,const void * A,const void * B,unsigned int PortFlags);
bool _dasUnreal_virtual_351_SupportsNetSharedSerialization(const FProperty & self);
void * _dasUnreal_virtual_352_GetValueAddressAtIndex_Direct(const FProperty & self,const FProperty * Inner,void * InValueAddress,int Index);
void _dasUnreal_virtual_353_AppendSchemaHash(const FProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
void _dasUnreal_virtual_354_CopySingleValueToScriptVM(const FProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_355_CopyCompleteValueToScriptVM(const FProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_356_CopyCompleteValueToScriptVM_InContainer(const FProperty & self,void * OutValue,const void * InContainer);
void _dasUnreal_virtual_357_CopyCompleteValueFromScriptVM_InContainer(const FProperty & self,void * OutContainer,const void * InValue);
void _dasUnreal_virtual_358_CopySingleValueFromScriptVM(const FProperty & self,void * Dest,const void * Src);
void _dasUnreal_virtual_359_CopyCompleteValueFromScriptVM(const FProperty & self,void * Dest,const void * Src);
FName _dasUnreal_virtual_360_GetID(const FProperty & self);
int _dasUnreal_virtual_361_GetMinAlignment(const FProperty & self);
bool _dasUnreal_virtual_362_SameType(const FProperty & self,const FProperty * Other);
FFieldClass * _dasUnreal_static_363_StaticClass(const FNumericProperty *);
FField * _dasUnreal_static_364_Construct(const FNumericProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_365_StaticClassCastFlagsPrivate(const FNumericProperty *);
uint64 _dasUnreal_static_366_StaticClassCastFlags(const FNumericProperty *);
const wchar_t * _dasUnreal_virtual_367_ImportText_Internal(const FNumericProperty & self,const wchar_t * Buffer,void * ContainerOrPropertyPtr,EPropertyPointerType PropertyPointerType,UObject * Parent,int PortFlags,FOutputDevice * ErrorText);
void _dasUnreal_virtual_368_ExportText_Internal(const FNumericProperty & self,FString & ValueStr,const void * PropertyValueOrContainer,EPropertyPointerType PropertyPointerType,const void * DefaultValue,UObject * Parent,int PortFlags,UObject * ExportRootScope);
bool _dasUnreal_virtual_369_IsFloatingPoint(const FNumericProperty & self);
bool _dasUnreal_virtual_370_IsInteger(const FNumericProperty & self);
UEnum * _dasUnreal_virtual_371_GetIntPropertyEnum(const FNumericProperty & self);
void _dasUnreal_virtual_372_SetIntPropertyValue(const FNumericProperty & self,void * Data,uint64 Value);
void _dasUnreal_virtual_373_SetIntPropertyValue(const FNumericProperty & self,void * Data,int64 Value);
void _dasUnreal_virtual_374_SetFloatingPointPropertyValue(const FNumericProperty & self,void * Data,double Value);
void _dasUnreal_virtual_375_SetNumericPropertyValueFromString(const FNumericProperty & self,void * Data,const wchar_t * Value);
void _dasUnreal_virtual_376_SetNumericPropertyValueFromString_InContainer(const FNumericProperty & self,void * Container,const wchar_t * Value);
int64 _dasUnreal_virtual_377_GetSignedIntPropertyValue(const FNumericProperty & self,const void * Data);
int64 _dasUnreal_virtual_378_GetSignedIntPropertyValue_InContainer(const FNumericProperty & self,const void * Container);
uint64 _dasUnreal_virtual_379_GetUnsignedIntPropertyValue(const FNumericProperty & self,const void * Data);
uint64 _dasUnreal_virtual_380_GetUnsignedIntPropertyValue_InContainer(const FNumericProperty & self,const void * Container);
double _dasUnreal_virtual_381_GetFloatingPointPropertyValue(const FNumericProperty & self,const void * Data);
FString _dasUnreal_virtual_382_GetNumericPropertyValueToString(const FNumericProperty & self,const void * Data);
FString _dasUnreal_virtual_383_GetNumericPropertyValueToString_InContainer(const FNumericProperty & self,const void * Container);
FFieldClass * _dasUnreal_static_384_StaticClass(const FByteProperty *);
FField * _dasUnreal_static_385_Construct(const FByteProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_386_StaticClassCastFlagsPrivate(const FByteProperty *);
uint64 _dasUnreal_static_387_StaticClassCastFlags(const FByteProperty *);
void _dasUnreal_virtual_388_Serialize(FByteProperty & self,FArchive & Ar);
void _dasUnreal_virtual_389_AddReferencedObjects(FByteProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_390_PostDuplicate(FByteProperty & self,const FField & InField);
FString _dasUnreal_virtual_391_GetCPPType(const FByteProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
void _dasUnreal_virtual_392_AppendSchemaHash(const FByteProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
UEnum * _dasUnreal_virtual_393_GetIntPropertyEnum(const FByteProperty & self);
FFieldClass * _dasUnreal_static_394_StaticClass(const FInt8Property *);
FField * _dasUnreal_static_395_Construct(const FInt8Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_396_StaticClassCastFlagsPrivate(const FInt8Property *);
uint64 _dasUnreal_static_397_StaticClassCastFlags(const FInt8Property *);
FFieldClass * _dasUnreal_static_398_StaticClass(const FInt16Property *);
FField * _dasUnreal_static_399_Construct(const FInt16Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_400_StaticClassCastFlagsPrivate(const FInt16Property *);
uint64 _dasUnreal_static_401_StaticClassCastFlags(const FInt16Property *);
FFieldClass * _dasUnreal_static_402_StaticClass(const FIntProperty *);
FField * _dasUnreal_static_403_Construct(const FIntProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_404_StaticClassCastFlagsPrivate(const FIntProperty *);
uint64 _dasUnreal_static_405_StaticClassCastFlags(const FIntProperty *);
FFieldClass * _dasUnreal_static_406_StaticClass(const FInt64Property *);
FField * _dasUnreal_static_407_Construct(const FInt64Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_408_StaticClassCastFlagsPrivate(const FInt64Property *);
uint64 _dasUnreal_static_409_StaticClassCastFlags(const FInt64Property *);
FFieldClass * _dasUnreal_static_410_StaticClass(const FUInt16Property *);
FField * _dasUnreal_static_411_Construct(const FUInt16Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_412_StaticClassCastFlagsPrivate(const FUInt16Property *);
uint64 _dasUnreal_static_413_StaticClassCastFlags(const FUInt16Property *);
FFieldClass * _dasUnreal_static_414_StaticClass(const FUInt32Property *);
FField * _dasUnreal_static_415_Construct(const FUInt32Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_416_StaticClassCastFlagsPrivate(const FUInt32Property *);
uint64 _dasUnreal_static_417_StaticClassCastFlags(const FUInt32Property *);
FFieldClass * _dasUnreal_static_418_StaticClass(const FUInt64Property *);
FField * _dasUnreal_static_419_Construct(const FUInt64Property *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_420_StaticClassCastFlagsPrivate(const FUInt64Property *);
uint64 _dasUnreal_static_421_StaticClassCastFlags(const FUInt64Property *);
FFieldClass * _dasUnreal_static_422_StaticClass(const FFloatProperty *);
FField * _dasUnreal_static_423_Construct(const FFloatProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_424_StaticClassCastFlagsPrivate(const FFloatProperty *);
uint64 _dasUnreal_static_425_StaticClassCastFlags(const FFloatProperty *);
FFieldClass * _dasUnreal_static_426_StaticClass(const FDoubleProperty *);
FField * _dasUnreal_static_427_Construct(const FDoubleProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_428_StaticClassCastFlagsPrivate(const FDoubleProperty *);
uint64 _dasUnreal_static_429_StaticClassCastFlags(const FDoubleProperty *);
FFieldClass * _dasUnreal_static_430_StaticClass(const FBoolProperty *);
FField * _dasUnreal_static_431_Construct(const FBoolProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_432_StaticClassCastFlagsPrivate(const FBoolProperty *);
uint64 _dasUnreal_static_433_StaticClassCastFlags(const FBoolProperty *);
void _dasUnreal_virtual_434_Serialize(FBoolProperty & self,FArchive & Ar);
void _dasUnreal_virtual_435_PostDuplicate(FBoolProperty & self,const FField & InField);
FString _dasUnreal_virtual_436_GetCPPType(const FBoolProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_437_GetCPPMacroType(const FBoolProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_438_GetCPPTypeForwardDeclaration(const FBoolProperty & self);
void _dasUnreal_virtual_439_LinkInternal(FBoolProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_440_Identical(const FBoolProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_441_CopyValuesInternal(const FBoolProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_442_ClearValueInternal(const FBoolProperty & self,void * Data);
void _dasUnreal_virtual_443_InitializeValueInternal(const FBoolProperty & self,void * Dest);
int _dasUnreal_virtual_444_GetMinAlignment(const FBoolProperty & self);
void _dasUnreal_virtual_445_AppendSchemaHash(const FBoolProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
bool _dasUnreal_static_446_GetDefaultPropertyValue(const FBoolProperty *);
unsigned int _dasUnreal_virtual_447_GetValueTypeHashInternal(const FBoolProperty & self,const void * Src);
FFieldClass * _dasUnreal_static_448_StaticClass(const FObjectPropertyBase *);
FField * _dasUnreal_static_449_Construct(const FObjectPropertyBase *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_450_StaticClassCastFlagsPrivate(const FObjectPropertyBase *);
uint64 _dasUnreal_static_451_StaticClassCastFlags(const FObjectPropertyBase *);
void _dasUnreal_virtual_452_Serialize(FObjectPropertyBase & self,FArchive & Ar);
void _dasUnreal_virtual_453_AddReferencedObjects(FObjectPropertyBase & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_454_BeginDestroy(FObjectPropertyBase & self);
void _dasUnreal_virtual_455_PostDuplicate(FObjectPropertyBase & self,const FField & InField);
bool _dasUnreal_virtual_456_Identical(const FObjectPropertyBase & self,const void * A,const void * B,unsigned int PortFlags);
bool _dasUnreal_virtual_457_SupportsNetSharedSerialization(const FObjectPropertyBase & self);
FName _dasUnreal_virtual_458_GetID(const FObjectPropertyBase & self);
bool _dasUnreal_virtual_459_SameType(const FObjectPropertyBase & self,const FProperty * Other);
FString _dasUnreal_virtual_460_GetCPPTypeCustom(const FObjectPropertyBase & self,FString * ExtendedTypeText,unsigned int CPPExportFlags,const FString & InnerNativeTypeName);
bool _dasUnreal_static_461_StaticIdentical(const FObjectPropertyBase *,UObject * A,UObject * B,unsigned int PortFlags);
UObject * _dasUnreal_virtual_462_LoadObjectPropertyValue(const FObjectPropertyBase & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_463_GetObjectPropertyValue(const FObjectPropertyBase & self,const void * PropertyValueAddress);
UObject * _dasUnreal_virtual_464_GetObjectPropertyValue_InContainer(const FObjectPropertyBase & self,const void * ContainerAddress,int ArrayIndex);
void _dasUnreal_virtual_465_SetObjectPropertyValue(const FObjectPropertyBase & self,void * PropertyValueAddress,UObject * Value);
void _dasUnreal_virtual_466_SetObjectPropertyValue_InContainer(const FObjectPropertyBase & self,void * ContainerAddress,UObject * Value,int ArrayIndex);
FFieldClass * _dasUnreal_static_467_StaticClass(const FStrProperty *);
FField * _dasUnreal_static_468_Construct(const FStrProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_469_StaticClassCastFlagsPrivate(const FStrProperty *);
uint64 _dasUnreal_static_470_StaticClassCastFlags(const FStrProperty *);
FString _dasUnreal_virtual_471_GetCPPTypeForwardDeclaration(const FStrProperty & self);
unsigned int _dasUnreal_virtual_472_GetValueTypeHashInternal(const FStrProperty & self,const void * Src);
FFieldClass * _dasUnreal_static_473_StaticClass(const FArrayProperty *);
FField * _dasUnreal_static_474_Construct(const FArrayProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_475_StaticClassCastFlagsPrivate(const FArrayProperty *);
uint64 _dasUnreal_static_476_StaticClassCastFlags(const FArrayProperty *);
void _dasUnreal_virtual_477_Serialize(FArrayProperty & self,FArchive & Ar);
void _dasUnreal_virtual_478_AddReferencedObjects(FArrayProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_479_PostDuplicate(FArrayProperty & self,const FField & InField);
void _dasUnreal_virtual_480_AddCppProperty(FArrayProperty & self,FProperty * Property);
FField * _dasUnreal_virtual_481_GetInnerFieldByName(FArrayProperty & self,const FName & InName);
FString _dasUnreal_virtual_482_GetCPPMacroType(const FArrayProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_483_GetCPPType(const FArrayProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_484_GetCPPTypeForwardDeclaration(const FArrayProperty & self);
void _dasUnreal_virtual_485_LinkInternal(FArrayProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_486_Identical(const FArrayProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_487_InitializeValueInternal(const FArrayProperty & self,void * Dest);
void _dasUnreal_virtual_488_CopyValuesInternal(const FArrayProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_489_ClearValueInternal(const FArrayProperty & self,void * Data);
void _dasUnreal_virtual_490_DestroyValueInternal(const FArrayProperty & self,void * Dest);
bool _dasUnreal_virtual_491_PassCPPArgsByRef(const FArrayProperty & self);
bool _dasUnreal_virtual_492_SameType(const FArrayProperty & self,const FProperty * Other);
int _dasUnreal_virtual_493_GetMinAlignment(const FArrayProperty & self);
void * _dasUnreal_virtual_494_GetValueAddressAtIndex_Direct(const FArrayProperty & self,const FProperty * Inner,void * InValueAddress,int Index);
void _dasUnreal_static_495_ExportTextInnerItem(const FArrayProperty *,FString & ValueStr,const FProperty * Inner,const void * PropertyValue,int PropertySize,const void * DefaultValue,int DefaultSize,UObject * Parent,int PortFlags,UObject * ExportRootScope);
void _dasUnreal_virtual_496_AppendSchemaHash(const FArrayProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FFieldClass * _dasUnreal_static_497_StaticClass(const FMapProperty *);
FField * _dasUnreal_static_498_Construct(const FMapProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_499_StaticClassCastFlagsPrivate(const FMapProperty *);
uint64 _dasUnreal_static_500_StaticClassCastFlags(const FMapProperty *);
void _dasUnreal_virtual_501_Serialize(FMapProperty & self,FArchive & Ar);
void _dasUnreal_virtual_502_AddReferencedObjects(FMapProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_503_PostDuplicate(FMapProperty & self,const FField & InField);
FField * _dasUnreal_virtual_504_GetInnerFieldByName(FMapProperty & self,const FName & InName);
void _dasUnreal_virtual_505_AddCppProperty(FMapProperty & self,FProperty * Property);
FString _dasUnreal_virtual_506_GetCPPMacroType(const FMapProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_507_GetCPPType(const FMapProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_508_GetCPPTypeForwardDeclaration(const FMapProperty & self);
void _dasUnreal_virtual_509_LinkInternal(FMapProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_510_Identical(const FMapProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_511_InitializeValueInternal(const FMapProperty & self,void * Dest);
void _dasUnreal_virtual_512_CopyValuesInternal(const FMapProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_513_ClearValueInternal(const FMapProperty & self,void * Data);
void _dasUnreal_virtual_514_DestroyValueInternal(const FMapProperty & self,void * Dest);
bool _dasUnreal_virtual_515_PassCPPArgsByRef(const FMapProperty & self);
bool _dasUnreal_virtual_516_SameType(const FMapProperty & self,const FProperty * Other);
void * _dasUnreal_virtual_517_GetValueAddressAtIndex_Direct(const FMapProperty & self,const FProperty * Inner,void * InValueAddress,int Index);
void _dasUnreal_virtual_518_AppendSchemaHash(const FMapProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FFieldClass * _dasUnreal_static_519_StaticClass(const FSetProperty *);
FField * _dasUnreal_static_520_Construct(const FSetProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_521_StaticClassCastFlagsPrivate(const FSetProperty *);
uint64 _dasUnreal_static_522_StaticClassCastFlags(const FSetProperty *);
void _dasUnreal_virtual_523_Serialize(FSetProperty & self,FArchive & Ar);
void _dasUnreal_virtual_524_AddReferencedObjects(FSetProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_525_PostDuplicate(FSetProperty & self,const FField & InField);
FField * _dasUnreal_virtual_526_GetInnerFieldByName(FSetProperty & self,const FName & InName);
void _dasUnreal_virtual_527_AddCppProperty(FSetProperty & self,FProperty * Property);
FString _dasUnreal_virtual_528_GetCPPMacroType(const FSetProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_529_GetCPPType(const FSetProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_530_GetCPPTypeForwardDeclaration(const FSetProperty & self);
void _dasUnreal_virtual_531_LinkInternal(FSetProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_532_Identical(const FSetProperty & self,const void * A,const void * B,unsigned int PortFlags);
void _dasUnreal_virtual_533_CopyValuesInternal(const FSetProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_534_ClearValueInternal(const FSetProperty & self,void * Data);
void _dasUnreal_virtual_535_DestroyValueInternal(const FSetProperty & self,void * Dest);
bool _dasUnreal_virtual_536_PassCPPArgsByRef(const FSetProperty & self);
bool _dasUnreal_virtual_537_SameType(const FSetProperty & self,const FProperty * Other);
void * _dasUnreal_virtual_538_GetValueAddressAtIndex_Direct(const FSetProperty & self,const FProperty * Inner,void * InValueAddress,int Index);
void _dasUnreal_virtual_539_AppendSchemaHash(const FSetProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FFieldClass * _dasUnreal_static_540_StaticClass(const FStructProperty *);
FField * _dasUnreal_static_541_Construct(const FStructProperty *,const FFieldVariant & InOwner,const FName & InName,EObjectFlags InObjectFlags);
uint64 _dasUnreal_static_542_StaticClassCastFlagsPrivate(const FStructProperty *);
uint64 _dasUnreal_static_543_StaticClassCastFlags(const FStructProperty *);
void _dasUnreal_virtual_544_Serialize(FStructProperty & self,FArchive & Ar);
void _dasUnreal_virtual_545_AddReferencedObjects(FStructProperty & self,FReferenceCollector & Collector);
void _dasUnreal_virtual_546_PostDuplicate(FStructProperty & self,const FField & InField);
FString _dasUnreal_virtual_547_GetCPPMacroType(const FStructProperty & self,FString & ExtendedTypeText);
FString _dasUnreal_virtual_548_GetCPPType(const FStructProperty & self,FString * ExtendedTypeText,unsigned int CPPExportFlags);
FString _dasUnreal_virtual_549_GetCPPTypeForwardDeclaration(const FStructProperty & self);
void _dasUnreal_virtual_550_LinkInternal(FStructProperty & self,FArchive & Ar);
bool _dasUnreal_virtual_551_Identical(const FStructProperty & self,const void * A,const void * B,unsigned int PortFlags);
bool _dasUnreal_virtual_552_SupportsNetSharedSerialization(const FStructProperty & self);
void _dasUnreal_virtual_553_CopyValuesInternal(const FStructProperty & self,void * Dest,const void * Src,int Count);
void _dasUnreal_virtual_554_ClearValueInternal(const FStructProperty & self,void * Data);
void _dasUnreal_virtual_555_DestroyValueInternal(const FStructProperty & self,void * Dest);
void _dasUnreal_virtual_556_InitializeValueInternal(const FStructProperty & self,void * Dest);
int _dasUnreal_virtual_557_GetMinAlignment(const FStructProperty & self);
bool _dasUnreal_virtual_558_SameType(const FStructProperty & self,const FProperty * Other);
void _dasUnreal_virtual_559_AppendSchemaHash(const FStructProperty & self,FBlake3 & Builder,bool bSkipEditorOnly);
FProperty * _dasUnreal_static_560_GetNextPropertyAndAdvance(const FCustomPropertyListNode *,const FCustomPropertyListNode *& Node);
UClass * _dasUnreal_static_561_StaticClass(const UPropertyWrapper *);
const wchar_t * _dasUnreal_static_562_StaticPackage(const UPropertyWrapper *);
void _dasUnreal_static_563_StaticRegisterNativesUPropertyWrapper(const UPropertyWrapper *);
void _dasUnreal_virtual_564_Serialize(FFrame & self,const wchar_t * V,ELogVerbosity::Type Verbosity,const FName & Category);
void _dasUnreal_static_565_KismetExecutionMessage(const FFrame *,const wchar_t * Message,ELogVerbosity::Type Verbosity,FName WarningId);
FFrame * _dasUnreal_static_566_PushThreadLocalTopStackFrame(const FFrame *,FFrame * NewTopStackFrame);
void _dasUnreal_static_567_PopThreadLocalTopStackFrame(const FFrame *,FFrame * NewTopStackFrame);
FFrame * _dasUnreal_static_568_GetThreadLocalTopStackFrame(const FFrame *);
UClass * _dasUnreal_static_569_StaticClass(const UBlueprintFunctionLibrary *);
const wchar_t * _dasUnreal_static_570_StaticPackage(const UBlueprintFunctionLibrary *);
int _dasUnreal_virtual_571_GetFunctionCallspace(UBlueprintFunctionLibrary & self,UFunction * Function,FFrame * Stack);
UClass * _dasUnreal_static_572_StaticClass(const UKismetArrayLibrary *);
const wchar_t * _dasUnreal_static_573_StaticPackage(const UKismetArrayLibrary *);
int _dasUnreal_static_574_GenericArray_Add(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,const void * NewItem);
int _dasUnreal_static_575_GenericArray_AddUnique(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,const void * NewItem);
void _dasUnreal_static_576_GenericArray_Shuffle(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp);
bool _dasUnreal_static_577_GenericArray_Identical(const UKismetArrayLibrary *,void * ArrayA,const FArrayProperty * ArrayAProp,void * ArrayB,const FArrayProperty * ArrayBProperty);
void _dasUnreal_static_578_GenericArray_Append(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * TargetArrayProp,void * SourceArray,const FArrayProperty * SourceArrayProperty);
void _dasUnreal_static_579_GenericArray_Insert(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,const void * NewItem,int Index);
void _dasUnreal_static_580_GenericArray_Remove(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,int IndexToRemove);
bool _dasUnreal_static_581_GenericArray_RemoveItem(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,const void * Item);
void _dasUnreal_static_582_GenericArray_Clear(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp);
void _dasUnreal_static_583_GenericArray_Resize(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,int Size);
void _dasUnreal_static_584_GenericArray_Reverse(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp);
int _dasUnreal_static_585_GenericArray_Length(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp);
bool _dasUnreal_static_586_GenericArray_IsEmpty(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp);
bool _dasUnreal_static_587_GenericArray_IsNotEmpty(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp);
int _dasUnreal_static_588_GenericArray_LastIndex(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp);
void _dasUnreal_static_589_GenericArray_Get(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,int Index,void * Item);
void _dasUnreal_static_590_GenericArray_Set(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,int Index,const void * NewItem,bool bSizeToFit);
void _dasUnreal_static_591_GenericArray_Swap(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp,int First,int Second);
int _dasUnreal_static_592_GenericArray_Find(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProperty,const void * ItemToFind);
void _dasUnreal_static_593_GenericArray_SetArrayPropertyByName(const UKismetArrayLibrary *,UObject * OwnerObject,FName ArrayPropertyName,const void * SrcArrayAddr);
void _dasUnreal_static_594_GenericArray_Random(const UKismetArrayLibrary *,void * TargetArray,const FArrayProperty * ArrayProp,void * OutItem,int * OutIndex);
bool _dasUnreal_static_595_GenericArray_IsValidIndex(const UKismetArrayLibrary *,const void * TargetArray,const FArrayProperty * ArrayProp,int IndexToTest);
